{"allSourcePaths": {"0": "contracts/FundMePunks.sol"}, "bytecode": "60c06040526005608081905264173539b7b760d91b60a09081526200002891600c9190620001fc565b506005600f556010805460ff191660011790553480156200004857600080fd5b5060405162002842380380620028428339810160408190526200006b916200036f565b85518690869062000084906000906020850190620001fc565b5080516200009a906001906020840190620001fc565b505050620000b7620000b1620000e360201b60201c565b620000e7565b600d849055600e839055620000cc8262000139565b620000d781620001a1565b50505050505062000477565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600a546001600160a01b03163314620001885760405162461bcd60e51b815260206004820181905260248201526000805160206200282283398151915260448201526064015b60405180910390fd5b80516200019d90600b906020840190620001fc565b5050565b600a546001600160a01b03163314620001ec5760405162461bcd60e51b815260206004820181905260248201526000805160206200282283398151915260448201526064016200017f565b80516200019d9060119060208401905b8280546200020a906200043a565b90600052602060002090601f0160209004810192826200022e576000855562000279565b82601f106200024957805160ff191683800117855562000279565b8280016001018555821562000279579182015b82811115620002795782518255916020019190600101906200025c565b50620002879291506200028b565b5090565b5b808211156200028757600081556001016200028c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002ca57600080fd5b81516001600160401b0380821115620002e757620002e7620002a2565b604051601f8301601f19908116603f01168101908282118183101715620003125762000312620002a2565b816040528381526020925086838588010111156200032f57600080fd5b600091505b8382101562000353578582018301518183018401529082019062000334565b83821115620003655760008385830101525b9695505050505050565b60008060008060008060c087890312156200038957600080fd5b86516001600160401b0380821115620003a157600080fd5b620003af8a838b01620002b8565b97506020890151915080821115620003c657600080fd5b620003d48a838b01620002b8565b965060408901519550606089015194506080890151915080821115620003f957600080fd5b620004078a838b01620002b8565b935060a08901519150808211156200041e57600080fd5b506200042d89828a01620002b8565b9150509295509295509295565b600181811c908216806200044f57607f821691505b602082108114156200047157634e487b7160e01b600052602260045260246000fd5b50919050565b61239b80620004876000396000f3fe6080604052600436106101f95760003560e01c806355f804b31161010d578063a22cb465116100a0578063d5abeb011161006f578063d5abeb0114610572578063da3ef23f14610588578063e985e9c5146105a8578063f2c4ce1e146105f1578063f2fde38b1461061157600080fd5b8063a22cb465146104fd578063b88d4fde1461051d578063c66828621461053d578063c87b56dd1461055257600080fd5b80637f00c7a6116100dc5780637f00c7a6146104975780638da5cb5b146104b757806395d89b41146104d5578063a0712d68146104ea57600080fd5b806355f804b3146104225780636352211e1461044257806370a0823114610462578063715018a61461048257600080fd5b806323b872dd11610190578063438b63001161015f578063438b63001461037b57806344a0d68a146103a857806349a5980a146103c85780634f6ccce7146103e857806354214f691461040857600080fd5b806323b872dd146103135780632f745c59146103335780633ccfd60b1461035357806342842e0e1461035b57600080fd5b8063095ea7b3116101cc578063095ea7b3146102a257806313faede6146102c457806318160ddd146102e8578063239c70ae146102fd57600080fd5b806301ffc9a7146101fe57806306fdde0314610233578063081812fc14610255578063081c8c441461028d575b600080fd5b34801561020a57600080fd5b5061021e610219366004611cf0565b610631565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061024861065c565b60405161022a9190611d65565b34801561026157600080fd5b50610275610270366004611d78565b6106ee565b6040516001600160a01b03909116815260200161022a565b34801561029957600080fd5b50610248610788565b3480156102ae57600080fd5b506102c26102bd366004611dad565b610816565b005b3480156102d057600080fd5b506102da600d5481565b60405190815260200161022a565b3480156102f457600080fd5b506008546102da565b34801561030957600080fd5b506102da600f5481565b34801561031f57600080fd5b506102c261032e366004611dd7565b61092c565b34801561033f57600080fd5b506102da61034e366004611dad565b61095d565b6102c26109f3565b34801561036757600080fd5b506102c2610376366004611dd7565b610a75565b34801561038757600080fd5b5061039b610396366004611e13565b610a90565b60405161022a9190611e2e565b3480156103b457600080fd5b506102c26103c3366004611d78565b610b32565b3480156103d457600080fd5b506102c26103e3366004611e82565b610b61565b3480156103f457600080fd5b506102da610403366004611d78565b610b9e565b34801561041457600080fd5b5060105461021e9060ff1681565b34801561042e57600080fd5b506102c261043d366004611f29565b610c31565b34801561044e57600080fd5b5061027561045d366004611d78565b610c72565b34801561046e57600080fd5b506102da61047d366004611e13565b610ce9565b34801561048e57600080fd5b506102c2610d70565b3480156104a357600080fd5b506102c26104b2366004611d78565b610da6565b3480156104c357600080fd5b50600a546001600160a01b0316610275565b3480156104e157600080fd5b50610248610dd5565b6102c26104f8366004611d78565b610de4565b34801561050957600080fd5b506102c2610518366004611f72565b610ed8565b34801561052957600080fd5b506102c2610538366004611fa5565b610f9d565b34801561054957600080fd5b50610248610fd5565b34801561055e57600080fd5b5061024861056d366004611d78565b610fe2565b34801561057e57600080fd5b506102da600e5481565b34801561059457600080fd5b506102c26105a3366004611f29565b61115c565b3480156105b457600080fd5b5061021e6105c3366004612021565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105fd57600080fd5b506102c261060c366004611f29565b611199565b34801561061d57600080fd5b506102c261062c366004611e13565b6111d6565b60006001600160e01b0319821663780e9d6360e01b148061065657506106568261126e565b92915050565b60606000805461066b9061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546106979061204b565b80156106e45780601f106106b9576101008083540402835291602001916106e4565b820191906000526020600020905b8154815290600101906020018083116106c757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661076c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b601180546107959061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546107c19061204b565b801561080e5780601f106107e35761010080835404028352916020019161080e565b820191906000526020600020905b8154815290600101906020018083116107f157829003601f168201915b505050505081565b600061082182610c72565b9050806001600160a01b0316836001600160a01b0316141561088f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610763565b336001600160a01b03821614806108ab57506108ab81336105c3565b61091d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610763565b61092783836112be565b505050565b610936338261132c565b6109525760405162461bcd60e51b815260040161076390612086565b610927838383611423565b600061096883610ce9565b82106109ca5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610763565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610a1d5760405162461bcd60e51b8152600401610763906120d7565b604051600090339047908381818185875af1925050503d8060008114610a5f576040519150601f19603f3d011682016040523d82523d6000602084013e610a64565b606091505b5050905080610a7257600080fd5b50565b61092783838360405180602001604052806000815250610f9d565b60606000610a9d83610ce9565b905060008167ffffffffffffffff811115610aba57610aba611e9d565b604051908082528060200260200182016040528015610ae3578160200160208202803683370190505b50905060005b82811015610b2a57610afb858261095d565b828281518110610b0d57610b0d61210c565b602090810291909101015280610b2281612138565b915050610ae9565b509392505050565b600a546001600160a01b03163314610b5c5760405162461bcd60e51b8152600401610763906120d7565b600d55565b600a546001600160a01b03163314610b8b5760405162461bcd60e51b8152600401610763906120d7565b6010805460ff1916911515919091179055565b6000610ba960085490565b8210610c0c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610763565b60088281548110610c1f57610c1f61210c565b90600052602060002001549050919050565b600a546001600160a01b03163314610c5b5760405162461bcd60e51b8152600401610763906120d7565b8051610c6e90600b906020840190611c41565b5050565b6000818152600260205260408120546001600160a01b0316806106565760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610763565b60006001600160a01b038216610d545760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610763565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610d9a5760405162461bcd60e51b8152600401610763906120d7565b610da460006115ce565b565b600a546001600160a01b03163314610dd05760405162461bcd60e51b8152600401610763906120d7565b600f55565b60606001805461066b9061204b565b610ded33610ce9565b600514610e3c5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792035206d696e7420706572206163636f756e740000000000000000006044820152606401610763565b6000610e4760085490565b905060008211610e5657600080fd5b600f54821115610e6557600080fd5b600e54610e728383612153565b1115610e7d57600080fd5b600a546001600160a01b03163314610ea95781600d54610e9d919061216b565b341015610ea957600080fd5b60015b82811161092757610ec633610ec18385612153565b611620565b80610ed081612138565b915050610eac565b6001600160a01b038216331415610f315760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610763565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fa7338361132c565b610fc35760405162461bcd60e51b815260040161076390612086565b610fcf8484848461163a565b50505050565b600c80546107959061204b565b6000818152600260205260409020546060906001600160a01b03166110615760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610763565b60105460ff166110fd57601180546110789061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a49061204b565b80156110f15780601f106110c6576101008083540402835291602001916110f1565b820191906000526020600020905b8154815290600101906020018083116110d457829003601f168201915b50505050509050919050565b600061110761166d565b905060008151116111275760405180602001604052806000815250611155565b806111318461167c565b600c6040516020016111459392919061218a565b6040516020818303038152906040525b9392505050565b600a546001600160a01b031633146111865760405162461bcd60e51b8152600401610763906120d7565b8051610c6e90600c906020840190611c41565b600a546001600160a01b031633146111c35760405162461bcd60e51b8152600401610763906120d7565b8051610c6e906011906020840190611c41565b600a546001600160a01b031633146112005760405162461bcd60e51b8152600401610763906120d7565b6001600160a01b0381166112655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610763565b610a72816115ce565b60006001600160e01b031982166380ac58cd60e01b148061129f57506001600160e01b03198216635b5e139f60e01b145b8061065657506301ffc9a760e01b6001600160e01b0319831614610656565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112f382610c72565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166113a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610763565b60006113b083610c72565b9050806001600160a01b0316846001600160a01b031614806113eb5750836001600160a01b03166113e0846106ee565b6001600160a01b0316145b8061141b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661143682610c72565b6001600160a01b03161461149e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610763565b6001600160a01b0382166115005760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610763565b61150b83838361177a565b6115166000826112be565b6001600160a01b038316600090815260036020526040812080546001929061153f90849061224e565b90915550506001600160a01b038216600090815260036020526040812080546001929061156d908490612153565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c6e828260405180602001604052806000815250611832565b611645848484611423565b61165184848484611865565b610fcf5760405162461bcd60e51b815260040161076390612265565b6060600b805461066b9061204b565b6060816116a05750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116ca57806116b481612138565b91506116c39050600a836122cd565b91506116a4565b60008167ffffffffffffffff8111156116e5576116e5611e9d565b6040519080825280601f01601f19166020018201604052801561170f576020820181803683370190505b5090505b841561141b5761172460018361224e565b9150611731600a866122e1565b61173c906030612153565b60f81b8183815181106117515761175161210c565b60200101906001600160f81b031916908160001a905350611773600a866122cd565b9450611713565b6001600160a01b0383166117d5576117d081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6117f8565b816001600160a01b0316836001600160a01b0316146117f8576117f88382611963565b6001600160a01b03821661180f5761092781611a00565b826001600160a01b0316826001600160a01b031614610927576109278282611aaf565b61183c8383611af3565b6118496000848484611865565b6109275760405162461bcd60e51b815260040161076390612265565b60006001600160a01b0384163b1561195857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118a99033908990889088906004016122f5565b6020604051808303816000875af19250505080156118e4575060408051601f3d908101601f191682019092526118e191810190612332565b60015b61193e573d808015611912576040519150601f19603f3d011682016040523d82523d6000602084013e611917565b606091505b5080516119365760405162461bcd60e51b815260040161076390612265565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061141b565b506001949350505050565b6000600161197084610ce9565b61197a919061224e565b6000838152600760205260409020549091508082146119cd576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a129060019061224e565b60008381526009602052604081205460088054939450909284908110611a3a57611a3a61210c565b906000526020600020015490508060088381548110611a5b57611a5b61210c565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a9357611a9361234f565b6001900381819060005260206000200160009055905550505050565b6000611aba83610ce9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b495760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610763565b6000818152600260205260409020546001600160a01b031615611bae5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610763565b611bba6000838361177a565b6001600160a01b0382166000908152600360205260408120805460019290611be3908490612153565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611c4d9061204b565b90600052602060002090601f016020900481019282611c6f5760008555611cb5565b82601f10611c8857805160ff1916838001178555611cb5565b82800160010185558215611cb5579182015b82811115611cb5578251825591602001919060010190611c9a565b50611cc1929150611cc5565b5090565b5b80821115611cc15760008155600101611cc6565b6001600160e01b031981168114610a7257600080fd5b600060208284031215611d0257600080fd5b813561115581611cda565b60005b83811015611d28578181015183820152602001611d10565b83811115610fcf5750506000910152565b60008151808452611d51816020860160208601611d0d565b601f01601f19169290920160200192915050565b6020815260006111556020830184611d39565b600060208284031215611d8a57600080fd5b5035919050565b80356001600160a01b0381168114611da857600080fd5b919050565b60008060408385031215611dc057600080fd5b611dc983611d91565b946020939093013593505050565b600080600060608486031215611dec57600080fd5b611df584611d91565b9250611e0360208501611d91565b9150604084013590509250925092565b600060208284031215611e2557600080fd5b61115582611d91565b6020808252825182820181905260009190848201906040850190845b81811015611e6657835183529284019291840191600101611e4a565b50909695505050505050565b80358015158114611da857600080fd5b600060208284031215611e9457600080fd5b61115582611e72565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ece57611ece611e9d565b604051601f8501601f19908116603f01168101908282118183101715611ef657611ef6611e9d565b81604052809350858152868686011115611f0f57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f3b57600080fd5b813567ffffffffffffffff811115611f5257600080fd5b8201601f81018413611f6357600080fd5b61141b84823560208401611eb3565b60008060408385031215611f8557600080fd5b611f8e83611d91565b9150611f9c60208401611e72565b90509250929050565b60008060008060808587031215611fbb57600080fd5b611fc485611d91565b9350611fd260208601611d91565b925060408501359150606085013567ffffffffffffffff811115611ff557600080fd5b8501601f8101871361200657600080fd5b61201587823560208401611eb3565b91505092959194509250565b6000806040838503121561203457600080fd5b61203d83611d91565b9150611f9c60208401611d91565b600181811c9082168061205f57607f821691505b6020821081141561208057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561214c5761214c612122565b5060010190565b6000821982111561216657612166612122565b500190565b600081600019048311821515161561218557612185612122565b500290565b60008451602061219d8285838a01611d0d565b8551918401916121b08184848a01611d0d565b8554920191600090600181811c90808316806121cd57607f831692505b8583108114156121eb57634e487b7160e01b85526022600452602485fd5b8080156121ff57600181146122105761223d565b60ff1985168852838801955061223d565b60008b81526020902060005b858110156122355781548a82015290840190880161221c565b505083880195505b50939b9a5050505050505050505050565b60008282101561226057612260612122565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826122dc576122dc6122b7565b500490565b6000826122f0576122f06122b7565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061232890830184611d39565b9695505050505050565b60006020828403121561234457600080fd5b815161115581611cda565b634e487b7160e01b600052603160045260246000fdfea264697066735822122033dd6cdf74913202e604a399b0dc1de33bda62b63114cb1a75f1c332879a42d364736f6c634300080b00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572", "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709", "coverageMap": {"statements": {"0": {"ERC721Enumerable.totalSupply": {"0": [42704, 42728]}, "Ownable.owner": {"1": [49149, 49162]}, "ERC721.isApprovedForAll": {"2": [31975, 32017]}, "ERC721Enumerable.supportsInterface": {"3": [42015, 42136]}, "ERC721.name": {"4": [29518, 29530]}, "ERC721._exists": {"5": [34702, 34739]}, "ERC721.getApproved": {"6": [31211, 31318], "7": [31329, 31360]}, "ERC721.approve": {"8": [30739, 30796], "10": [30807, 30972], "11": [30983, 31004]}, "Context._msgSender": {"9": [26917, 26934]}, "ERC721.transferFrom": {"12": [32267, 32404], "13": [32415, 32443]}, "ERC721Enumerable.tokenOfOwnerByIndex": {"14": [42382, 42503], "15": [42513, 42546]}, "FundMePunks.withdraw": {"16": [53837, 53853]}, "ERC721.safeTransferFrom": {"17": [32649, 32688], "42": [32922, 33059], "43": [33069, 33108]}, "FundMePunks.walletOfOwner": {"18": [52145, 52189], "19": [52126, 52129], "20": [52209, 52224]}, "FundMePunks.setCost": {"21": [53129, 53144]}, "FundMePunks.setIsRevealed": {"22": [53035, 53054]}, "ERC721Enumerable.tokenByIndex": {"23": [42945, 43074], "24": [43084, 43108]}, "FundMePunks.setBaseURI": {"25": [53487, 53508]}, "ERC721.ownerOf": {"26": [29241, 29348]}, "ERC721.balanceOf": {"27": [28859, 28967], "28": [28977, 29000]}, "Ownable.renounceOwnership": {"29": [49780, 49801]}, "FundMePunks.setmaxMintAmount": {"30": [53237, 53270]}, "ERC721.symbol": {"31": [29682, 29696]}, "FundMePunks.mint": {"32": [51325, 51387], "33": [51503, 51527], "34": [51537, 51574], "35": [51584, 51626], "36": [51678, 51718], "37": [51796, 51829], "38": [51777, 51780]}, "ERC721.setApprovalForAll": {"39": [31556, 31618], "40": [31629, 31682], "41": [31692, 31745]}, "FundMePunks.tokenURI": {"44": [52379, 52489], "45": [52539, 52560], "46": [52632, 52930]}, "FundMePunks.setBaseExtension": {"47": [53627, 53660]}, "FundMePunks.setNotRevealedURI": {"48": [53368, 53400]}, "Ownable.transferOwnership": {"49": [50037, 50144], "50": [50154, 50173]}, "ERC721.supportsInterface": {"51": [28483, 28658]}, "ERC165.supportsInterface": {"52": [14216, 14263]}, "ERC721._approve": {"53": [38674, 38703], "54": [38713, 38764]}, "ERC721._isApprovedOrOwner": {"55": [35049, 35156], "56": [35215, 35335]}, "ERC721._transfer": {"57": [38014, 38133], "58": [38143, 38208], "59": [38219, 38258], "60": [38320, 38349], "61": [38360, 38380], "62": [38390, 38408], "63": [38418, 38439], "64": [38450, 38482]}, "Ownable._setOwner": {"65": [50276, 50293], "66": [50303, 50348]}, "ERC721._safeMint": {"67": [35747, 35773], "83": [36126, 36144], "84": [36154, 36305]}, "ERC721._safeTransfer": {"68": [34128, 34156], "69": [34166, 34311]}, "FundMePunks._baseURI": {"70": [51215, 51229]}, "Strings.toString": {"71": [14867, 14877], "72": [14983, 14991], "73": [15005, 15015], "74": [15117, 15128], "75": [15142, 15198], "76": [15212, 15223]}, "ERC721Enumerable._beforeTokenTransfer": {"77": [43944, 43984], "80": [44031, 44078], "81": [44134, 44179], "82": [44226, 44266]}, "ERC721Enumerable._addTokenToAllTokensEnumeration": {"78": [45065, 45109], "79": [45119, 45143]}, "Address.isContract": {"85": [17393, 17408]}, "ERC721._checkOnERC721Received": {"86": [39936, 40042], "87": [39770, 39828], "88": [40246, 40257]}, "ERC721Enumerable._removeTokenFromOwnerEnumeration": {"89": [46368, 46412], "90": [46484, 46527], "91": [46658, 46691], "92": [46701, 46742]}, "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {"93": [47768, 47804], "94": [47872, 47913], "95": [48034, 48065], "96": [48075, 48091]}, "ERC721Enumerable._addTokenToOwnerEnumeration": {"97": [44708, 44742], "98": [44752, 44787]}, "ERC721._mint": {"99": [36705, 36766], "100": [36776, 36834], "101": [36845, 36890], "102": [36901, 36919], "103": [36929, 36950], "104": [36961, 36999]}}}, "branches": {"0": {"ERC721.approve": {"105": [30747, 30758, true], "106": [30828, 30849, true], "107": [30853, 30890, true]}, "ERC721.transferFrom": {"108": [32288, 32329, true]}, "ERC721Enumerable.tokenOfOwnerByIndex": {"109": [42403, 42434, true]}, "FundMePunks.withdraw": {"110": [53845, 53852, true]}, "ERC721Enumerable.tokenByIndex": {"111": [42966, 43004, true]}, "ERC721.ownerOf": {"112": [29262, 29281, true]}, "ERC721.balanceOf": {"113": [28880, 28899, true]}, "FundMePunks.mint": {"114": [51333, 51359, true], "115": [51511, 51526, true], "116": [51545, 51573, true], "117": [51592, 51625, true], "118": [51641, 51662, false], "119": [51686, 51717, true]}, "ERC721.setApprovalForAll": {"120": [31564, 31588, true]}, "ERC721.safeTransferFrom": {"121": [32943, 32984, true]}, "FundMePunks.tokenURI": {"122": [52651, 52683, true]}, "Ownable.transferOwnership": {"123": [50058, 50080, true]}, "ERC721._transfer": {"124": [38035, 38066, true], "125": [38151, 38167, true]}, "ERC721._safeTransfer": {"126": [34187, 34235, true]}, "Strings.toString": {"127": [14841, 14851, false]}, "ERC721Enumerable._beforeTokenTransfer": {"128": [43910, 43928, false], "129": [44005, 44015, false], "130": [44102, 44118, false], "131": [44200, 44210, false]}, "ERC721._safeMint": {"132": [36175, 36229, true]}, "ERC721Enumerable._removeTokenFromOwnerEnumeration": {"133": [46253, 46281, false]}, "ERC721._mint": {"134": [36713, 36729, true]}}}}, "dependencies": ["Context", "ERC165", "ERC721", "ERC721Enumerable", "IERC165", "IERC721", "IERC721Enumerable", "IERC721Metadata", "Ownable", "Strings"], "offset": [50408, 53862], "pcMap": {"0": {"op": "PUSH1", "value": "0x80", "path": "0", "offset": [50408, 53862]}, "2": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50408, 53862], "fn": null}, "4": {"op": "MSTORE", "path": "0", "offset": [50408, 53862], "fn": null}, "5": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [50408, 53862], "fn": null}, "7": {"op": "CALLDATASIZE", "path": "0", "offset": [50408, 53862], "fn": null}, "8": {"op": "LT", "path": "0", "offset": [50408, 53862], "fn": null}, "9": {"op": "PUSH2", "value": "0x1F9", "path": "0", "offset": [50408, 53862], "fn": null}, "12": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "13": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "15": {"op": "CALLDATALOAD", "path": "0", "offset": [50408, 53862], "fn": null}, "16": {"op": "PUSH1", "value": "0xE0", "path": "0", "offset": [50408, 53862], "fn": null}, "18": {"op": "SHR", "path": "0", "offset": [50408, 53862], "fn": null}, "19": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "20": {"op": "PUSH4", "value": "0x55F804B3", "path": "0", "offset": [50408, 53862], "fn": null}, "25": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "26": {"op": "PUSH2", "value": "0x10D", "path": "0", "offset": [50408, 53862], "fn": null}, "29": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "30": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "31": {"op": "PUSH4", "value": "0xA22CB465", "path": "0", "offset": [50408, 53862], "fn": null}, "36": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "37": {"op": "PUSH2", "value": "0xA0", "path": "0", "offset": [50408, 53862], "fn": null}, "40": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "41": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "42": {"op": "PUSH4", "value": "0xD5ABEB01", "path": "0", "offset": [50408, 53862], "fn": null}, "47": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "48": {"op": "PUSH2", "value": "0x6F", "path": "0", "offset": [50408, 53862], "fn": null}, "51": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "52": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "53": {"op": "PUSH4", "value": "0xD5ABEB01", "path": "0", "offset": [50408, 53862], "fn": null}, "58": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "59": {"op": "PUSH2", "value": "0x572", "path": "0", "offset": [50408, 53862], "fn": null}, "62": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "63": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "64": {"op": "PUSH4", "value": "0xDA3EF23F", "path": "0", "offset": [50408, 53862], "fn": null}, "69": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "70": {"op": "PUSH2", "value": "0x588", "path": "0", "offset": [50408, 53862], "fn": null}, "73": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "74": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "75": {"op": "PUSH4", "value": "0xE985E9C5", "path": "0", "offset": [50408, 53862], "fn": null}, "80": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "81": {"op": "PUSH2", "value": "0x5A8", "path": "0", "offset": [50408, 53862], "fn": null}, "84": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "85": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "86": {"op": "PUSH4", "value": "0xF2C4CE1E", "path": "0", "offset": [50408, 53862], "fn": null}, "91": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "92": {"op": "PUSH2", "value": "0x5F1", "path": "0", "offset": [50408, 53862], "fn": null}, "95": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "96": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "97": {"op": "PUSH4", "value": "0xF2FDE38B", "path": "0", "offset": [50408, 53862], "fn": null}, "102": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "103": {"op": "PUSH2", "value": "0x611", "path": "0", "offset": [50408, 53862], "fn": null}, "106": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "107": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "109": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "110": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "111": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "112": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "113": {"op": "PUSH4", "value": "0xA22CB465", "path": "0", "offset": [50408, 53862], "fn": null}, "118": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "119": {"op": "PUSH2", "value": "0x4FD", "path": "0", "offset": [50408, 53862], "fn": null}, "122": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "123": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "124": {"op": "PUSH4", "value": "0xB88D4FDE", "path": "0", "offset": [50408, 53862], "fn": null}, "129": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "130": {"op": "PUSH2", "value": "0x51D", "path": "0", "offset": [50408, 53862], "fn": null}, "133": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "134": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "135": {"op": "PUSH4", "value": "0xC6682862", "path": "0", "offset": [50408, 53862], "fn": null}, "140": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "141": {"op": "PUSH2", "value": "0x53D", "path": "0", "offset": [50408, 53862], "fn": null}, "144": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "145": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "146": {"op": "PUSH4", "value": "0xC87B56DD", "path": "0", "offset": [50408, 53862], "fn": null}, "151": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "152": {"op": "PUSH2", "value": "0x552", "path": "0", "offset": [50408, 53862], "fn": null}, "155": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "156": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "158": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "159": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "160": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "161": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "162": {"op": "PUSH4", "value": "0x7F00C7A6", "path": "0", "offset": [50408, 53862], "fn": null}, "167": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "168": {"op": "PUSH2", "value": "0xDC", "path": "0", "offset": [50408, 53862], "fn": null}, "171": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "172": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "173": {"op": "PUSH4", "value": "0x7F00C7A6", "path": "0", "offset": [50408, 53862], "fn": null}, "178": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "179": {"op": "PUSH2", "value": "0x497", "path": "0", "offset": [50408, 53862], "fn": null}, "182": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "183": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "184": {"op": "PUSH4", "value": "0x8DA5CB5B", "path": "0", "offset": [50408, 53862], "fn": null}, "189": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "190": {"op": "PUSH2", "value": "0x4B7", "path": "0", "offset": [50408, 53862], "fn": null}, "193": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "194": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "195": {"op": "PUSH4", "value": "0x95D89B41", "path": "0", "offset": [50408, 53862], "fn": null}, "200": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "201": {"op": "PUSH2", "value": "0x4D5", "path": "0", "offset": [50408, 53862], "fn": null}, "204": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "205": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "206": {"op": "PUSH4", "value": "0xA0712D68", "path": "0", "offset": [50408, 53862], "fn": null}, "211": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "212": {"op": "PUSH2", "value": "0x4EA", "path": "0", "offset": [50408, 53862], "fn": null}, "215": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "216": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "218": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "219": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "220": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "221": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "222": {"op": "PUSH4", "value": "0x55F804B3", "path": "0", "offset": [50408, 53862], "fn": null}, "227": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "228": {"op": "PUSH2", "value": "0x422", "path": "0", "offset": [50408, 53862], "fn": null}, "231": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "232": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "233": {"op": "PUSH4", "value": "0x6352211E", "path": "0", "offset": [50408, 53862], "fn": null}, "238": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "239": {"op": "PUSH2", "value": "0x442", "path": "0", "offset": [50408, 53862], "fn": null}, "242": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "243": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "244": {"op": "PUSH4", "value": "0x70A08231", "path": "0", "offset": [50408, 53862], "fn": null}, "249": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "250": {"op": "PUSH2", "value": "0x462", "path": "0", "offset": [50408, 53862], "fn": null}, "253": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "254": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "255": {"op": "PUSH4", "value": "0x715018A6", "path": "0", "offset": [50408, 53862], "fn": null}, "260": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "261": {"op": "PUSH2", "value": "0x482", "path": "0", "offset": [50408, 53862], "fn": null}, "264": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "265": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "267": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "268": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "269": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "270": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "271": {"op": "PUSH4", "value": "0x23B872DD", "path": "0", "offset": [50408, 53862], "fn": null}, "276": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "277": {"op": "PUSH2", "value": "0x190", "path": "0", "offset": [50408, 53862], "fn": null}, "280": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "281": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "282": {"op": "PUSH4", "value": "0x438B6300", "path": "0", "offset": [50408, 53862], "fn": null}, "287": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "288": {"op": "PUSH2", "value": "0x15F", "path": "0", "offset": [50408, 53862], "fn": null}, "291": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "292": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "293": {"op": "PUSH4", "value": "0x438B6300", "path": "0", "offset": [50408, 53862], "fn": null}, "298": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "299": {"op": "PUSH2", "value": "0x37B", "path": "0", "offset": [50408, 53862], "fn": null}, "302": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "303": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "304": {"op": "PUSH4", "value": "0x44A0D68A", "path": "0", "offset": [50408, 53862], "fn": null}, "309": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "310": {"op": "PUSH2", "value": "0x3A8", "path": "0", "offset": [50408, 53862], "fn": null}, "313": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "314": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "315": {"op": "PUSH4", "value": "0x49A5980A", "path": "0", "offset": [50408, 53862], "fn": null}, "320": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "321": {"op": "PUSH2", "value": "0x3C8", "path": "0", "offset": [50408, 53862], "fn": null}, "324": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "325": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "326": {"op": "PUSH4", "value": "0x4F6CCCE7", "path": "0", "offset": [50408, 53862], "fn": null}, "331": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "332": {"op": "PUSH2", "value": "0x3E8", "path": "0", "offset": [50408, 53862], "fn": null}, "335": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "336": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "337": {"op": "PUSH4", "value": "0x54214F69", "path": "0", "offset": [50408, 53862], "fn": null}, "342": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "343": {"op": "PUSH2", "value": "0x408", "path": "0", "offset": [50408, 53862], "fn": null}, "346": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "347": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "349": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "350": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "351": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "352": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "353": {"op": "PUSH4", "value": "0x23B872DD", "path": "0", "offset": [50408, 53862], "fn": null}, "358": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "359": {"op": "PUSH2", "value": "0x313", "path": "0", "offset": [50408, 53862], "fn": null}, "362": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "363": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "364": {"op": "PUSH4", "value": "0x2F745C59", "path": "0", "offset": [50408, 53862], "fn": null}, "369": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "370": {"op": "PUSH2", "value": "0x333", "path": "0", "offset": [50408, 53862], "fn": null}, "373": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "374": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "375": {"op": "PUSH4", "value": "0x3CCFD60B", "path": "0", "offset": [50408, 53862], "fn": null}, "380": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "381": {"op": "PUSH2", "value": "0x353", "path": "0", "offset": [50408, 53862], "fn": null}, "384": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "385": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "386": {"op": "PUSH4", "value": "0x42842E0E", "path": "0", "offset": [50408, 53862], "fn": null}, "391": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "392": {"op": "PUSH2", "value": "0x35B", "path": "0", "offset": [50408, 53862], "fn": null}, "395": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "396": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "398": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "399": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "400": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "401": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "402": {"op": "PUSH4", "value": "0x95EA7B3", "path": "0", "offset": [50408, 53862], "fn": null}, "407": {"op": "GT", "path": "0", "offset": [50408, 53862], "fn": null}, "408": {"op": "PUSH2", "value": "0x1CC", "path": "0", "offset": [50408, 53862], "fn": null}, "411": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "412": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "413": {"op": "PUSH4", "value": "0x95EA7B3", "path": "0", "offset": [50408, 53862], "fn": null}, "418": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "419": {"op": "PUSH2", "value": "0x2A2", "path": "0", "offset": [50408, 53862], "fn": null}, "422": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "423": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "424": {"op": "PUSH4", "value": "0x13FAEDE6", "path": "0", "offset": [50408, 53862], "fn": null}, "429": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "430": {"op": "PUSH2", "value": "0x2C4", "path": "0", "offset": [50408, 53862], "fn": null}, "433": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "434": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "435": {"op": "PUSH4", "value": "0x18160DDD", "path": "0", "offset": [50408, 53862], "fn": null}, "440": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "441": {"op": "PUSH2", "value": "0x2E8", "path": "0", "offset": [50408, 53862], "fn": null}, "444": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "445": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "446": {"op": "PUSH4", "value": "0x239C70AE", "path": "0", "offset": [50408, 53862], "fn": null}, "451": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "452": {"op": "PUSH2", "value": "0x2FD", "path": "0", "offset": [50408, 53862], "fn": null}, "455": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "456": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "458": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "459": {"op": "REVERT", "path": "0", "offset": [50408, 53862], "fn": null}, "460": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "461": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "462": {"op": "PUSH4", "value": "0x1FFC9A7", "path": "0", "offset": [50408, 53862], "fn": null}, "467": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "468": {"op": "PUSH2", "value": "0x1FE", "path": "0", "offset": [50408, 53862], "fn": null}, "471": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "472": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "473": {"op": "PUSH4", "value": "0x6FDDE03", "path": "0", "offset": [50408, 53862], "fn": null}, "478": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "479": {"op": "PUSH2", "value": "0x233", "path": "0", "offset": [50408, 53862], "fn": null}, "482": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "483": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "484": {"op": "PUSH4", "value": "0x81812FC", "path": "0", "offset": [50408, 53862], "fn": null}, "489": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "490": {"op": "PUSH2", "value": "0x255", "path": "0", "offset": [50408, 53862], "fn": null}, "493": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "494": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "495": {"op": "PUSH4", "value": "0x81C8C44", "path": "0", "offset": [50408, 53862], "fn": null}, "500": {"op": "EQ", "path": "0", "offset": [50408, 53862], "fn": null}, "501": {"op": "PUSH2", "value": "0x28D", "path": "0", "offset": [50408, 53862], "fn": null}, "504": {"op": "JUMPI", "path": "0", "offset": [50408, 53862], "fn": null}, "505": {"op": "JUMPDEST", "path": "0", "offset": [50408, 53862], "fn": null}, "506": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50408, 53862], "fn": null}, "508": {"op": "DUP1", "path": "0", "offset": [50408, 53862], "fn": null}, "509": {"op": "REVERT", "first_revert": true, "path": "0", "offset": [50408, 53862], "fn": null}, "510": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "511": {"op": "CALLVALUE", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "512": {"op": "DUP1", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "513": {"op": "ISZERO", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "514": {"op": "PUSH2", "value": "0x20A", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "517": {"op": "JUMPI", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "518": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "520": {"op": "DUP1", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "521": {"op": "REVERT", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "522": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "523": {"op": "POP"}, "524": {"op": "PUSH2", "value": "0x21E", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "527": {"op": "PUSH2", "value": "0x219", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "530": {"op": "CALLDATASIZE", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "531": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "533": {"op": "PUSH2", "value": "0x1CF0", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "536": {"op": "JUMP", "jump": "i", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "537": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "538": {"op": "PUSH2", "value": "0x631", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "541": {"op": "JUMP", "jump": "i", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "542": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "543": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "545": {"op": "MLOAD", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "546": {"op": "SWAP1"}, "547": {"op": "ISZERO"}, "548": {"op": "ISZERO"}, "549": {"op": "DUP2"}, "550": {"op": "MSTORE"}, "551": {"op": "PUSH1", "value": "0x20"}, "553": {"op": "ADD"}, "554": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "555": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "557": {"op": "MLOAD", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "558": {"op": "DUP1", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "559": {"op": "SWAP2", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "560": {"op": "SUB", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "561": {"op": "SWAP1", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "562": {"op": "RETURN", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "563": {"op": "JUMPDEST", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "564": {"op": "CALLVALUE", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "565": {"op": "DUP1", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "566": {"op": "ISZERO", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "567": {"op": "PUSH2", "value": "0x23F", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "570": {"op": "JUMPI", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "571": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "573": {"op": "DUP1", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "574": {"op": "REVERT", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "575": {"op": "JUMPDEST", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "576": {"op": "POP", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "577": {"op": "PUSH2", "value": "0x248", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "580": {"op": "PUSH2", "value": "0x65C", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "583": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "584": {"op": "JUMPDEST", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "585": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "587": {"op": "MLOAD", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "588": {"op": "PUSH2", "value": "0x22A", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "591": {"op": "SWAP2", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "592": {"op": "SWAP1", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "593": {"op": "PUSH2", "value": "0x1D65", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "596": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "597": {"op": "JUMPDEST", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "598": {"op": "CALLVALUE", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "599": {"op": "DUP1", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "600": {"op": "ISZERO", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "601": {"op": "PUSH2", "value": "0x261", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "604": {"op": "JUMPI", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "605": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "607": {"op": "DUP1", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "608": {"op": "REVERT", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "609": {"op": "JUMPDEST", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "610": {"op": "POP"}, "611": {"op": "PUSH2", "value": "0x275", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "614": {"op": "PUSH2", "value": "0x270", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "617": {"op": "CALLDATASIZE", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "618": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "620": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "623": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "624": {"op": "JUMPDEST", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "625": {"op": "PUSH2", "value": "0x6EE", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "628": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "629": {"op": "JUMPDEST", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "630": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "632": {"op": "MLOAD", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "633": {"op": "PUSH1", "value": "0x1"}, "635": {"op": "PUSH1", "value": "0x1"}, "637": {"op": "PUSH1", "value": "0xA0"}, "639": {"op": "SHL"}, "640": {"op": "SUB"}, "641": {"op": "SWAP1"}, "642": {"op": "SWAP2"}, "643": {"op": "AND"}, "644": {"op": "DUP2"}, "645": {"op": "MSTORE"}, "646": {"op": "PUSH1", "value": "0x20"}, "648": {"op": "ADD"}, "649": {"op": "PUSH2", "value": "0x22A", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "652": {"op": "JUMP"}, "653": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715]}, "654": {"op": "CALLVALUE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "655": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "656": {"op": "ISZERO", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "657": {"op": "PUSH2", "value": "0x299", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "660": {"op": "JUMPI", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "661": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "663": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "664": {"op": "REVERT", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "665": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "666": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "667": {"op": "PUSH2", "value": "0x248", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "670": {"op": "PUSH2", "value": "0x788", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "673": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "674": {"op": "JUMPDEST", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "675": {"op": "CALLVALUE", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "676": {"op": "DUP1", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "677": {"op": "ISZERO", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "678": {"op": "PUSH2", "value": "0x2AE", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "681": {"op": "JUMPI", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "682": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "684": {"op": "DUP1", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "685": {"op": "REVERT", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "686": {"op": "JUMPDEST", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "687": {"op": "POP"}, "688": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "691": {"op": "PUSH2", "value": "0x2BD", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "694": {"op": "CALLDATASIZE", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "695": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "697": {"op": "PUSH2", "value": "0x1DAD", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "700": {"op": "JUMP", "jump": "i", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "701": {"op": "JUMPDEST", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "702": {"op": "PUSH2", "value": "0x816", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "705": {"op": "JUMP", "jump": "i", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "706": {"op": "JUMPDEST", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "707": {"op": "STOP", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "708": {"op": "JUMPDEST", "path": "0", "offset": [50559, 50578]}, "709": {"op": "CALLVALUE", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "710": {"op": "DUP1", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "711": {"op": "ISZERO", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "712": {"op": "PUSH2", "value": "0x2D0", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "715": {"op": "JUMPI", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "716": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "718": {"op": "DUP1", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "719": {"op": "REVERT", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "720": {"op": "JUMPDEST", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "721": {"op": "POP", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "722": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "725": {"op": "PUSH1", "value": "0xD", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "727": {"op": "SLOAD", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "728": {"op": "DUP2", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "729": {"op": "JUMP", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "730": {"op": "JUMPDEST", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "731": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "733": {"op": "MLOAD", "path": "0", "offset": [50559, 50578], "fn": "ERC721.approve"}, "734": {"op": "SWAP1"}, "735": {"op": "DUP2"}, "736": {"op": "MSTORE"}, "737": {"op": "PUSH1", "value": "0x20"}, "739": {"op": "ADD"}, "740": {"op": "PUSH2", "value": "0x22A", "path": "0", "offset": [50559, 50578]}, "743": {"op": "JUMP"}, "744": {"op": "JUMPDEST", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "745": {"op": "CALLVALUE", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "746": {"op": "DUP1", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "747": {"op": "ISZERO", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "748": {"op": "PUSH2", "value": "0x2F4", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "751": {"op": "JUMPI", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "752": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "754": {"op": "DUP1", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "755": {"op": "REVERT", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "756": {"op": "JUMPDEST", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "757": {"op": "POP"}, "758": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [42711, 42721], "fn": "ERC721Enumerable.totalSupply", "statement": 0}, "760": {"op": "SLOAD", "path": "0", "offset": [42711, 42728], "fn": "ERC721Enumerable.totalSupply"}, "761": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "764": {"op": "JUMP", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "765": {"op": "JUMPDEST", "path": "0", "offset": [50614, 50646]}, "766": {"op": "CALLVALUE", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "767": {"op": "DUP1", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "768": {"op": "ISZERO", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "769": {"op": "PUSH2", "value": "0x309", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "772": {"op": "JUMPI", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "773": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "775": {"op": "DUP1", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "776": {"op": "REVERT", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "777": {"op": "JUMPDEST", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "778": {"op": "POP", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "779": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "782": {"op": "PUSH1", "value": "0xF", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "784": {"op": "SLOAD", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "785": {"op": "DUP2", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "786": {"op": "JUMP", "path": "0", "offset": [50614, 50646], "fn": "ERC721Enumerable.totalSupply"}, "787": {"op": "JUMPDEST", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "788": {"op": "CALLVALUE", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "789": {"op": "DUP1", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "790": {"op": "ISZERO", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "791": {"op": "PUSH2", "value": "0x31F", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "794": {"op": "JUMPI", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "795": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "797": {"op": "DUP1", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "798": {"op": "REVERT", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "799": {"op": "JUMPDEST", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "800": {"op": "POP"}, "801": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "804": {"op": "PUSH2", "value": "0x32E", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "807": {"op": "CALLDATASIZE", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "808": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "810": {"op": "PUSH2", "value": "0x1DD7", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "813": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "814": {"op": "JUMPDEST", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "815": {"op": "PUSH2", "value": "0x92C", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "818": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "819": {"op": "JUMPDEST", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "820": {"op": "CALLVALUE", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "821": {"op": "DUP1", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "822": {"op": "ISZERO", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "823": {"op": "PUSH2", "value": "0x33F", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "826": {"op": "JUMPI", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "827": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "829": {"op": "DUP1", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "830": {"op": "REVERT", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "831": {"op": "JUMPDEST", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "832": {"op": "POP"}, "833": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "836": {"op": "PUSH2", "value": "0x34E", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "839": {"op": "CALLDATASIZE", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "840": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "842": {"op": "PUSH2", "value": "0x1DAD", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "845": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "846": {"op": "JUMPDEST", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "847": {"op": "PUSH2", "value": "0x95D", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "850": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "851": {"op": "JUMPDEST", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "852": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "855": {"op": "PUSH2", "value": "0x9F3", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "858": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "859": {"op": "JUMPDEST", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "860": {"op": "CALLVALUE", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "861": {"op": "DUP1", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "862": {"op": "ISZERO", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "863": {"op": "PUSH2", "value": "0x367", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "866": {"op": "JUMPI", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "867": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "869": {"op": "DUP1", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "870": {"op": "REVERT", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "871": {"op": "JUMPDEST", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "872": {"op": "POP"}, "873": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "876": {"op": "PUSH2", "value": "0x376", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "879": {"op": "CALLDATASIZE", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "880": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "882": {"op": "PUSH2", "value": "0x1DD7", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "885": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "886": {"op": "JUMPDEST", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "887": {"op": "PUSH2", "value": "0xA75", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "890": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "891": {"op": "JUMPDEST", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "892": {"op": "CALLVALUE", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "893": {"op": "DUP1", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "894": {"op": "ISZERO", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "895": {"op": "PUSH2", "value": "0x387", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "898": {"op": "JUMPI", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "899": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "901": {"op": "DUP1", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "902": {"op": "REVERT", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "903": {"op": "JUMPDEST", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "904": {"op": "POP"}, "905": {"op": "PUSH2", "value": "0x39B", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "908": {"op": "PUSH2", "value": "0x396", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "911": {"op": "CALLDATASIZE", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "912": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "914": {"op": "PUSH2", "value": "0x1E13", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "917": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "918": {"op": "JUMPDEST", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "919": {"op": "PUSH2", "value": "0xA90", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "922": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "923": {"op": "JUMPDEST", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "924": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "926": {"op": "MLOAD", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "927": {"op": "PUSH2", "value": "0x22A", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "930": {"op": "SWAP2", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "931": {"op": "SWAP1", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "932": {"op": "PUSH2", "value": "0x1E2E", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "935": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "936": {"op": "JUMPDEST", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "937": {"op": "CALLVALUE", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "938": {"op": "DUP1", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "939": {"op": "ISZERO", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "940": {"op": "PUSH2", "value": "0x3B4", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "943": {"op": "JUMPI", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "944": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "946": {"op": "DUP1", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "947": {"op": "REVERT", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "948": {"op": "JUMPDEST", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "949": {"op": "POP"}, "950": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "953": {"op": "PUSH2", "value": "0x3C3", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "956": {"op": "CALLDATASIZE", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "957": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "959": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "962": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "963": {"op": "JUMPDEST", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "964": {"op": "PUSH2", "value": "0xB32", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "967": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "968": {"op": "JUMPDEST", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "969": {"op": "CALLVALUE", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "970": {"op": "DUP1", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "971": {"op": "ISZERO", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "972": {"op": "PUSH2", "value": "0x3D4", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "975": {"op": "JUMPI", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "976": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "978": {"op": "DUP1", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "979": {"op": "REVERT", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "980": {"op": "JUMPDEST", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "981": {"op": "POP"}, "982": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "985": {"op": "PUSH2", "value": "0x3E3", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "988": {"op": "CALLDATASIZE", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "989": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "991": {"op": "PUSH2", "value": "0x1E82", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "994": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "995": {"op": "JUMPDEST", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "996": {"op": "PUSH2", "value": "0xB61", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "999": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "1000": {"op": "JUMPDEST", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1001": {"op": "CALLVALUE", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1002": {"op": "DUP1", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1003": {"op": "ISZERO", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1004": {"op": "PUSH2", "value": "0x3F4", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1007": {"op": "JUMPI", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1008": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1010": {"op": "DUP1", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1011": {"op": "REVERT", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1012": {"op": "JUMPDEST", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1013": {"op": "POP"}, "1014": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1017": {"op": "PUSH2", "value": "0x403", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1020": {"op": "CALLDATASIZE", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1021": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1023": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1026": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1027": {"op": "JUMPDEST", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1028": {"op": "PUSH2", "value": "0xB9E", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1031": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "1032": {"op": "JUMPDEST", "path": "0", "offset": [50652, 50681]}, "1033": {"op": "CALLVALUE", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1034": {"op": "DUP1", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1035": {"op": "ISZERO", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1036": {"op": "PUSH2", "value": "0x414", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1039": {"op": "JUMPI", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1040": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1042": {"op": "DUP1", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1043": {"op": "REVERT", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1044": {"op": "JUMPDEST", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1045": {"op": "POP"}, "1046": {"op": "PUSH1", "value": "0x10", "path": "0", "offset": [50652, 50681]}, "1048": {"op": "SLOAD", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1049": {"op": "PUSH2", "value": "0x21E", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1052": {"op": "SWAP1", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1053": {"op": "PUSH1", "value": "0xFF", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1055": {"op": "AND", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1056": {"op": "DUP2", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1057": {"op": "JUMP", "path": "0", "offset": [50652, 50681], "fn": "ERC721Enumerable.tokenByIndex"}, "1058": {"op": "JUMPDEST", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1059": {"op": "CALLVALUE", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1060": {"op": "DUP1", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1061": {"op": "ISZERO", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1062": {"op": "PUSH2", "value": "0x42E", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1065": {"op": "JUMPI", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1066": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1068": {"op": "DUP1", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1069": {"op": "REVERT", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1070": {"op": "JUMPDEST", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1071": {"op": "POP"}, "1072": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1075": {"op": "PUSH2", "value": "0x43D", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1078": {"op": "CALLDATASIZE", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1079": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1081": {"op": "PUSH2", "value": "0x1F29", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1084": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1085": {"op": "JUMPDEST", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1086": {"op": "PUSH2", "value": "0xC31", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1089": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "1090": {"op": "JUMPDEST", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1091": {"op": "CALLVALUE", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1092": {"op": "DUP1", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1093": {"op": "ISZERO", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1094": {"op": "PUSH2", "value": "0x44E", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1097": {"op": "JUMPI", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1098": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1100": {"op": "DUP1", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1101": {"op": "REVERT", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1102": {"op": "JUMPDEST", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1103": {"op": "POP"}, "1104": {"op": "PUSH2", "value": "0x275", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1107": {"op": "PUSH2", "value": "0x45D", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1110": {"op": "CALLDATASIZE", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1111": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1113": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1116": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1117": {"op": "JUMPDEST", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1118": {"op": "PUSH2", "value": "0xC72", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1121": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "1122": {"op": "JUMPDEST", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1123": {"op": "CALLVALUE", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1124": {"op": "DUP1", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1125": {"op": "ISZERO", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1126": {"op": "PUSH2", "value": "0x46E", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1129": {"op": "JUMPI", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1130": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1132": {"op": "DUP1", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1133": {"op": "REVERT", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1134": {"op": "JUMPDEST", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1135": {"op": "POP"}, "1136": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1139": {"op": "PUSH2", "value": "0x47D", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1142": {"op": "CALLDATASIZE", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1143": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1145": {"op": "PUSH2", "value": "0x1E13", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1148": {"op": "JUMP", "jump": "i", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1149": {"op": "JUMPDEST", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1150": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1153": {"op": "JUMP", "jump": "i", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "1154": {"op": "JUMPDEST", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1155": {"op": "CALLVALUE", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1156": {"op": "DUP1", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1157": {"op": "ISZERO", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1158": {"op": "PUSH2", "value": "0x48E", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1161": {"op": "JUMPI", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1162": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1164": {"op": "DUP1", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1165": {"op": "REVERT", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1166": {"op": "JUMPDEST", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1167": {"op": "POP", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1168": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1171": {"op": "PUSH2", "value": "0xD70", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1174": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "1175": {"op": "JUMPDEST", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1176": {"op": "CALLVALUE", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1177": {"op": "DUP1", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1178": {"op": "ISZERO", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1179": {"op": "PUSH2", "value": "0x4A3", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1182": {"op": "JUMPI", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1183": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1185": {"op": "DUP1", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1186": {"op": "REVERT", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1187": {"op": "JUMPDEST", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1188": {"op": "POP"}, "1189": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1192": {"op": "PUSH2", "value": "0x4B2", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1195": {"op": "CALLDATASIZE", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1196": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1198": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1201": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1202": {"op": "JUMPDEST", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1203": {"op": "PUSH2", "value": "0xDA6", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1206": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "1207": {"op": "JUMPDEST", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1208": {"op": "CALLVALUE", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1209": {"op": "DUP1", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1210": {"op": "ISZERO", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1211": {"op": "PUSH2", "value": "0x4C3", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1214": {"op": "JUMPI", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1215": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1217": {"op": "DUP1", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1218": {"op": "REVERT", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1219": {"op": "JUMPDEST", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1220": {"op": "POP"}, "1221": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner", "statement": 1}, "1223": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "1224": {"op": "PUSH1", "value": "0x1"}, "1226": {"op": "PUSH1", "value": "0x1"}, "1228": {"op": "PUSH1", "value": "0xA0"}, "1230": {"op": "SHL"}, "1231": {"op": "SUB"}, "1232": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "1233": {"op": "PUSH2", "value": "0x275", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1236": {"op": "JUMP", "path": "0", "offset": [49084, 49169], "fn": "Ownable.owner"}, "1237": {"op": "JUMPDEST", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1238": {"op": "CALLVALUE", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1239": {"op": "DUP1", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1240": {"op": "ISZERO", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1241": {"op": "PUSH2", "value": "0x4E1", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1244": {"op": "JUMPI", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1245": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1247": {"op": "DUP1", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1248": {"op": "REVERT", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1249": {"op": "JUMPDEST", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1250": {"op": "POP", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1251": {"op": "PUSH2", "value": "0x248", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1254": {"op": "PUSH2", "value": "0xDD5", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1257": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "1258": {"op": "JUMPDEST", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1259": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1262": {"op": "PUSH2", "value": "0x4F8", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1265": {"op": "CALLDATASIZE", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1266": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1268": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1271": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1272": {"op": "JUMPDEST", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1273": {"op": "PUSH2", "value": "0xDE4", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1276": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "1277": {"op": "JUMPDEST", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1278": {"op": "CALLVALUE", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1279": {"op": "DUP1", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1280": {"op": "ISZERO", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1281": {"op": "PUSH2", "value": "0x509", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1284": {"op": "JUMPI", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1285": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1287": {"op": "DUP1", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1288": {"op": "REVERT", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1289": {"op": "JUMPDEST", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1290": {"op": "POP"}, "1291": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1294": {"op": "PUSH2", "value": "0x518", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1297": {"op": "CALLDATASIZE", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1298": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1300": {"op": "PUSH2", "value": "0x1F72", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1303": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1304": {"op": "JUMPDEST", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1305": {"op": "PUSH2", "value": "0xED8", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1308": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "1309": {"op": "JUMPDEST", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1310": {"op": "CALLVALUE", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1311": {"op": "DUP1", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1312": {"op": "ISZERO", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1313": {"op": "PUSH2", "value": "0x529", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1316": {"op": "JUMPI", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1317": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1319": {"op": "DUP1", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1320": {"op": "REVERT", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1321": {"op": "JUMPDEST", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1322": {"op": "POP"}, "1323": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1326": {"op": "PUSH2", "value": "0x538", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1329": {"op": "CALLDATASIZE", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1330": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1332": {"op": "PUSH2", "value": "0x1FA5", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1335": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1336": {"op": "JUMPDEST", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1337": {"op": "PUSH2", "value": "0xF9D", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1340": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "1341": {"op": "JUMPDEST", "path": "0", "offset": [50516, 50553]}, "1342": {"op": "CALLVALUE", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1343": {"op": "DUP1", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1344": {"op": "ISZERO", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1345": {"op": "PUSH2", "value": "0x549", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1348": {"op": "JUMPI", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1349": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1351": {"op": "DUP1", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1352": {"op": "REVERT", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1353": {"op": "JUMPDEST", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1354": {"op": "POP", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1355": {"op": "PUSH2", "value": "0x248", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1358": {"op": "PUSH2", "value": "0xFD5", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1361": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "1362": {"op": "JUMPDEST", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1363": {"op": "CALLVALUE", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1364": {"op": "DUP1", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1365": {"op": "ISZERO", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1366": {"op": "PUSH2", "value": "0x55E", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1369": {"op": "JUMPI", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1370": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1372": {"op": "DUP1", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1373": {"op": "REVERT", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1374": {"op": "JUMPDEST", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1375": {"op": "POP"}, "1376": {"op": "PUSH2", "value": "0x248", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1379": {"op": "PUSH2", "value": "0x56D", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1382": {"op": "CALLDATASIZE", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1383": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1385": {"op": "PUSH2", "value": "0x1D78", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1388": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1389": {"op": "JUMPDEST", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1390": {"op": "PUSH2", "value": "0xFE2", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1393": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "1394": {"op": "JUMPDEST", "path": "0", "offset": [50584, 50608]}, "1395": {"op": "CALLVALUE", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1396": {"op": "DUP1", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1397": {"op": "ISZERO", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1398": {"op": "PUSH2", "value": "0x57E", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1401": {"op": "JUMPI", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1402": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1404": {"op": "DUP1", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1405": {"op": "REVERT", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1406": {"op": "JUMPDEST", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1407": {"op": "POP", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1408": {"op": "PUSH2", "value": "0x2DA", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1411": {"op": "PUSH1", "value": "0xE", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1413": {"op": "SLOAD", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1414": {"op": "DUP2", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1415": {"op": "JUMP", "path": "0", "offset": [50584, 50608], "fn": "FundMePunks.tokenURI"}, "1416": {"op": "JUMPDEST", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1417": {"op": "CALLVALUE", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1418": {"op": "DUP1", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1419": {"op": "ISZERO", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1420": {"op": "PUSH2", "value": "0x594", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1423": {"op": "JUMPI", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1424": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1426": {"op": "DUP1", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1427": {"op": "REVERT", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1428": {"op": "JUMPDEST", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1429": {"op": "POP"}, "1430": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1433": {"op": "PUSH2", "value": "0x5A3", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1436": {"op": "CALLDATASIZE", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1437": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1439": {"op": "PUSH2", "value": "0x1F29", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1442": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1443": {"op": "JUMPDEST", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1444": {"op": "PUSH2", "value": "0x115C", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1447": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "1448": {"op": "JUMPDEST", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1449": {"op": "CALLVALUE", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1450": {"op": "DUP1", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1451": {"op": "ISZERO", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1452": {"op": "PUSH2", "value": "0x5B4", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1455": {"op": "JUMPI", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1456": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1458": {"op": "DUP1", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1459": {"op": "REVERT", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1460": {"op": "JUMPDEST", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1461": {"op": "POP"}, "1462": {"op": "PUSH2", "value": "0x21E", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1465": {"op": "PUSH2", "value": "0x5C3", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1468": {"op": "CALLDATASIZE", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1469": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1471": {"op": "PUSH2", "value": "0x2021", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1474": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1475": {"op": "JUMPDEST", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1476": {"op": "PUSH1", "value": "0x1"}, "1478": {"op": "PUSH1", "value": "0x1"}, "1480": {"op": "PUSH1", "value": "0xA0"}, "1482": {"op": "SHL"}, "1483": {"op": "SUB"}, "1484": {"op": "SWAP2", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll", "statement": 2}, "1485": {"op": "DUP3", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1486": {"op": "AND", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1487": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31955, 31959], "fn": "ERC721.isApprovedForAll"}, "1489": {"op": "SWAP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1490": {"op": "DUP2", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1491": {"op": "MSTORE", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1492": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [31982, 32000], "fn": "ERC721.isApprovedForAll"}, "1494": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1496": {"op": "SWAP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1497": {"op": "DUP2", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1498": {"op": "MSTORE", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1499": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1501": {"op": "DUP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1502": {"op": "DUP4", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1503": {"op": "KECCAK256", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "1504": {"op": "SWAP4", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1505": {"op": "SWAP1", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1506": {"op": "SWAP5", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1507": {"op": "AND", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1508": {"op": "DUP3", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1509": {"op": "MSTORE", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1510": {"op": "SWAP2", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1511": {"op": "SWAP1", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1512": {"op": "SWAP2", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1513": {"op": "MSTORE", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1514": {"op": "KECCAK256", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1515": {"op": "SLOAD", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1516": {"op": "PUSH1", "value": "0xFF", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1518": {"op": "AND", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1519": {"op": "SWAP1", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "1520": {"op": "JUMP", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "1521": {"op": "JUMPDEST", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1522": {"op": "CALLVALUE", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1523": {"op": "DUP1", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1524": {"op": "ISZERO", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1525": {"op": "PUSH2", "value": "0x5FD", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1528": {"op": "JUMPI", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1529": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1531": {"op": "DUP1", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1532": {"op": "REVERT", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1533": {"op": "JUMPDEST", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1534": {"op": "POP"}, "1535": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1538": {"op": "PUSH2", "value": "0x60C", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1541": {"op": "CALLDATASIZE", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1542": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1544": {"op": "PUSH2", "value": "0x1F29", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1547": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1548": {"op": "JUMPDEST", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1549": {"op": "PUSH2", "value": "0x1199", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1552": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "1553": {"op": "JUMPDEST", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1554": {"op": "CALLVALUE", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1555": {"op": "DUP1", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1556": {"op": "ISZERO", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1557": {"op": "PUSH2", "value": "0x61D", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1560": {"op": "JUMPI", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1561": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1563": {"op": "DUP1", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1564": {"op": "REVERT", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1565": {"op": "JUMPDEST", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1566": {"op": "POP"}, "1567": {"op": "PUSH2", "value": "0x2C2", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1570": {"op": "PUSH2", "value": "0x62C", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1573": {"op": "CALLDATASIZE", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1574": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1576": {"op": "PUSH2", "value": "0x1E13", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1579": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1580": {"op": "JUMPDEST", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1581": {"op": "PUSH2", "value": "0x11D6", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1584": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "1585": {"op": "JUMPDEST", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "1586": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [41995, 41999], "fn": "ERC721Enumerable.supportsInterface"}, "1588": {"op": "PUSH1", "value": "0x1"}, "1590": {"op": "PUSH1", "value": "0x1"}, "1592": {"op": "PUSH1", "value": "0xE0"}, "1594": {"op": "SHL"}, "1595": {"op": "SUB"}, "1596": {"op": "NOT"}, "1597": {"op": "DUP3", "path": "0", "offset": [42034, 42084], "fn": "ERC721Enumerable.supportsInterface", "statement": 3}, "1598": {"op": "AND", "path": "0", "offset": [42034, 42084], "fn": "ERC721Enumerable.supportsInterface"}, "1599": {"op": "PUSH4", "value": "0x780E9D63"}, "1604": {"op": "PUSH1", "value": "0xE0"}, "1606": {"op": "SHL"}, "1607": {"op": "EQ", "path": "0", "offset": [42034, 42084], "fn": "ERC721Enumerable.supportsInterface"}, "1608": {"op": "DUP1", "path": "0", "offset": [42034, 42084], "fn": "ERC721Enumerable.supportsInterface"}, "1609": {"op": "PUSH2", "value": "0x656", "path": "0", "offset": [42034, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1612": {"op": "JUMPI", "path": "0", "offset": [42034, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1613": {"op": "POP", "path": "0", "offset": [42034, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1614": {"op": "PUSH2", "value": "0x656", "path": "0", "offset": [42100, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1617": {"op": "DUP3", "path": "0", "offset": [42124, 42135], "fn": "ERC721Enumerable.supportsInterface"}, "1618": {"op": "PUSH2", "value": "0x126E", "path": "0", "offset": [42100, 42123], "fn": "ERC721Enumerable.supportsInterface"}, "1621": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42100, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1622": {"op": "JUMPDEST", "path": "0", "offset": [42100, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1623": {"op": "SWAP3", "path": "0", "offset": [42015, 42136], "fn": "ERC721Enumerable.supportsInterface"}, "1624": {"op": "SWAP2", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "1625": {"op": "POP"}, "1626": {"op": "POP"}, "1627": {"op": "JUMP", "jump": "o", "path": "0", "offset": [41853, 42143], "fn": "ERC721Enumerable.supportsInterface"}, "1628": {"op": "JUMPDEST", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "1629": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [29493, 29506], "fn": "ERC721.name"}, "1631": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29525, 29530], "fn": "ERC721.name", "statement": 4}, "1633": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1634": {"op": "SLOAD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1635": {"op": "PUSH2", "value": "0x66B", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1638": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1639": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1642": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1643": {"op": "JUMPDEST", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1644": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1645": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1647": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1648": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1650": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1651": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1652": {"op": "DIV", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1653": {"op": "MUL", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1654": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1656": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1657": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1659": {"op": "MLOAD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1660": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1661": {"op": "DUP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1662": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1663": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1665": {"op": "MSTORE", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1666": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1667": {"op": "SWAP3", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1668": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1669": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1670": {"op": "DUP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1671": {"op": "DUP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1672": {"op": "MSTORE", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1673": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1675": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1676": {"op": "DUP3", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1677": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1678": {"op": "SLOAD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1679": {"op": "PUSH2", "value": "0x697", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1682": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1683": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1686": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1687": {"op": "JUMPDEST", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1688": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1689": {"op": "ISZERO", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1690": {"op": "PUSH2", "value": "0x6E4", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1693": {"op": "JUMPI", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1694": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1695": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1697": {"op": "LT", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1698": {"op": "PUSH2", "value": "0x6B9", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1701": {"op": "JUMPI", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1702": {"op": "PUSH2", "value": "0x100", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1705": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1706": {"op": "DUP4", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1707": {"op": "SLOAD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1708": {"op": "DIV", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1709": {"op": "MUL", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1710": {"op": "DUP4", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1711": {"op": "MSTORE", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1712": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1713": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1715": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1716": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1717": {"op": "PUSH2", "value": "0x6E4", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1720": {"op": "JUMP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1721": {"op": "JUMPDEST", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1722": {"op": "DUP3", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1723": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1724": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1725": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1726": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1728": {"op": "MSTORE", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1729": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1731": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1733": {"op": "KECCAK256", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1734": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1735": {"op": "JUMPDEST", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1736": {"op": "DUP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1737": {"op": "SLOAD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1738": {"op": "DUP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1739": {"op": "MSTORE", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1740": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1741": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1743": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1744": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1745": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1747": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1748": {"op": "DUP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1749": {"op": "DUP4", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1750": {"op": "GT", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1751": {"op": "PUSH2", "value": "0x6C7", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1754": {"op": "JUMPI", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1755": {"op": "DUP3", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1756": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1757": {"op": "SUB", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1758": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1760": {"op": "AND", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1761": {"op": "DUP3", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1762": {"op": "ADD", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1763": {"op": "SWAP2", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1764": {"op": "JUMPDEST", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1765": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1766": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1767": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1768": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1769": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1770": {"op": "SWAP1", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1771": {"op": "POP", "path": "0", "offset": [29518, 29530], "fn": "ERC721.name"}, "1772": {"op": "SWAP1", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "1773": {"op": "JUMP", "jump": "o", "path": "0", "offset": [29439, 29537], "fn": "ERC721.name"}, "1774": {"op": "JUMPDEST", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "1775": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31188, 31195], "fn": "ERC721.getApproved"}, "1777": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists", "statement": 5}, "1778": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1779": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1780": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [34709, 34716], "fn": "ERC721._exists"}, "1782": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1784": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1785": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1787": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1788": {"op": "KECCAK256", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1789": {"op": "SLOAD", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1790": {"op": "PUSH1", "value": "0x1"}, "1792": {"op": "PUSH1", "value": "0x1"}, "1794": {"op": "PUSH1", "value": "0xA0"}, "1796": {"op": "SHL"}, "1797": {"op": "SUB"}, "1798": {"op": "AND", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "1799": {"op": "PUSH2", "value": "0x76C", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved", "statement": 6}, "1802": {"op": "JUMPI", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1803": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1805": {"op": "MLOAD", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1806": {"op": "PUSH3", "value": "0x461BCD"}, "1810": {"op": "PUSH1", "value": "0xE5"}, "1812": {"op": "SHL"}, "1813": {"op": "DUP2", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1814": {"op": "MSTORE", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1815": {"op": "PUSH1", "value": "0x20"}, "1817": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1819": {"op": "DUP3", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1820": {"op": "ADD", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1821": {"op": "MSTORE"}, "1822": {"op": "PUSH1", "value": "0x2C"}, "1824": {"op": "PUSH1", "value": "0x24"}, "1826": {"op": "DUP3"}, "1827": {"op": "ADD"}, "1828": {"op": "MSTORE"}, "1829": {"op": "PUSH32", "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"}, "1862": {"op": "PUSH1", "value": "0x44"}, "1864": {"op": "DUP3"}, "1865": {"op": "ADD"}, "1866": {"op": "MSTORE"}, "1867": {"op": "PUSH12", "value": "0x34B9BA32B73A103A37B5B2B7"}, "1880": {"op": "PUSH1", "value": "0xA1"}, "1882": {"op": "SHL"}, "1883": {"op": "PUSH1", "value": "0x64"}, "1885": {"op": "DUP3"}, "1886": {"op": "ADD"}, "1887": {"op": "MSTORE"}, "1888": {"op": "PUSH1", "value": "0x84"}, "1890": {"op": "ADD"}, "1891": {"op": "JUMPDEST", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1892": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1894": {"op": "MLOAD", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1895": {"op": "DUP1", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1896": {"op": "SWAP2", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1897": {"op": "SUB", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1898": {"op": "SWAP1", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1899": {"op": "REVERT", "path": "0", "offset": [31211, 31318], "optimizer_revert": true, "fn": "ERC721.getApproved"}, "1900": {"op": "JUMPDEST", "path": "0", "offset": [31211, 31318], "fn": "ERC721.getApproved"}, "1901": {"op": "POP"}, "1902": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved", "statement": 7}, "1904": {"op": "SWAP1", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1905": {"op": "DUP2", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1906": {"op": "MSTORE", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1907": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31336, 31351], "fn": "ERC721.getApproved"}, "1909": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1911": {"op": "MSTORE", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1912": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1914": {"op": "SWAP1", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1915": {"op": "KECCAK256", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1916": {"op": "SLOAD", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1917": {"op": "PUSH1", "value": "0x1"}, "1919": {"op": "PUSH1", "value": "0x1"}, "1921": {"op": "PUSH1", "value": "0xA0"}, "1923": {"op": "SHL"}, "1924": {"op": "SUB"}, "1925": {"op": "AND", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1926": {"op": "SWAP1", "path": "0", "offset": [31336, 31360], "fn": "ERC721.getApproved"}, "1927": {"op": "JUMP", "jump": "o", "path": "0", "offset": [31072, 31367], "fn": "ERC721.getApproved"}, "1928": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715]}, "1929": {"op": "PUSH1", "value": "0x11", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1931": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1932": {"op": "SLOAD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1933": {"op": "PUSH2", "value": "0x795", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1936": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1937": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1940": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1941": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1942": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1943": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1945": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1946": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1948": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1949": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1950": {"op": "DIV", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1951": {"op": "MUL", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1952": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1954": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1955": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1957": {"op": "MLOAD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1958": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1959": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1960": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1961": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1963": {"op": "MSTORE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1964": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1965": {"op": "SWAP3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1966": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1967": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1968": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1969": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1970": {"op": "MSTORE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1971": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1973": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1974": {"op": "DUP3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1975": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1976": {"op": "SLOAD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1977": {"op": "PUSH2", "value": "0x7C1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1980": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1981": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1984": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1985": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1986": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1987": {"op": "ISZERO", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1988": {"op": "PUSH2", "value": "0x80E", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1991": {"op": "JUMPI", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1992": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1993": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1995": {"op": "LT", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1996": {"op": "PUSH2", "value": "0x7E3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "1999": {"op": "JUMPI", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2000": {"op": "PUSH2", "value": "0x100", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2003": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2004": {"op": "DUP4", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2005": {"op": "SLOAD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2006": {"op": "DIV", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2007": {"op": "MUL", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2008": {"op": "DUP4", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2009": {"op": "MSTORE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2010": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2011": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2013": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2014": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2015": {"op": "PUSH2", "value": "0x80E", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2018": {"op": "JUMP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2019": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2020": {"op": "DUP3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2021": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2022": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2023": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2024": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2026": {"op": "MSTORE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2027": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2029": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2031": {"op": "KECCAK256", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2032": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2033": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2034": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2035": {"op": "SLOAD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2036": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2037": {"op": "MSTORE", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2038": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2039": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2041": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2042": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2043": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2045": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2046": {"op": "DUP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2047": {"op": "DUP4", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2048": {"op": "GT", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2049": {"op": "PUSH2", "value": "0x7F1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2052": {"op": "JUMPI", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2053": {"op": "DUP3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2054": {"op": "SWAP1", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2055": {"op": "SUB", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2056": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2058": {"op": "AND", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2059": {"op": "DUP3", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2060": {"op": "ADD", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2061": {"op": "SWAP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2062": {"op": "JUMPDEST", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2063": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2064": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2065": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2066": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2067": {"op": "POP", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2068": {"op": "DUP2", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2069": {"op": "JUMP", "jump": "o", "path": "0", "offset": [50687, 50715], "fn": "ERC721.getApproved"}, "2070": {"op": "JUMPDEST", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "2071": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [30690, 30703], "fn": "ERC721.approve"}, "2073": {"op": "PUSH2", "value": "0x821", "path": "0", "offset": [30706, 30729], "fn": "ERC721.approve"}, "2076": {"op": "DUP3", "path": "0", "offset": [30721, 30728], "fn": "ERC721.approve"}, "2077": {"op": "PUSH2", "value": "0xC72", "path": "0", "offset": [30706, 30720], "fn": "ERC721.approve"}, "2080": {"op": "JUMP", "jump": "i", "path": "0", "offset": [30706, 30729], "fn": "ERC721.approve"}, "2081": {"op": "JUMPDEST", "path": "0", "offset": [30706, 30729], "fn": "ERC721.approve"}, "2082": {"op": "SWAP1", "path": "0", "offset": [30690, 30729], "fn": "ERC721.approve"}, "2083": {"op": "POP", "path": "0", "offset": [30690, 30729], "fn": "ERC721.approve"}, "2084": {"op": "DUP1", "path": "0", "offset": [30753, 30758], "fn": "ERC721.approve", "statement": 8}, "2085": {"op": "PUSH1", "value": "0x1"}, "2087": {"op": "PUSH1", "value": "0x1"}, "2089": {"op": "PUSH1", "value": "0xA0"}, "2091": {"op": "SHL"}, "2092": {"op": "SUB"}, "2093": {"op": "AND", "path": "0", "offset": [30747, 30758], "fn": "ERC721.approve"}, "2094": {"op": "DUP4", "path": "0", "offset": [30747, 30749], "fn": "ERC721.approve"}, "2095": {"op": "PUSH1", "value": "0x1"}, "2097": {"op": "PUSH1", "value": "0x1"}, "2099": {"op": "PUSH1", "value": "0xA0"}, "2101": {"op": "SHL"}, "2102": {"op": "SUB"}, "2103": {"op": "AND", "path": "0", "offset": [30747, 30758], "fn": "ERC721.approve"}, "2104": {"op": "EQ", "path": "0", "offset": [30747, 30758], "fn": "ERC721.approve"}, "2105": {"op": "ISZERO", "path": "0", "offset": [30747, 30758], "fn": "ERC721.approve", "branch": 105}, "2106": {"op": "PUSH2", "value": "0x88F", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2109": {"op": "JUMPI", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve", "branch": 105}, "2110": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2112": {"op": "MLOAD", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2113": {"op": "PUSH3", "value": "0x461BCD"}, "2117": {"op": "PUSH1", "value": "0xE5"}, "2119": {"op": "SHL"}, "2120": {"op": "DUP2", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2121": {"op": "MSTORE", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2122": {"op": "PUSH1", "value": "0x20"}, "2124": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2126": {"op": "DUP3", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2127": {"op": "ADD", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2128": {"op": "MSTORE"}, "2129": {"op": "PUSH1", "value": "0x21"}, "2131": {"op": "PUSH1", "value": "0x24"}, "2133": {"op": "DUP3"}, "2134": {"op": "ADD"}, "2135": {"op": "MSTORE"}, "2136": {"op": "PUSH32", "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"}, "2169": {"op": "PUSH1", "value": "0x44"}, "2171": {"op": "DUP3"}, "2172": {"op": "ADD"}, "2173": {"op": "MSTORE"}, "2174": {"op": "PUSH1", "value": "0x39"}, "2176": {"op": "PUSH1", "value": "0xF9"}, "2178": {"op": "SHL"}, "2179": {"op": "PUSH1", "value": "0x64"}, "2181": {"op": "DUP3"}, "2182": {"op": "ADD"}, "2183": {"op": "MSTORE"}, "2184": {"op": "PUSH1", "value": "0x84"}, "2186": {"op": "ADD"}, "2187": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2190": {"op": "JUMP"}, "2191": {"op": "JUMPDEST", "path": "0", "offset": [30739, 30796], "fn": "ERC721.approve"}, "2192": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender", "statement": 9}, "2193": {"op": "PUSH1", "value": "0x1"}, "2195": {"op": "PUSH1", "value": "0x1"}, "2197": {"op": "PUSH1", "value": "0xA0"}, "2199": {"op": "SHL"}, "2200": {"op": "SUB"}, "2201": {"op": "DUP3", "path": "0", "offset": [30828, 30849], "fn": "ERC721.approve", "statement": 10}, "2202": {"op": "AND", "path": "0", "offset": [30828, 30849], "fn": "ERC721.approve"}, "2203": {"op": "EQ", "path": "0", "offset": [30828, 30849], "fn": "ERC721.approve"}, "2204": {"op": "DUP1", "path": "0", "offset": [30828, 30849], "fn": "ERC721.approve", "branch": 106}, "2205": {"op": "PUSH2", "value": "0x8AB", "path": "0", "offset": [30828, 30890], "fn": "ERC721.approve"}, "2208": {"op": "JUMPI", "path": "0", "offset": [30828, 30890], "fn": "ERC721.approve", "branch": 106}, "2209": {"op": "POP"}, "2210": {"op": "PUSH2", "value": "0x8AB", "path": "0", "offset": [30853, 30890], "fn": "ERC721.approve"}, "2213": {"op": "DUP2", "path": "0", "offset": [30870, 30875], "fn": "ERC721.approve"}, "2214": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "2215": {"op": "PUSH2", "value": "0x5C3", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "2218": {"op": "JUMP", "jump": "i", "path": "0", "offset": [31818, 32024], "fn": "ERC721.isApprovedForAll"}, "2219": {"op": "JUMPDEST", "path": "0", "offset": [30853, 30890], "fn": "ERC721.approve", "branch": 107}, "2220": {"op": "PUSH2", "value": "0x91D", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2223": {"op": "JUMPI", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve", "branch": 107}, "2224": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2226": {"op": "MLOAD", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2227": {"op": "PUSH3", "value": "0x461BCD"}, "2231": {"op": "PUSH1", "value": "0xE5"}, "2233": {"op": "SHL"}, "2234": {"op": "DUP2", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2235": {"op": "MSTORE", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2236": {"op": "PUSH1", "value": "0x20"}, "2238": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2240": {"op": "DUP3", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2241": {"op": "ADD", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2242": {"op": "MSTORE"}, "2243": {"op": "PUSH1", "value": "0x38"}, "2245": {"op": "PUSH1", "value": "0x24"}, "2247": {"op": "DUP3"}, "2248": {"op": "ADD"}, "2249": {"op": "MSTORE"}, "2250": {"op": "PUSH32", "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"}, "2283": {"op": "PUSH1", "value": "0x44"}, "2285": {"op": "DUP3"}, "2286": {"op": "ADD"}, "2287": {"op": "MSTORE"}, "2288": {"op": "PUSH32", "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"}, "2321": {"op": "PUSH1", "value": "0x64"}, "2323": {"op": "DUP3"}, "2324": {"op": "ADD"}, "2325": {"op": "MSTORE"}, "2326": {"op": "PUSH1", "value": "0x84"}, "2328": {"op": "ADD"}, "2329": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2332": {"op": "JUMP"}, "2333": {"op": "JUMPDEST", "path": "0", "offset": [30807, 30972], "fn": "ERC721.approve"}, "2334": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [30983, 31004], "fn": "ERC721.approve", "statement": 11}, "2337": {"op": "DUP4", "path": "0", "offset": [30992, 30994], "fn": "ERC721.approve"}, "2338": {"op": "DUP4", "path": "0", "offset": [30996, 31003], "fn": "ERC721.approve"}, "2339": {"op": "PUSH2", "value": "0x12BE", "path": "0", "offset": [30983, 30991], "fn": "ERC721.approve"}, "2342": {"op": "JUMP", "jump": "i", "path": "0", "offset": [30983, 31004], "fn": "ERC721.approve"}, "2343": {"op": "JUMPDEST", "path": "0", "offset": [30983, 31004], "fn": "ERC721.approve"}, "2344": {"op": "POP", "path": "0", "offset": [30680, 31011], "fn": "ERC721.approve"}, "2345": {"op": "POP", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "2346": {"op": "POP", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "2347": {"op": "JUMP", "jump": "o", "path": "0", "offset": [30610, 31011], "fn": "ERC721.approve"}, "2348": {"op": "JUMPDEST", "path": "0", "offset": [32086, 32450], "fn": "ERC721.transferFrom"}, "2349": {"op": "PUSH2", "value": "0x936", "path": "0", "offset": [32288, 32329], "fn": "ERC721.transferFrom", "statement": 12}, "2352": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "2353": {"op": "DUP3", "path": "0", "offset": [32321, 32328], "fn": "ERC721.transferFrom"}, "2354": {"op": "PUSH2", "value": "0x132C", "path": "0", "offset": [32288, 32306], "fn": "ERC721.transferFrom"}, "2357": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32288, 32329], "fn": "ERC721.transferFrom"}, "2358": {"op": "JUMPDEST", "path": "0", "offset": [32288, 32329], "fn": "ERC721.transferFrom", "branch": 108}, "2359": {"op": "PUSH2", "value": "0x952", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2362": {"op": "JUMPI", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom", "branch": 108}, "2363": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2365": {"op": "MLOAD", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2366": {"op": "PUSH3", "value": "0x461BCD"}, "2370": {"op": "PUSH1", "value": "0xE5"}, "2372": {"op": "SHL"}, "2373": {"op": "DUP2", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2374": {"op": "MSTORE", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2375": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2377": {"op": "ADD", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2378": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2381": {"op": "SWAP1", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2382": {"op": "PUSH2", "value": "0x2086", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2385": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2386": {"op": "JUMPDEST", "path": "0", "offset": [32267, 32404], "fn": "ERC721.transferFrom"}, "2387": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [32415, 32443], "fn": "ERC721.transferFrom", "statement": 13}, "2390": {"op": "DUP4", "path": "0", "offset": [32425, 32429], "fn": "ERC721.transferFrom"}, "2391": {"op": "DUP4", "path": "0", "offset": [32431, 32433], "fn": "ERC721.transferFrom"}, "2392": {"op": "DUP4", "path": "0", "offset": [32435, 32442], "fn": "ERC721.transferFrom"}, "2393": {"op": "PUSH2", "value": "0x1423", "path": "0", "offset": [32415, 32424], "fn": "ERC721.transferFrom"}, "2396": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32415, 32443], "fn": "ERC721.transferFrom"}, "2397": {"op": "JUMPDEST", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2398": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42359, 42366], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2400": {"op": "PUSH2", "value": "0x968", "path": "0", "offset": [42411, 42434], "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "statement": 14}, "2403": {"op": "DUP4", "path": "0", "offset": [42428, 42433], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2404": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [42411, 42427], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2407": {"op": "JUMP", "jump": "i", "path": "0", "offset": [42411, 42434], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2408": {"op": "JUMPDEST", "path": "0", "offset": [42411, 42434], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2409": {"op": "DUP3", "path": "0", "offset": [42403, 42408], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2410": {"op": "LT", "path": "0", "offset": [42403, 42434], "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "branch": 109}, "2411": {"op": "PUSH2", "value": "0x9CA", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2414": {"op": "JUMPI", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "branch": 109}, "2415": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2417": {"op": "MLOAD", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2418": {"op": "PUSH3", "value": "0x461BCD"}, "2422": {"op": "PUSH1", "value": "0xE5"}, "2424": {"op": "SHL"}, "2425": {"op": "DUP2", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2426": {"op": "MSTORE", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2427": {"op": "PUSH1", "value": "0x20"}, "2429": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2431": {"op": "DUP3", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2432": {"op": "ADD", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2433": {"op": "MSTORE"}, "2434": {"op": "PUSH1", "value": "0x2B"}, "2436": {"op": "PUSH1", "value": "0x24"}, "2438": {"op": "DUP3"}, "2439": {"op": "ADD"}, "2440": {"op": "MSTORE"}, "2441": {"op": "PUSH32", "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"}, "2474": {"op": "PUSH1", "value": "0x44"}, "2476": {"op": "DUP3"}, "2477": {"op": "ADD"}, "2478": {"op": "MSTORE"}, "2479": {"op": "PUSH11", "value": "0x74206F6620626F756E6473"}, "2491": {"op": "PUSH1", "value": "0xA8"}, "2493": {"op": "SHL"}, "2494": {"op": "PUSH1", "value": "0x64"}, "2496": {"op": "DUP3"}, "2497": {"op": "ADD"}, "2498": {"op": "MSTORE"}, "2499": {"op": "PUSH1", "value": "0x84"}, "2501": {"op": "ADD"}, "2502": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2505": {"op": "JUMP"}, "2506": {"op": "JUMPDEST", "path": "0", "offset": [42382, 42503], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2507": {"op": "POP"}, "2508": {"op": "PUSH1", "value": "0x1"}, "2510": {"op": "PUSH1", "value": "0x1"}, "2512": {"op": "PUSH1", "value": "0xA0"}, "2514": {"op": "SHL"}, "2515": {"op": "SUB"}, "2516": {"op": "SWAP2", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex", "statement": 15}, "2517": {"op": "SWAP1", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2518": {"op": "SWAP2", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2519": {"op": "AND", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2520": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2522": {"op": "SWAP1", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2523": {"op": "DUP2", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2524": {"op": "MSTORE", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2525": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [42520, 42532], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2527": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2529": {"op": "SWAP1", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2530": {"op": "DUP2", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2531": {"op": "MSTORE", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2532": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2534": {"op": "DUP1", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2535": {"op": "DUP4", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2536": {"op": "KECCAK256", "path": "0", "offset": [42520, 42539], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2537": {"op": "SWAP4", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2538": {"op": "DUP4", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2539": {"op": "MSTORE", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2540": {"op": "SWAP3", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2541": {"op": "SWAP1", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2542": {"op": "MSTORE", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2543": {"op": "KECCAK256", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2544": {"op": "SLOAD", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2545": {"op": "SWAP1", "path": "0", "offset": [42520, 42546], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2546": {"op": "JUMP", "jump": "o", "path": "0", "offset": [42222, 42553], "fn": "ERC721Enumerable.tokenOfOwnerByIndex"}, "2547": {"op": "JUMPDEST", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "2548": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2550": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2551": {"op": "PUSH1", "value": "0x1"}, "2553": {"op": "PUSH1", "value": "0x1"}, "2555": {"op": "PUSH1", "value": "0xA0"}, "2557": {"op": "SHL"}, "2558": {"op": "SUB"}, "2559": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2560": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "2561": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "2562": {"op": "PUSH2", "value": "0xA1D", "path": "0", "offset": [49288, 49356]}, "2565": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "2566": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2568": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2569": {"op": "PUSH3", "value": "0x461BCD"}, "2573": {"op": "PUSH1", "value": "0xE5"}, "2575": {"op": "SHL"}, "2576": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "2577": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2578": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2580": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2581": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2584": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2585": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2588": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2589": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2590": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2592": {"op": "MLOAD", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2593": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53729, 53741], "fn": "FundMePunks.withdraw"}, "2595": {"op": "SWAP1", "path": "0", "offset": [53729, 53741], "fn": "FundMePunks.withdraw"}, "2596": {"op": "CALLER", "path": "0", "offset": [53755, 53765], "fn": "FundMePunks.withdraw"}, "2597": {"op": "SWAP1", "path": "0", "offset": [53755, 53765], "fn": "FundMePunks.withdraw"}, "2598": {"op": "SELFBALANCE", "path": "0", "offset": [53792, 53813], "fn": "FundMePunks.withdraw"}, "2599": {"op": "SWAP1", "path": "0", "offset": [53792, 53813], "fn": "FundMePunks.withdraw"}, "2600": {"op": "DUP4", "path": "0", "offset": [53729, 53741], "fn": "FundMePunks.withdraw"}, "2601": {"op": "DUP2", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2602": {"op": "DUP2", "path": "0", "offset": [53729, 53741], "fn": "FundMePunks.withdraw"}, "2603": {"op": "DUP2", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2604": {"op": "DUP6", "path": "0", "offset": [53792, 53813], "fn": "FundMePunks.withdraw"}, "2605": {"op": "DUP8", "path": "0", "offset": [53755, 53765], "fn": "FundMePunks.withdraw"}, "2606": {"op": "GAS", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2607": {"op": "CALL", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2608": {"op": "SWAP3", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2609": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2610": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2611": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2612": {"op": "RETURNDATASIZE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2613": {"op": "DUP1", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2614": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2616": {"op": "DUP2", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2617": {"op": "EQ", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2618": {"op": "PUSH2", "value": "0xA5F", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2621": {"op": "JUMPI", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2622": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2624": {"op": "MLOAD", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2625": {"op": "SWAP2", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2626": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2627": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2629": {"op": "NOT", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2630": {"op": "PUSH1", "value": "0x3F", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2632": {"op": "RETURNDATASIZE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2633": {"op": "ADD", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2634": {"op": "AND", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2635": {"op": "DUP3", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2636": {"op": "ADD", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2637": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2639": {"op": "MSTORE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2640": {"op": "RETURNDATASIZE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2641": {"op": "DUP3", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2642": {"op": "MSTORE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2643": {"op": "RETURNDATASIZE", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2644": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2646": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2648": {"op": "DUP5", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2649": {"op": "ADD", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2650": {"op": "RETURNDATACOPY", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2651": {"op": "PUSH2", "value": "0xA64", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2654": {"op": "JUMP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2655": {"op": "JUMPDEST", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2656": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2658": {"op": "SWAP2", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2659": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2660": {"op": "JUMPDEST", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2661": {"op": "POP", "path": "0", "offset": [53747, 53827], "fn": "FundMePunks.withdraw"}, "2662": {"op": "POP", "path": "0", "offset": [53728, 53827], "fn": "FundMePunks.withdraw"}, "2663": {"op": "SWAP1", "path": "0", "offset": [53728, 53827], "fn": "FundMePunks.withdraw"}, "2664": {"op": "POP", "path": "0", "offset": [53728, 53827], "fn": "FundMePunks.withdraw"}, "2665": {"op": "DUP1", "path": "0", "offset": [53845, 53852], "fn": "FundMePunks.withdraw", "statement": 16, "branch": 110}, "2666": {"op": "PUSH2", "value": "0xA72", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw"}, "2669": {"op": "JUMPI", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw", "branch": 110}, "2670": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw"}, "2672": {"op": "DUP1", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw"}, "2673": {"op": "REVERT", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw"}, "2674": {"op": "JUMPDEST", "path": "0", "offset": [53837, 53853], "fn": "FundMePunks.withdraw"}, "2675": {"op": "POP", "path": "0", "offset": [53718, 53860], "fn": "FundMePunks.withdraw"}, "2676": {"op": "JUMP", "jump": "o", "path": "0", "offset": [53673, 53860], "fn": "FundMePunks.withdraw"}, "2677": {"op": "JUMPDEST", "path": "0", "offset": [32516, 32695], "fn": "ERC721.safeTransferFrom"}, "2678": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom", "statement": 17}, "2681": {"op": "DUP4", "path": "0", "offset": [32666, 32670], "fn": "ERC721.safeTransferFrom"}, "2682": {"op": "DUP4", "path": "0", "offset": [32672, 32674], "fn": "ERC721.safeTransferFrom"}, "2683": {"op": "DUP4", "path": "0", "offset": [32676, 32683], "fn": "ERC721.safeTransferFrom"}, "2684": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2686": {"op": "MLOAD", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2687": {"op": "DUP1", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2688": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2690": {"op": "ADD", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2691": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2693": {"op": "MSTORE", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2694": {"op": "DUP1", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2695": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2697": {"op": "DUP2", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2698": {"op": "MSTORE", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2699": {"op": "POP", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2700": {"op": "PUSH2", "value": "0xF9D", "path": "0", "offset": [32649, 32665], "fn": "ERC721.safeTransferFrom"}, "2703": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32649, 32688], "fn": "ERC721.safeTransferFrom"}, "2704": {"op": "JUMPDEST", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "2705": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [51936, 51952], "fn": "FundMePunks.walletOfOwner"}, "2707": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51968, 51991], "fn": "FundMePunks.walletOfOwner"}, "2709": {"op": "PUSH2", "value": "0xA9D", "path": "0", "offset": [51994, 52011], "fn": "FundMePunks.walletOfOwner"}, "2712": {"op": "DUP4", "path": "0", "offset": [52004, 52010], "fn": "FundMePunks.walletOfOwner"}, "2713": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [51994, 52003], "fn": "FundMePunks.walletOfOwner"}, "2716": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51994, 52011], "fn": "FundMePunks.walletOfOwner"}, "2717": {"op": "JUMPDEST", "path": "0", "offset": [51994, 52011], "fn": "FundMePunks.walletOfOwner"}, "2718": {"op": "SWAP1", "path": "0", "offset": [51968, 52011], "fn": "FundMePunks.walletOfOwner"}, "2719": {"op": "POP", "path": "0", "offset": [51968, 52011], "fn": "FundMePunks.walletOfOwner"}, "2720": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52021, 52046], "fn": "FundMePunks.walletOfOwner"}, "2722": {"op": "DUP2", "path": "0", "offset": [52063, 52078], "fn": "FundMePunks.walletOfOwner"}, "2723": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2732": {"op": "DUP2", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2733": {"op": "GT", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2734": {"op": "ISZERO", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2735": {"op": "PUSH2", "value": "0xABA", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2738": {"op": "JUMPI", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2739": {"op": "PUSH2", "value": "0xABA", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2742": {"op": "PUSH2", "value": "0x1E9D", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2745": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2746": {"op": "JUMPDEST", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2747": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2749": {"op": "MLOAD", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2750": {"op": "SWAP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2751": {"op": "DUP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2752": {"op": "DUP3", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2753": {"op": "MSTORE", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2754": {"op": "DUP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2755": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2757": {"op": "MUL", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2758": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2760": {"op": "ADD", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2761": {"op": "DUP3", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2762": {"op": "ADD", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2763": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2765": {"op": "MSTORE", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2766": {"op": "DUP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2767": {"op": "ISZERO", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2768": {"op": "PUSH2", "value": "0xAE3", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2771": {"op": "JUMPI", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2772": {"op": "DUP2", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2773": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2775": {"op": "ADD", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2776": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2778": {"op": "DUP3", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2779": {"op": "MUL", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2780": {"op": "DUP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2781": {"op": "CALLDATASIZE", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2782": {"op": "DUP4", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2783": {"op": "CALLDATACOPY", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2784": {"op": "ADD", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2785": {"op": "SWAP1", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2786": {"op": "POP"}, "2787": {"op": "JUMPDEST", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2788": {"op": "POP", "path": "0", "offset": [52049, 52079], "fn": "FundMePunks.walletOfOwner"}, "2789": {"op": "SWAP1", "path": "0", "offset": [52021, 52079], "fn": "FundMePunks.walletOfOwner"}, "2790": {"op": "POP", "path": "0", "offset": [52021, 52079], "fn": "FundMePunks.walletOfOwner"}, "2791": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52094, 52103], "fn": "FundMePunks.walletOfOwner"}, "2793": {"op": "JUMPDEST", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2794": {"op": "DUP3", "path": "0", "offset": [52109, 52124], "fn": "FundMePunks.walletOfOwner"}, "2795": {"op": "DUP2", "path": "0", "offset": [52105, 52106], "fn": "FundMePunks.walletOfOwner"}, "2796": {"op": "LT", "path": "0", "offset": [52105, 52124], "fn": "FundMePunks.walletOfOwner"}, "2797": {"op": "ISZERO", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2798": {"op": "PUSH2", "value": "0xB2A", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2801": {"op": "JUMPI", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2802": {"op": "PUSH2", "value": "0xAFB", "path": "0", "offset": [52159, 52189], "fn": "FundMePunks.walletOfOwner", "statement": 18}, "2805": {"op": "DUP6", "path": "0", "offset": [52179, 52185], "fn": "FundMePunks.walletOfOwner"}, "2806": {"op": "DUP3", "path": "0", "offset": [52187, 52188], "fn": "FundMePunks.walletOfOwner"}, "2807": {"op": "PUSH2", "value": "0x95D", "path": "0", "offset": [52159, 52178], "fn": "FundMePunks.walletOfOwner"}, "2810": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52159, 52189], "fn": "FundMePunks.walletOfOwner"}, "2811": {"op": "JUMPDEST", "path": "0", "offset": [52159, 52189], "fn": "FundMePunks.walletOfOwner"}, "2812": {"op": "DUP3", "path": "0", "offset": [52145, 52153], "fn": "FundMePunks.walletOfOwner"}, "2813": {"op": "DUP3", "path": "0", "offset": [52154, 52155], "fn": "FundMePunks.walletOfOwner"}, "2814": {"op": "DUP2", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2815": {"op": "MLOAD", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2816": {"op": "DUP2", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2817": {"op": "LT", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2818": {"op": "PUSH2", "value": "0xB0D", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2821": {"op": "JUMPI", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2822": {"op": "PUSH2", "value": "0xB0D", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2825": {"op": "PUSH2", "value": "0x210C", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2828": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2829": {"op": "JUMPDEST", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2830": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2832": {"op": "SWAP1", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2833": {"op": "DUP2", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2834": {"op": "MUL", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2835": {"op": "SWAP2", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2836": {"op": "SWAP1", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2837": {"op": "SWAP2", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2838": {"op": "ADD", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2839": {"op": "ADD", "path": "0", "offset": [52145, 52156], "fn": "FundMePunks.walletOfOwner"}, "2840": {"op": "MSTORE", "path": "0", "offset": [52145, 52189], "fn": "FundMePunks.walletOfOwner"}, "2841": {"op": "DUP1", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner", "statement": 19}, "2842": {"op": "PUSH2", "value": "0xB22", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2845": {"op": "DUP2", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2846": {"op": "PUSH2", "value": "0x2138", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2849": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2850": {"op": "JUMPDEST", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2851": {"op": "SWAP2", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2852": {"op": "POP", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2853": {"op": "POP", "path": "0", "offset": [52126, 52129], "fn": "FundMePunks.walletOfOwner"}, "2854": {"op": "PUSH2", "value": "0xAE9", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2857": {"op": "JUMP", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2858": {"op": "JUMPDEST", "path": "0", "offset": [52089, 52200], "fn": "FundMePunks.walletOfOwner"}, "2859": {"op": "POP"}, "2860": {"op": "SWAP4", "path": "0", "offset": [52216, 52224], "fn": "FundMePunks.walletOfOwner", "statement": 20}, "2861": {"op": "SWAP3", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "2862": {"op": "POP"}, "2863": {"op": "POP"}, "2864": {"op": "POP"}, "2865": {"op": "JUMP", "jump": "o", "path": "0", "offset": [51852, 52231], "fn": "FundMePunks.walletOfOwner"}, "2866": {"op": "JUMPDEST", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "2867": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2869": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2870": {"op": "PUSH1", "value": "0x1"}, "2872": {"op": "PUSH1", "value": "0x1"}, "2874": {"op": "PUSH1", "value": "0xA0"}, "2876": {"op": "SHL"}, "2877": {"op": "SUB"}, "2878": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2879": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "2880": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "2881": {"op": "PUSH2", "value": "0xB5C", "path": "0", "offset": [49288, 49356]}, "2884": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "2885": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2887": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2888": {"op": "PUSH3", "value": "0x461BCD"}, "2892": {"op": "PUSH1", "value": "0xE5"}, "2894": {"op": "SHL"}, "2895": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "2896": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2897": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2899": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2900": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2903": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2904": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2907": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2908": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2909": {"op": "PUSH1", "value": "0xD", "path": "0", "offset": [53129, 53133], "fn": "FundMePunks.setCost", "statement": 21}, "2911": {"op": "SSTORE", "path": "0", "offset": [53129, 53144], "fn": "FundMePunks.setCost"}, "2912": {"op": "JUMP", "jump": "o", "path": "0", "offset": [53067, 53151], "fn": "FundMePunks.setCost"}, "2913": {"op": "JUMPDEST", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "2914": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2916": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2917": {"op": "PUSH1", "value": "0x1"}, "2919": {"op": "PUSH1", "value": "0x1"}, "2921": {"op": "PUSH1", "value": "0xA0"}, "2923": {"op": "SHL"}, "2924": {"op": "SUB"}, "2925": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "2926": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "2927": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "2928": {"op": "PUSH2", "value": "0xB8B", "path": "0", "offset": [49288, 49356]}, "2931": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "2932": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2934": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2935": {"op": "PUSH3", "value": "0x461BCD"}, "2939": {"op": "PUSH1", "value": "0xE5"}, "2941": {"op": "SHL"}, "2942": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "2943": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2944": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2946": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2947": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2950": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2951": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2954": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2955": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "2956": {"op": "PUSH1", "value": "0x10", "path": "0", "offset": [53035, 53045], "fn": "FundMePunks.setIsRevealed", "statement": 22}, "2958": {"op": "DUP1", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2959": {"op": "SLOAD", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2960": {"op": "PUSH1", "value": "0xFF"}, "2962": {"op": "NOT"}, "2963": {"op": "AND", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2964": {"op": "SWAP2", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2965": {"op": "ISZERO", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2966": {"op": "ISZERO", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2967": {"op": "SWAP2", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2968": {"op": "SWAP1", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2969": {"op": "SWAP2", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2970": {"op": "OR", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2971": {"op": "SWAP1", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2972": {"op": "SSTORE", "path": "0", "offset": [53035, 53054], "fn": "FundMePunks.setIsRevealed"}, "2973": {"op": "JUMP", "jump": "o", "path": "0", "offset": [52972, 53061], "fn": "FundMePunks.setIsRevealed"}, "2974": {"op": "JUMPDEST", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "2975": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [42922, 42929], "fn": "ERC721Enumerable.tokenByIndex"}, "2977": {"op": "PUSH2", "value": "0xBA9", "path": "0", "offset": [42974, 43004], "fn": "ERC721Enumerable.tokenByIndex", "statement": 23}, "2980": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [42711, 42721], "fn": "ERC721Enumerable.totalSupply"}, "2982": {"op": "SLOAD", "path": "0", "offset": [42711, 42728], "fn": "ERC721Enumerable.totalSupply"}, "2983": {"op": "SWAP1", "path": "0", "offset": [42711, 42728], "fn": "ERC721Enumerable.totalSupply"}, "2984": {"op": "JUMP", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "2985": {"op": "JUMPDEST", "path": "0", "offset": [42974, 43004], "fn": "ERC721Enumerable.tokenByIndex"}, "2986": {"op": "DUP3", "path": "0", "offset": [42966, 42971], "fn": "ERC721Enumerable.tokenByIndex"}, "2987": {"op": "LT", "path": "0", "offset": [42966, 43004], "fn": "ERC721Enumerable.tokenByIndex", "branch": 111}, "2988": {"op": "PUSH2", "value": "0xC0C", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "2991": {"op": "JUMPI", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex", "branch": 111}, "2992": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "2994": {"op": "MLOAD", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "2995": {"op": "PUSH3", "value": "0x461BCD"}, "2999": {"op": "PUSH1", "value": "0xE5"}, "3001": {"op": "SHL"}, "3002": {"op": "DUP2", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3003": {"op": "MSTORE", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3004": {"op": "PUSH1", "value": "0x20"}, "3006": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3008": {"op": "DUP3", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3009": {"op": "ADD", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3010": {"op": "MSTORE"}, "3011": {"op": "PUSH1", "value": "0x2C"}, "3013": {"op": "PUSH1", "value": "0x24"}, "3015": {"op": "DUP3"}, "3016": {"op": "ADD"}, "3017": {"op": "MSTORE"}, "3018": {"op": "PUSH32", "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"}, "3051": {"op": "PUSH1", "value": "0x44"}, "3053": {"op": "DUP3"}, "3054": {"op": "ADD"}, "3055": {"op": "MSTORE"}, "3056": {"op": "PUSH12", "value": "0x7574206F6620626F756E6473"}, "3069": {"op": "PUSH1", "value": "0xA0"}, "3071": {"op": "SHL"}, "3072": {"op": "PUSH1", "value": "0x64"}, "3074": {"op": "DUP3"}, "3075": {"op": "ADD"}, "3076": {"op": "MSTORE"}, "3077": {"op": "PUSH1", "value": "0x84"}, "3079": {"op": "ADD"}, "3080": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3083": {"op": "JUMP"}, "3084": {"op": "JUMPDEST", "path": "0", "offset": [42945, 43074], "fn": "ERC721Enumerable.tokenByIndex"}, "3085": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [43091, 43101], "fn": "ERC721Enumerable.tokenByIndex", "statement": 24}, "3087": {"op": "DUP3", "path": "0", "offset": [43102, 43107], "fn": "ERC721Enumerable.tokenByIndex"}, "3088": {"op": "DUP2", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3089": {"op": "SLOAD", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3090": {"op": "DUP2", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3091": {"op": "LT", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3092": {"op": "PUSH2", "value": "0xC1F", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3095": {"op": "JUMPI", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3096": {"op": "PUSH2", "value": "0xC1F", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3099": {"op": "PUSH2", "value": "0x210C", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3102": {"op": "JUMP", "jump": "i", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3103": {"op": "JUMPDEST", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3104": {"op": "SWAP1", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3105": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3107": {"op": "MSTORE", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3108": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3110": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3112": {"op": "KECCAK256", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3113": {"op": "ADD", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3114": {"op": "SLOAD", "path": "0", "offset": [43091, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3115": {"op": "SWAP1", "path": "0", "offset": [43084, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3116": {"op": "POP", "path": "0", "offset": [43084, 43108], "fn": "ERC721Enumerable.tokenByIndex"}, "3117": {"op": "SWAP2", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "3118": {"op": "SWAP1", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "3119": {"op": "POP", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "3120": {"op": "JUMP", "jump": "o", "path": "0", "offset": [42807, 43115], "fn": "ERC721Enumerable.tokenByIndex"}, "3121": {"op": "JUMPDEST", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "3122": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3124": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3125": {"op": "PUSH1", "value": "0x1"}, "3127": {"op": "PUSH1", "value": "0x1"}, "3129": {"op": "PUSH1", "value": "0xA0"}, "3131": {"op": "SHL"}, "3132": {"op": "SUB"}, "3133": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3134": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3135": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "3136": {"op": "PUSH2", "value": "0xC5B", "path": "0", "offset": [49288, 49356]}, "3139": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "3140": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3142": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3143": {"op": "PUSH3", "value": "0x461BCD"}, "3147": {"op": "PUSH1", "value": "0xE5"}, "3149": {"op": "SHL"}, "3150": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "3151": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3152": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3154": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3155": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3158": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3159": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3162": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3163": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3164": {"op": "DUP1", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI", "statement": 25}, "3165": {"op": "MLOAD", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3166": {"op": "PUSH2", "value": "0xC6E", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3169": {"op": "SWAP1", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3170": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [53487, 53494], "fn": "FundMePunks.setBaseURI"}, "3172": {"op": "SWAP1", "path": "0", "offset": [53487, 53494], "fn": "FundMePunks.setBaseURI"}, "3173": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3175": {"op": "DUP5", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3176": {"op": "ADD", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3177": {"op": "SWAP1", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3178": {"op": "PUSH2", "value": "0x1C41", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3181": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3182": {"op": "JUMPDEST", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3183": {"op": "POP", "path": "0", "offset": [53487, 53508], "fn": "FundMePunks.setBaseURI"}, "3184": {"op": "POP", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "3185": {"op": "JUMP", "jump": "o", "path": "0", "offset": [53413, 53515], "fn": "FundMePunks.setBaseURI"}, "3186": {"op": "JUMPDEST", "path": "0", "offset": [29064, 29377], "fn": "ERC721.ownerOf"}, "3187": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [29176, 29183], "fn": "ERC721.ownerOf"}, "3189": {"op": "DUP2", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3190": {"op": "DUP2", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3191": {"op": "MSTORE", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3192": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [29215, 29222], "fn": "ERC721.ownerOf"}, "3194": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3196": {"op": "MSTORE", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3197": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3199": {"op": "DUP2", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3200": {"op": "KECCAK256", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3201": {"op": "SLOAD", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3202": {"op": "PUSH1", "value": "0x1"}, "3204": {"op": "PUSH1", "value": "0x1"}, "3206": {"op": "PUSH1", "value": "0xA0"}, "3208": {"op": "SHL"}, "3209": {"op": "SUB"}, "3210": {"op": "AND", "path": "0", "offset": [29215, 29231], "fn": "ERC721.ownerOf"}, "3211": {"op": "DUP1", "path": "0", "offset": [29262, 29281], "fn": "ERC721.ownerOf", "statement": 26, "branch": 112}, "3212": {"op": "PUSH2", "value": "0x656", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3215": {"op": "JUMPI", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf", "branch": 112}, "3216": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3218": {"op": "MLOAD", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3219": {"op": "PUSH3", "value": "0x461BCD"}, "3223": {"op": "PUSH1", "value": "0xE5"}, "3225": {"op": "SHL"}, "3226": {"op": "DUP2", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3227": {"op": "MSTORE", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3228": {"op": "PUSH1", "value": "0x20"}, "3230": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3232": {"op": "DUP3", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3233": {"op": "ADD", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3234": {"op": "MSTORE"}, "3235": {"op": "PUSH1", "value": "0x29"}, "3237": {"op": "PUSH1", "value": "0x24"}, "3239": {"op": "DUP3"}, "3240": {"op": "ADD"}, "3241": {"op": "MSTORE"}, "3242": {"op": "PUSH32", "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"}, "3275": {"op": "PUSH1", "value": "0x44"}, "3277": {"op": "DUP3"}, "3278": {"op": "ADD"}, "3279": {"op": "MSTORE"}, "3280": {"op": "PUSH9", "value": "0x32B73A103A37B5B2B7"}, "3290": {"op": "PUSH1", "value": "0xB9"}, "3292": {"op": "SHL"}, "3293": {"op": "PUSH1", "value": "0x64"}, "3295": {"op": "DUP3"}, "3296": {"op": "ADD"}, "3297": {"op": "MSTORE"}, "3298": {"op": "PUSH1", "value": "0x84"}, "3300": {"op": "ADD"}, "3301": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [29241, 29348], "fn": "ERC721.ownerOf"}, "3304": {"op": "JUMP"}, "3305": {"op": "JUMPDEST", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "3306": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [28836, 28843], "fn": "ERC721.balanceOf"}, "3308": {"op": "PUSH1", "value": "0x1"}, "3310": {"op": "PUSH1", "value": "0x1"}, "3312": {"op": "PUSH1", "value": "0xA0"}, "3314": {"op": "SHL"}, "3315": {"op": "SUB"}, "3316": {"op": "DUP3", "path": "0", "offset": [28880, 28899], "fn": "ERC721.balanceOf", "statement": 27}, "3317": {"op": "AND", "path": "0", "offset": [28880, 28899], "fn": "ERC721.balanceOf", "branch": 113}, "3318": {"op": "PUSH2", "value": "0xD54", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3321": {"op": "JUMPI", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf", "branch": 113}, "3322": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3324": {"op": "MLOAD", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3325": {"op": "PUSH3", "value": "0x461BCD"}, "3329": {"op": "PUSH1", "value": "0xE5"}, "3331": {"op": "SHL"}, "3332": {"op": "DUP2", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3333": {"op": "MSTORE", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3334": {"op": "PUSH1", "value": "0x20"}, "3336": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3338": {"op": "DUP3", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3339": {"op": "ADD", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3340": {"op": "MSTORE"}, "3341": {"op": "PUSH1", "value": "0x2A"}, "3343": {"op": "PUSH1", "value": "0x24"}, "3345": {"op": "DUP3"}, "3346": {"op": "ADD"}, "3347": {"op": "MSTORE"}, "3348": {"op": "PUSH32", "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"}, "3381": {"op": "PUSH1", "value": "0x44"}, "3383": {"op": "DUP3"}, "3384": {"op": "ADD"}, "3385": {"op": "MSTORE"}, "3386": {"op": "PUSH10", "value": "0x726F2061646472657373"}, "3397": {"op": "PUSH1", "value": "0xB0"}, "3399": {"op": "SHL"}, "3400": {"op": "PUSH1", "value": "0x64"}, "3402": {"op": "DUP3"}, "3403": {"op": "ADD"}, "3404": {"op": "MSTORE"}, "3405": {"op": "PUSH1", "value": "0x84"}, "3407": {"op": "ADD"}, "3408": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3411": {"op": "JUMP"}, "3412": {"op": "JUMPDEST", "path": "0", "offset": [28859, 28967], "fn": "ERC721.balanceOf"}, "3413": {"op": "POP"}, "3414": {"op": "PUSH1", "value": "0x1"}, "3416": {"op": "PUSH1", "value": "0x1"}, "3418": {"op": "PUSH1", "value": "0xA0"}, "3420": {"op": "SHL"}, "3421": {"op": "SUB"}, "3422": {"op": "AND", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf", "statement": 28}, "3423": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3425": {"op": "SWAP1", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3426": {"op": "DUP2", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3427": {"op": "MSTORE", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3428": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [28984, 28993], "fn": "ERC721.balanceOf"}, "3430": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3432": {"op": "MSTORE", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3433": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3435": {"op": "SWAP1", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3436": {"op": "KECCAK256", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3437": {"op": "SLOAD", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3438": {"op": "SWAP1", "path": "0", "offset": [28984, 29000], "fn": "ERC721.balanceOf"}, "3439": {"op": "JUMP", "jump": "o", "path": "0", "offset": [28724, 29007], "fn": "ERC721.balanceOf"}, "3440": {"op": "JUMPDEST", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "3441": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3443": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3444": {"op": "PUSH1", "value": "0x1"}, "3446": {"op": "PUSH1", "value": "0x1"}, "3448": {"op": "PUSH1", "value": "0xA0"}, "3450": {"op": "SHL"}, "3451": {"op": "SUB"}, "3452": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3453": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3454": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "3455": {"op": "PUSH2", "value": "0xD9A", "path": "0", "offset": [49288, 49356]}, "3458": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "3459": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3461": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3462": {"op": "PUSH3", "value": "0x461BCD"}, "3466": {"op": "PUSH1", "value": "0xE5"}, "3468": {"op": "SHL"}, "3469": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "3470": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3471": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3473": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3474": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3477": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3478": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3481": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3482": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3483": {"op": "PUSH2", "value": "0xDA4", "path": "0", "offset": [49780, 49801], "fn": "Ownable.renounceOwnership", "statement": 29}, "3486": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [49798, 49799], "fn": "Ownable.renounceOwnership"}, "3488": {"op": "PUSH2", "value": "0x15CE", "path": "0", "offset": [49780, 49789], "fn": "Ownable.renounceOwnership"}, "3491": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49780, 49801], "fn": "Ownable.renounceOwnership"}, "3492": {"op": "JUMPDEST", "path": "0", "offset": [49780, 49801], "fn": "Ownable.renounceOwnership"}, "3493": {"op": "JUMP", "jump": "o", "path": "0", "offset": [49716, 49808], "fn": "Ownable.renounceOwnership"}, "3494": {"op": "JUMPDEST", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "3495": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3497": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3498": {"op": "PUSH1", "value": "0x1"}, "3500": {"op": "PUSH1", "value": "0x1"}, "3502": {"op": "PUSH1", "value": "0xA0"}, "3504": {"op": "SHL"}, "3505": {"op": "SUB"}, "3506": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3507": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3508": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "3509": {"op": "PUSH2", "value": "0xDD0", "path": "0", "offset": [49288, 49356]}, "3512": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "3513": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3515": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3516": {"op": "PUSH3", "value": "0x461BCD"}, "3520": {"op": "PUSH1", "value": "0xE5"}, "3522": {"op": "SHL"}, "3523": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "3524": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3525": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3527": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3528": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3531": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3532": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3535": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3536": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "3537": {"op": "PUSH1", "value": "0xF", "path": "0", "offset": [53237, 53250], "fn": "FundMePunks.setmaxMintAmount", "statement": 30}, "3539": {"op": "SSTORE", "path": "0", "offset": [53237, 53270], "fn": "FundMePunks.setmaxMintAmount"}, "3540": {"op": "JUMP", "jump": "o", "path": "0", "offset": [53157, 53277], "fn": "FundMePunks.setmaxMintAmount"}, "3541": {"op": "JUMPDEST", "path": "0", "offset": [29601, 29703], "fn": "ERC721.symbol"}, "3542": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [29657, 29670], "fn": "ERC721.symbol"}, "3544": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [29689, 29696], "fn": "ERC721.symbol", "statement": 31}, "3546": {"op": "DUP1", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3547": {"op": "SLOAD", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3548": {"op": "PUSH2", "value": "0x66B", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3551": {"op": "SWAP1", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3552": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3555": {"op": "JUMP", "jump": "i", "path": "0", "offset": [29682, 29696], "fn": "ERC721.symbol"}, "3556": {"op": "JUMPDEST", "path": "0", "offset": [51256, 51846], "fn": "FundMePunks.mint"}, "3557": {"op": "PUSH2", "value": "0xDED", "path": "0", "offset": [51333, 51354], "fn": "FundMePunks.mint", "statement": 32}, "3560": {"op": "CALLER", "path": "0", "offset": [51343, 51353], "fn": "FundMePunks.mint"}, "3561": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [51333, 51342], "fn": "FundMePunks.mint"}, "3564": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51333, 51354], "fn": "FundMePunks.mint"}, "3565": {"op": "JUMPDEST", "path": "0", "offset": [51333, 51354], "fn": "FundMePunks.mint"}, "3566": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [51358, 51359], "fn": "FundMePunks.mint"}, "3568": {"op": "EQ", "path": "0", "offset": [51333, 51359], "fn": "FundMePunks.mint", "branch": 114}, "3569": {"op": "PUSH2", "value": "0xE3C", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3572": {"op": "JUMPI", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint", "branch": 114}, "3573": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3575": {"op": "MLOAD", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3576": {"op": "PUSH3", "value": "0x461BCD"}, "3580": {"op": "PUSH1", "value": "0xE5"}, "3582": {"op": "SHL"}, "3583": {"op": "DUP2", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3584": {"op": "MSTORE", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3585": {"op": "PUSH1", "value": "0x20"}, "3587": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3589": {"op": "DUP3", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3590": {"op": "ADD", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3591": {"op": "MSTORE"}, "3592": {"op": "PUSH1", "value": "0x17"}, "3594": {"op": "PUSH1", "value": "0x24"}, "3596": {"op": "DUP3"}, "3597": {"op": "ADD"}, "3598": {"op": "MSTORE"}, "3599": {"op": "PUSH32", "value": "0x4F6E6C792035206D696E7420706572206163636F756E74000000000000000000"}, "3632": {"op": "PUSH1", "value": "0x44"}, "3634": {"op": "DUP3"}, "3635": {"op": "ADD"}, "3636": {"op": "MSTORE"}, "3637": {"op": "PUSH1", "value": "0x64"}, "3639": {"op": "ADD"}, "3640": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3643": {"op": "JUMP"}, "3644": {"op": "JUMPDEST", "path": "0", "offset": [51325, 51387], "fn": "FundMePunks.mint"}, "3645": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51463, 51477], "fn": "FundMePunks.mint"}, "3647": {"op": "PUSH2", "value": "0xE47", "path": "0", "offset": [51480, 51493], "fn": "FundMePunks.mint"}, "3650": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [42711, 42721], "fn": "ERC721Enumerable.totalSupply"}, "3652": {"op": "SLOAD", "path": "0", "offset": [42711, 42728], "fn": "ERC721Enumerable.totalSupply"}, "3653": {"op": "SWAP1", "path": "0", "offset": [42711, 42728], "fn": "ERC721Enumerable.totalSupply"}, "3654": {"op": "JUMP", "path": "0", "offset": [42624, 42735], "fn": "ERC721Enumerable.totalSupply"}, "3655": {"op": "JUMPDEST", "path": "0", "offset": [51480, 51493], "fn": "FundMePunks.mint"}, "3656": {"op": "SWAP1", "path": "0", "offset": [51463, 51493], "fn": "FundMePunks.mint"}, "3657": {"op": "POP", "path": "0", "offset": [51463, 51493], "fn": "FundMePunks.mint"}, "3658": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51525, 51526], "fn": "FundMePunks.mint", "statement": 33}, "3660": {"op": "DUP3", "path": "0", "offset": [51511, 51522], "fn": "FundMePunks.mint"}, "3661": {"op": "GT", "path": "0", "offset": [51511, 51526], "fn": "FundMePunks.mint", "branch": 115}, "3662": {"op": "PUSH2", "value": "0xE56", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint"}, "3665": {"op": "JUMPI", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint", "branch": 115}, "3666": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint"}, "3668": {"op": "DUP1", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint"}, "3669": {"op": "REVERT", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint"}, "3670": {"op": "JUMPDEST", "path": "0", "offset": [51503, 51527], "fn": "FundMePunks.mint"}, "3671": {"op": "PUSH1", "value": "0xF", "path": "0", "offset": [51560, 51573], "fn": "FundMePunks.mint", "statement": 34}, "3673": {"op": "SLOAD", "path": "0", "offset": [51560, 51573], "fn": "FundMePunks.mint"}, "3674": {"op": "DUP3", "path": "0", "offset": [51545, 51556], "fn": "FundMePunks.mint"}, "3675": {"op": "GT", "path": "0", "offset": [51545, 51573], "fn": "FundMePunks.mint"}, "3676": {"op": "ISZERO", "path": "0", "offset": [51545, 51573], "fn": "FundMePunks.mint", "branch": 116}, "3677": {"op": "PUSH2", "value": "0xE65", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint"}, "3680": {"op": "JUMPI", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint", "branch": 116}, "3681": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint"}, "3683": {"op": "DUP1", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint"}, "3684": {"op": "REVERT", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint"}, "3685": {"op": "JUMPDEST", "path": "0", "offset": [51537, 51574], "fn": "FundMePunks.mint"}, "3686": {"op": "PUSH1", "value": "0xE", "path": "0", "offset": [51616, 51625], "fn": "FundMePunks.mint", "statement": 35}, "3688": {"op": "SLOAD", "path": "0", "offset": [51616, 51625], "fn": "FundMePunks.mint"}, "3689": {"op": "PUSH2", "value": "0xE72", "path": "0", "offset": [51592, 51612], "fn": "FundMePunks.mint"}, "3692": {"op": "DUP4", "path": "0", "offset": [51601, 51612], "fn": "FundMePunks.mint"}, "3693": {"op": "DUP4", "path": "0", "offset": [51592, 51598], "fn": "FundMePunks.mint"}, "3694": {"op": "PUSH2", "value": "0x2153", "path": "0", "offset": [51592, 51612], "fn": "FundMePunks.mint"}, "3697": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51592, 51612], "fn": "FundMePunks.mint"}, "3698": {"op": "JUMPDEST", "path": "0", "offset": [51592, 51612], "fn": "FundMePunks.mint"}, "3699": {"op": "GT", "path": "0", "offset": [51592, 51625], "fn": "FundMePunks.mint"}, "3700": {"op": "ISZERO", "path": "0", "offset": [51592, 51625], "fn": "FundMePunks.mint", "branch": 117}, "3701": {"op": "PUSH2", "value": "0xE7D", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint"}, "3704": {"op": "JUMPI", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint", "branch": 117}, "3705": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint"}, "3707": {"op": "DUP1", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint"}, "3708": {"op": "REVERT", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint"}, "3709": {"op": "JUMPDEST", "path": "0", "offset": [51584, 51626], "fn": "FundMePunks.mint"}, "3710": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3712": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3713": {"op": "PUSH1", "value": "0x1"}, "3715": {"op": "PUSH1", "value": "0x1"}, "3717": {"op": "PUSH1", "value": "0xA0"}, "3719": {"op": "SHL"}, "3720": {"op": "SUB"}, "3721": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "3722": {"op": "CALLER", "path": "0", "offset": [51641, 51651], "fn": "FundMePunks.mint"}, "3723": {"op": "EQ", "path": "0", "offset": [51641, 51662], "fn": "FundMePunks.mint", "branch": 118}, "3724": {"op": "PUSH2", "value": "0xEA9", "path": "0", "offset": [51637, 51729], "fn": "FundMePunks.mint"}, "3727": {"op": "JUMPI", "path": "0", "offset": [51637, 51729], "fn": "FundMePunks.mint", "branch": 118}, "3728": {"op": "DUP2", "path": "0", "offset": [51706, 51717], "fn": "FundMePunks.mint", "statement": 36}, "3729": {"op": "PUSH1", "value": "0xD", "path": "0", "offset": [51699, 51703], "fn": "FundMePunks.mint"}, "3731": {"op": "SLOAD", "path": "0", "offset": [51699, 51703], "fn": "FundMePunks.mint"}, "3732": {"op": "PUSH2", "value": "0xE9D", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3735": {"op": "SWAP2", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3736": {"op": "SWAP1", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3737": {"op": "PUSH2", "value": "0x216B", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3740": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3741": {"op": "JUMPDEST", "path": "0", "offset": [51699, 51717], "fn": "FundMePunks.mint"}, "3742": {"op": "CALLVALUE", "path": "0", "offset": [51686, 51695], "fn": "FundMePunks.mint"}, "3743": {"op": "LT", "path": "0", "offset": [51686, 51717], "fn": "FundMePunks.mint"}, "3744": {"op": "ISZERO", "path": "0", "offset": [51686, 51717], "fn": "FundMePunks.mint", "branch": 119}, "3745": {"op": "PUSH2", "value": "0xEA9", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint"}, "3748": {"op": "JUMPI", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint", "branch": 119}, "3749": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint"}, "3751": {"op": "DUP1", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint"}, "3752": {"op": "REVERT", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint"}, "3753": {"op": "JUMPDEST", "path": "0", "offset": [51678, 51718], "fn": "FundMePunks.mint"}, "3754": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [51756, 51757], "fn": "FundMePunks.mint"}, "3756": {"op": "JUMPDEST", "path": "0", "offset": [51739, 51840], "fn": "FundMePunks.mint"}, "3757": {"op": "DUP3", "path": "0", "offset": [51764, 51775], "fn": "FundMePunks.mint"}, "3758": {"op": "DUP2", "path": "0", "offset": [51759, 51760], "fn": "FundMePunks.mint"}, "3759": {"op": "GT", "path": "0", "offset": [51759, 51775], "fn": "FundMePunks.mint"}, "3760": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [51739, 51840], "fn": "FundMePunks.mint"}, "3763": {"op": "JUMPI", "path": "0", "offset": [51739, 51840], "fn": "FundMePunks.mint"}, "3764": {"op": "PUSH2", "value": "0xEC6", "path": "0", "offset": [51796, 51829], "fn": "FundMePunks.mint", "statement": 37}, "3767": {"op": "CALLER", "path": "0", "offset": [51806, 51816], "fn": "FundMePunks.mint"}, "3768": {"op": "PUSH2", "value": "0xEC1", "path": "0", "offset": [51818, 51828], "fn": "FundMePunks.mint"}, "3771": {"op": "DUP4", "path": "0", "offset": [51827, 51828], "fn": "FundMePunks.mint"}, "3772": {"op": "DUP6", "path": "0", "offset": [51818, 51824], "fn": "FundMePunks.mint"}, "3773": {"op": "PUSH2", "value": "0x2153", "path": "0", "offset": [51818, 51828], "fn": "FundMePunks.mint"}, "3776": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51818, 51828], "fn": "FundMePunks.mint"}, "3777": {"op": "JUMPDEST", "path": "0", "offset": [51818, 51828], "fn": "FundMePunks.mint"}, "3778": {"op": "PUSH2", "value": "0x1620", "path": "0", "offset": [51796, 51805], "fn": "FundMePunks.mint"}, "3781": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51796, 51829], "fn": "FundMePunks.mint"}, "3782": {"op": "JUMPDEST", "path": "0", "offset": [51796, 51829], "fn": "FundMePunks.mint"}, "3783": {"op": "DUP1", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint", "statement": 38}, "3784": {"op": "PUSH2", "value": "0xED0", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3787": {"op": "DUP2", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3788": {"op": "PUSH2", "value": "0x2138", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3791": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3792": {"op": "JUMPDEST", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3793": {"op": "SWAP2", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3794": {"op": "POP", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3795": {"op": "POP", "path": "0", "offset": [51777, 51780], "fn": "FundMePunks.mint"}, "3796": {"op": "PUSH2", "value": "0xEAC", "path": "0", "offset": [51739, 51840], "fn": "FundMePunks.mint"}, "3799": {"op": "JUMP", "path": "0", "offset": [51739, 51840], "fn": "FundMePunks.mint"}, "3800": {"op": "JUMPDEST", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "3801": {"op": "PUSH1", "value": "0x1"}, "3803": {"op": "PUSH1", "value": "0x1"}, "3805": {"op": "PUSH1", "value": "0xA0"}, "3807": {"op": "SHL"}, "3808": {"op": "SUB"}, "3809": {"op": "DUP3", "path": "0", "offset": [31564, 31588], "fn": "ERC721.setApprovalForAll", "statement": 39}, "3810": {"op": "AND", "path": "0", "offset": [31564, 31588], "fn": "ERC721.setApprovalForAll"}, "3811": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3812": {"op": "EQ", "path": "0", "offset": [31564, 31588], "fn": "ERC721.setApprovalForAll"}, "3813": {"op": "ISZERO", "path": "0", "offset": [31564, 31588], "fn": "ERC721.setApprovalForAll", "branch": 120}, "3814": {"op": "PUSH2", "value": "0xF31", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3817": {"op": "JUMPI", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll", "branch": 120}, "3818": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3820": {"op": "MLOAD", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3821": {"op": "PUSH3", "value": "0x461BCD"}, "3825": {"op": "PUSH1", "value": "0xE5"}, "3827": {"op": "SHL"}, "3828": {"op": "DUP2", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3829": {"op": "MSTORE", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3830": {"op": "PUSH1", "value": "0x20"}, "3832": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3834": {"op": "DUP3", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3835": {"op": "ADD", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3836": {"op": "MSTORE"}, "3837": {"op": "PUSH1", "value": "0x19"}, "3839": {"op": "PUSH1", "value": "0x24"}, "3841": {"op": "DUP3"}, "3842": {"op": "ADD"}, "3843": {"op": "MSTORE"}, "3844": {"op": "PUSH32", "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"}, "3877": {"op": "PUSH1", "value": "0x44"}, "3879": {"op": "DUP3"}, "3880": {"op": "ADD"}, "3881": {"op": "MSTORE"}, "3882": {"op": "PUSH1", "value": "0x64"}, "3884": {"op": "ADD"}, "3885": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3888": {"op": "JUMP"}, "3889": {"op": "JUMPDEST", "path": "0", "offset": [31556, 31618], "fn": "ERC721.setApprovalForAll"}, "3890": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3891": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll", "statement": 40}, "3893": {"op": "DUP2", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3894": {"op": "DUP2", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3895": {"op": "MSTORE", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3896": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [31629, 31647], "fn": "ERC721.setApprovalForAll"}, "3898": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3900": {"op": "SWAP1", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3901": {"op": "DUP2", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3902": {"op": "MSTORE", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3903": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3905": {"op": "DUP1", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3906": {"op": "DUP4", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3907": {"op": "KECCAK256", "path": "0", "offset": [31629, 31661], "fn": "ERC721.setApprovalForAll"}, "3908": {"op": "PUSH1", "value": "0x1"}, "3910": {"op": "PUSH1", "value": "0x1"}, "3912": {"op": "PUSH1", "value": "0xA0"}, "3914": {"op": "SHL"}, "3915": {"op": "SUB"}, "3916": {"op": "DUP8", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3917": {"op": "AND", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3918": {"op": "DUP1", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3919": {"op": "DUP6", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3920": {"op": "MSTORE", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3921": {"op": "SWAP1", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3922": {"op": "DUP4", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3923": {"op": "MSTORE", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3924": {"op": "SWAP3", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3925": {"op": "DUP2", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3926": {"op": "SWAP1", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3927": {"op": "KECCAK256", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3928": {"op": "DUP1", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3929": {"op": "SLOAD", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3930": {"op": "PUSH1", "value": "0xFF"}, "3932": {"op": "NOT"}, "3933": {"op": "AND", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3934": {"op": "DUP7", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3935": {"op": "ISZERO", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3936": {"op": "ISZERO", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3937": {"op": "SWAP1", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3938": {"op": "DUP2", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3939": {"op": "OR", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3940": {"op": "SWAP1", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3941": {"op": "SWAP2", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3942": {"op": "SSTORE", "path": "0", "offset": [31629, 31682], "fn": "ERC721.setApprovalForAll"}, "3943": {"op": "SWAP1", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll", "statement": 41}, "3944": {"op": "MLOAD", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3945": {"op": "SWAP1"}, "3946": {"op": "DUP2"}, "3947": {"op": "MSTORE"}, "3948": {"op": "SWAP2", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3949": {"op": "SWAP3", "path": "0", "offset": [31629, 31671], "fn": "ERC721.setApprovalForAll"}, "3950": {"op": "SWAP2", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "3951": {"op": "PUSH32", "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3984": {"op": "SWAP2", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3985": {"op": "ADD"}, "3986": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3988": {"op": "MLOAD", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3989": {"op": "DUP1", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3990": {"op": "SWAP2", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3991": {"op": "SUB", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3992": {"op": "SWAP1", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3993": {"op": "LOG3", "path": "0", "offset": [31697, 31745], "fn": "ERC721.setApprovalForAll"}, "3994": {"op": "POP", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "3995": {"op": "POP", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "3996": {"op": "JUMP", "jump": "o", "path": "0", "offset": [31434, 31752], "fn": "ERC721.setApprovalForAll"}, "3997": {"op": "JUMPDEST", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "3998": {"op": "PUSH2", "value": "0xFA7", "path": "0", "offset": [32943, 32984], "fn": "ERC721.safeTransferFrom", "statement": 42}, "4001": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "4002": {"op": "DUP4", "path": "0", "offset": [32976, 32983], "fn": "ERC721.safeTransferFrom"}, "4003": {"op": "PUSH2", "value": "0x132C", "path": "0", "offset": [32943, 32961], "fn": "ERC721.safeTransferFrom"}, "4006": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32943, 32984], "fn": "ERC721.safeTransferFrom"}, "4007": {"op": "JUMPDEST", "path": "0", "offset": [32943, 32984], "fn": "ERC721.safeTransferFrom", "branch": 121}, "4008": {"op": "PUSH2", "value": "0xFC3", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4011": {"op": "JUMPI", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom", "branch": 121}, "4012": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4014": {"op": "MLOAD", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4015": {"op": "PUSH3", "value": "0x461BCD"}, "4019": {"op": "PUSH1", "value": "0xE5"}, "4021": {"op": "SHL"}, "4022": {"op": "DUP2", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4023": {"op": "MSTORE", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4024": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4026": {"op": "ADD", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4027": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4030": {"op": "SWAP1", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4031": {"op": "PUSH2", "value": "0x2086", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4034": {"op": "JUMP", "jump": "i", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4035": {"op": "JUMPDEST", "path": "0", "offset": [32922, 33059], "fn": "ERC721.safeTransferFrom"}, "4036": {"op": "PUSH2", "value": "0xFCF", "path": "0", "offset": [33069, 33108], "fn": "ERC721.safeTransferFrom", "statement": 43}, "4039": {"op": "DUP5", "path": "0", "offset": [33083, 33087], "fn": "ERC721.safeTransferFrom"}, "4040": {"op": "DUP5", "path": "0", "offset": [33089, 33091], "fn": "ERC721.safeTransferFrom"}, "4041": {"op": "DUP5", "path": "0", "offset": [33093, 33100], "fn": "ERC721.safeTransferFrom"}, "4042": {"op": "DUP5", "path": "0", "offset": [33102, 33107], "fn": "ERC721.safeTransferFrom"}, "4043": {"op": "PUSH2", "value": "0x163A", "path": "0", "offset": [33069, 33082], "fn": "ERC721.safeTransferFrom"}, "4046": {"op": "JUMP", "jump": "i", "path": "0", "offset": [33069, 33108], "fn": "ERC721.safeTransferFrom"}, "4047": {"op": "JUMPDEST", "path": "0", "offset": [33069, 33108], "fn": "ERC721.safeTransferFrom"}, "4048": {"op": "POP", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "4049": {"op": "POP", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "4050": {"op": "POP", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "4051": {"op": "POP", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "4052": {"op": "JUMP", "jump": "o", "path": "0", "offset": [32761, 33115], "fn": "ERC721.safeTransferFrom"}, "4053": {"op": "JUMPDEST", "path": "0", "offset": [50516, 50553]}, "4054": {"op": "PUSH1", "value": "0xC", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4056": {"op": "DUP1", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4057": {"op": "SLOAD", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4058": {"op": "PUSH2", "value": "0x795", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4061": {"op": "SWAP1", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4062": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4065": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50516, 50553], "fn": "ERC721.safeTransferFrom"}, "4066": {"op": "JUMPDEST", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4067": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [34686, 34690], "fn": "ERC721._exists"}, "4069": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4070": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4071": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4072": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [34709, 34716], "fn": "ERC721._exists"}, "4074": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4076": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4077": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4079": {"op": "SWAP1", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4080": {"op": "KECCAK256", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4081": {"op": "SLOAD", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4082": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [52350, 52363], "fn": "FundMePunks.tokenURI"}, "4084": {"op": "SWAP1", "path": "0", "offset": [52350, 52363], "fn": "FundMePunks.tokenURI"}, "4085": {"op": "PUSH1", "value": "0x1"}, "4087": {"op": "PUSH1", "value": "0x1"}, "4089": {"op": "PUSH1", "value": "0xA0"}, "4091": {"op": "SHL"}, "4092": {"op": "SUB"}, "4093": {"op": "AND", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4094": {"op": "PUSH2", "value": "0x1061", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI", "statement": 44}, "4097": {"op": "JUMPI", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4098": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4100": {"op": "MLOAD", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4101": {"op": "PUSH3", "value": "0x461BCD"}, "4105": {"op": "PUSH1", "value": "0xE5"}, "4107": {"op": "SHL"}, "4108": {"op": "DUP2", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4109": {"op": "MSTORE", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4110": {"op": "PUSH1", "value": "0x20"}, "4112": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4114": {"op": "DUP3", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4115": {"op": "ADD", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4116": {"op": "MSTORE"}, "4117": {"op": "PUSH1", "value": "0x2F"}, "4119": {"op": "PUSH1", "value": "0x24"}, "4121": {"op": "DUP3"}, "4122": {"op": "ADD"}, "4123": {"op": "MSTORE"}, "4124": {"op": "PUSH32", "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"}, "4157": {"op": "PUSH1", "value": "0x44"}, "4159": {"op": "DUP3"}, "4160": {"op": "ADD"}, "4161": {"op": "MSTORE"}, "4162": {"op": "PUSH15", "value": "0x3732BC34B9BA32B73A103A37B5B2B7"}, "4178": {"op": "PUSH1", "value": "0x89"}, "4180": {"op": "SHL"}, "4181": {"op": "PUSH1", "value": "0x64"}, "4183": {"op": "DUP3"}, "4184": {"op": "ADD"}, "4185": {"op": "MSTORE"}, "4186": {"op": "PUSH1", "value": "0x84"}, "4188": {"op": "ADD"}, "4189": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4192": {"op": "JUMP"}, "4193": {"op": "JUMPDEST", "path": "0", "offset": [52379, 52489], "fn": "FundMePunks.tokenURI"}, "4194": {"op": "PUSH1", "value": "0x10", "path": "0", "offset": [52504, 52514], "fn": "FundMePunks.tokenURI"}, "4196": {"op": "SLOAD", "path": "0", "offset": [52504, 52514], "fn": "FundMePunks.tokenURI"}, "4197": {"op": "PUSH1", "value": "0xFF", "path": "0", "offset": [52504, 52514], "fn": "FundMePunks.tokenURI"}, "4199": {"op": "AND", "path": "0", "offset": [52504, 52514], "fn": "FundMePunks.tokenURI"}, "4200": {"op": "PUSH2", "value": "0x10FD", "path": "0", "offset": [52500, 52571], "fn": "FundMePunks.tokenURI"}, "4203": {"op": "JUMPI", "path": "0", "offset": [52500, 52571], "fn": "FundMePunks.tokenURI"}, "4204": {"op": "PUSH1", "value": "0x11", "path": "0", "offset": [52546, 52560], "fn": "FundMePunks.tokenURI", "statement": 45}, "4206": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4207": {"op": "SLOAD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4208": {"op": "PUSH2", "value": "0x1078", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4211": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4212": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4215": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4216": {"op": "JUMPDEST", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4217": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4218": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4220": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4221": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4223": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4224": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4225": {"op": "DIV", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4226": {"op": "MUL", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4227": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4229": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4230": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4232": {"op": "MLOAD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4233": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4234": {"op": "DUP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4235": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4236": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4238": {"op": "MSTORE", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4239": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4240": {"op": "SWAP3", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4241": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4242": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4243": {"op": "DUP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4244": {"op": "DUP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4245": {"op": "MSTORE", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4246": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4248": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4249": {"op": "DUP3", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4250": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4251": {"op": "SLOAD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4252": {"op": "PUSH2", "value": "0x10A4", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4255": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4256": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4259": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4260": {"op": "JUMPDEST", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4261": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4262": {"op": "ISZERO", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4263": {"op": "PUSH2", "value": "0x10F1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4266": {"op": "JUMPI", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4267": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4268": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4270": {"op": "LT", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4271": {"op": "PUSH2", "value": "0x10C6", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4274": {"op": "JUMPI", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4275": {"op": "PUSH2", "value": "0x100", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4278": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4279": {"op": "DUP4", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4280": {"op": "SLOAD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4281": {"op": "DIV", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4282": {"op": "MUL", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4283": {"op": "DUP4", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4284": {"op": "MSTORE", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4285": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4286": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4288": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4289": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4290": {"op": "PUSH2", "value": "0x10F1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4293": {"op": "JUMP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4294": {"op": "JUMPDEST", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4295": {"op": "DUP3", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4296": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4297": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4298": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4299": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4301": {"op": "MSTORE", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4302": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4304": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4306": {"op": "KECCAK256", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4307": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4308": {"op": "JUMPDEST", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4309": {"op": "DUP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4310": {"op": "SLOAD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4311": {"op": "DUP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4312": {"op": "MSTORE", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4313": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4314": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4316": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4317": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4318": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4320": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4321": {"op": "DUP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4322": {"op": "DUP4", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4323": {"op": "GT", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4324": {"op": "PUSH2", "value": "0x10D4", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4327": {"op": "JUMPI", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4328": {"op": "DUP3", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4329": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4330": {"op": "SUB", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4331": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4333": {"op": "AND", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4334": {"op": "DUP3", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4335": {"op": "ADD", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4336": {"op": "SWAP2", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4337": {"op": "JUMPDEST", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4338": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4339": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4340": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4341": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4342": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4343": {"op": "SWAP1", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4344": {"op": "POP", "path": "0", "offset": [52539, 52560], "fn": "FundMePunks.tokenURI"}, "4345": {"op": "SWAP2", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4346": {"op": "SWAP1", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4347": {"op": "POP", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4348": {"op": "JUMP", "jump": "o", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4349": {"op": "JUMPDEST", "path": "0", "offset": [52500, 52571], "fn": "FundMePunks.tokenURI"}, "4350": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52581, 52609], "fn": "FundMePunks.tokenURI"}, "4352": {"op": "PUSH2", "value": "0x1107", "path": "0", "offset": [52612, 52622], "fn": "FundMePunks.tokenURI"}, "4355": {"op": "PUSH2", "value": "0x166D", "path": "0", "offset": [52612, 52620], "fn": "FundMePunks.tokenURI"}, "4358": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52612, 52622], "fn": "FundMePunks.tokenURI"}, "4359": {"op": "JUMPDEST", "path": "0", "offset": [52612, 52622], "fn": "FundMePunks.tokenURI"}, "4360": {"op": "SWAP1", "path": "0", "offset": [52581, 52622], "fn": "FundMePunks.tokenURI"}, "4361": {"op": "POP", "path": "0", "offset": [52581, 52622], "fn": "FundMePunks.tokenURI"}, "4362": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52682, 52683], "fn": "FundMePunks.tokenURI", "statement": 46}, "4364": {"op": "DUP2", "path": "0", "offset": [52657, 52671], "fn": "FundMePunks.tokenURI"}, "4365": {"op": "MLOAD", "path": "0", "offset": [52651, 52679], "fn": "FundMePunks.tokenURI"}, "4366": {"op": "GT", "path": "0", "offset": [52651, 52683], "fn": "FundMePunks.tokenURI", "branch": 122}, "4367": {"op": "PUSH2", "value": "0x1127", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4370": {"op": "JUMPI", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI", "branch": 122}, "4371": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4373": {"op": "MLOAD", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4374": {"op": "DUP1", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4375": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4377": {"op": "ADD", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4378": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4380": {"op": "MSTORE", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4381": {"op": "DUP1", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4382": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4384": {"op": "DUP2", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4385": {"op": "MSTORE", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4386": {"op": "POP", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4387": {"op": "PUSH2", "value": "0x1155", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4390": {"op": "JUMP", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4391": {"op": "JUMPDEST", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4392": {"op": "DUP1", "path": "0", "offset": [52772, 52786], "fn": "FundMePunks.tokenURI"}, "4393": {"op": "PUSH2", "value": "0x1131", "path": "0", "offset": [52812, 52830], "fn": "FundMePunks.tokenURI"}, "4396": {"op": "DUP5", "path": "0", "offset": [52812, 52819], "fn": "FundMePunks.tokenURI"}, "4397": {"op": "PUSH2", "value": "0x167C", "path": "0", "offset": [52812, 52828], "fn": "FundMePunks.tokenURI"}, "4400": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52812, 52830], "fn": "FundMePunks.tokenURI"}, "4401": {"op": "JUMPDEST", "path": "0", "offset": [52812, 52830], "fn": "FundMePunks.tokenURI"}, "4402": {"op": "PUSH1", "value": "0xC", "path": "0", "offset": [52856, 52869], "fn": "FundMePunks.tokenURI"}, "4404": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4406": {"op": "MLOAD", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4407": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4409": {"op": "ADD", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4410": {"op": "PUSH2", "value": "0x1145", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4413": {"op": "SWAP4", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4414": {"op": "SWAP3", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4415": {"op": "SWAP2", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4416": {"op": "SWAP1", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4417": {"op": "PUSH2", "value": "0x218A", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4420": {"op": "JUMP", "jump": "i", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4421": {"op": "JUMPDEST", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4422": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4424": {"op": "MLOAD", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4425": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4427": {"op": "DUP2", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4428": {"op": "DUP4", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4429": {"op": "SUB", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4430": {"op": "SUB", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4431": {"op": "DUP2", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4432": {"op": "MSTORE", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4433": {"op": "SWAP1", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4434": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4436": {"op": "MSTORE", "path": "0", "offset": [52730, 52891], "fn": "FundMePunks.tokenURI"}, "4437": {"op": "JUMPDEST", "path": "0", "offset": [52651, 52930], "fn": "FundMePunks.tokenURI"}, "4438": {"op": "SWAP4", "path": "0", "offset": [52632, 52930], "fn": "FundMePunks.tokenURI"}, "4439": {"op": "SWAP3", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4440": {"op": "POP"}, "4441": {"op": "POP"}, "4442": {"op": "POP"}, "4443": {"op": "JUMP", "jump": "o", "path": "0", "offset": [52237, 52937], "fn": "FundMePunks.tokenURI"}, "4444": {"op": "JUMPDEST", "path": "0", "offset": [53521, 53667], "fn": "FundMePunks.setBaseExtension"}, "4445": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4447": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4448": {"op": "PUSH1", "value": "0x1"}, "4450": {"op": "PUSH1", "value": "0x1"}, "4452": {"op": "PUSH1", "value": "0xA0"}, "4454": {"op": "SHL"}, "4455": {"op": "SUB"}, "4456": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4457": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "4458": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "4459": {"op": "PUSH2", "value": "0x1186", "path": "0", "offset": [49288, 49356]}, "4462": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "4463": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4465": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4466": {"op": "PUSH3", "value": "0x461BCD"}, "4470": {"op": "PUSH1", "value": "0xE5"}, "4472": {"op": "SHL"}, "4473": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "4474": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4475": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4477": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4478": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4481": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4482": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4485": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4486": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4487": {"op": "DUP1", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension", "statement": 47}, "4488": {"op": "MLOAD", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4489": {"op": "PUSH2", "value": "0xC6E", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4492": {"op": "SWAP1", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4493": {"op": "PUSH1", "value": "0xC", "path": "0", "offset": [53627, 53640], "fn": "FundMePunks.setBaseExtension"}, "4495": {"op": "SWAP1", "path": "0", "offset": [53627, 53640], "fn": "FundMePunks.setBaseExtension"}, "4496": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4498": {"op": "DUP5", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4499": {"op": "ADD", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4500": {"op": "SWAP1", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4501": {"op": "PUSH2", "value": "0x1C41", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4504": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53627, 53660], "fn": "FundMePunks.setBaseExtension"}, "4505": {"op": "JUMPDEST", "path": "0", "offset": [53283, 53407], "fn": "FundMePunks.setNotRevealedURI"}, "4506": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4508": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4509": {"op": "PUSH1", "value": "0x1"}, "4511": {"op": "PUSH1", "value": "0x1"}, "4513": {"op": "PUSH1", "value": "0xA0"}, "4515": {"op": "SHL"}, "4516": {"op": "SUB"}, "4517": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4518": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "4519": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "4520": {"op": "PUSH2", "value": "0x11C3", "path": "0", "offset": [49288, 49356]}, "4523": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "4524": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4526": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4527": {"op": "PUSH3", "value": "0x461BCD"}, "4531": {"op": "PUSH1", "value": "0xE5"}, "4533": {"op": "SHL"}, "4534": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "4535": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4536": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4538": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4539": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4542": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4543": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4546": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4547": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4548": {"op": "DUP1", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI", "statement": 48}, "4549": {"op": "MLOAD", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4550": {"op": "PUSH2", "value": "0xC6E", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4553": {"op": "SWAP1", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4554": {"op": "PUSH1", "value": "0x11", "path": "0", "offset": [53368, 53382], "fn": "FundMePunks.setNotRevealedURI"}, "4556": {"op": "SWAP1", "path": "0", "offset": [53368, 53382], "fn": "FundMePunks.setNotRevealedURI"}, "4557": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4559": {"op": "DUP5", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4560": {"op": "ADD", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4561": {"op": "SWAP1", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4562": {"op": "PUSH2", "value": "0x1C41", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4565": {"op": "JUMP", "jump": "i", "path": "0", "offset": [53368, 53400], "fn": "FundMePunks.setNotRevealedURI"}, "4566": {"op": "JUMPDEST", "path": "0", "offset": [49957, 50180], "fn": "Ownable.transferOwnership"}, "4567": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4569": {"op": "SLOAD", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4570": {"op": "PUSH1", "value": "0x1"}, "4572": {"op": "PUSH1", "value": "0x1"}, "4574": {"op": "PUSH1", "value": "0xA0"}, "4576": {"op": "SHL"}, "4577": {"op": "SUB"}, "4578": {"op": "AND", "path": "0", "offset": [49156, 49162], "fn": "Ownable.owner"}, "4579": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "4580": {"op": "EQ", "path": "0", "offset": [49296, 49319]}, "4581": {"op": "PUSH2", "value": "0x1200", "path": "0", "offset": [49288, 49356]}, "4584": {"op": "JUMPI", "path": "0", "offset": [49288, 49356]}, "4585": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4587": {"op": "MLOAD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4588": {"op": "PUSH3", "value": "0x461BCD"}, "4592": {"op": "PUSH1", "value": "0xE5"}, "4594": {"op": "SHL"}, "4595": {"op": "DUP2", "path": "0", "offset": [49288, 49356]}, "4596": {"op": "MSTORE", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4597": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4599": {"op": "ADD", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4600": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4603": {"op": "SWAP1", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4604": {"op": "PUSH2", "value": "0x20D7", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4607": {"op": "JUMP", "jump": "i", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4608": {"op": "JUMPDEST", "path": "0", "offset": [49288, 49356], "fn": "Context._msgSender"}, "4609": {"op": "PUSH1", "value": "0x1"}, "4611": {"op": "PUSH1", "value": "0x1"}, "4613": {"op": "PUSH1", "value": "0xA0"}, "4615": {"op": "SHL"}, "4616": {"op": "SUB"}, "4617": {"op": "DUP2", "path": "0", "offset": [50058, 50080], "fn": "Ownable.transferOwnership", "statement": 49}, "4618": {"op": "AND", "path": "0", "offset": [50058, 50080], "fn": "Ownable.transferOwnership", "branch": 123}, "4619": {"op": "PUSH2", "value": "0x1265", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4622": {"op": "JUMPI", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership", "branch": 123}, "4623": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4625": {"op": "MLOAD", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4626": {"op": "PUSH3", "value": "0x461BCD"}, "4630": {"op": "PUSH1", "value": "0xE5"}, "4632": {"op": "SHL"}, "4633": {"op": "DUP2", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4634": {"op": "MSTORE", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4635": {"op": "PUSH1", "value": "0x20"}, "4637": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4639": {"op": "DUP3", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4640": {"op": "ADD", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4641": {"op": "MSTORE"}, "4642": {"op": "PUSH1", "value": "0x26"}, "4644": {"op": "PUSH1", "value": "0x24"}, "4646": {"op": "DUP3"}, "4647": {"op": "ADD"}, "4648": {"op": "MSTORE"}, "4649": {"op": "PUSH32", "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"}, "4682": {"op": "PUSH1", "value": "0x44"}, "4684": {"op": "DUP3"}, "4685": {"op": "ADD"}, "4686": {"op": "MSTORE"}, "4687": {"op": "PUSH6", "value": "0x646472657373"}, "4694": {"op": "PUSH1", "value": "0xD0"}, "4696": {"op": "SHL"}, "4697": {"op": "PUSH1", "value": "0x64"}, "4699": {"op": "DUP3"}, "4700": {"op": "ADD"}, "4701": {"op": "MSTORE"}, "4702": {"op": "PUSH1", "value": "0x84"}, "4704": {"op": "ADD"}, "4705": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4708": {"op": "JUMP"}, "4709": {"op": "JUMPDEST", "path": "0", "offset": [50037, 50144], "fn": "Ownable.transferOwnership"}, "4710": {"op": "PUSH2", "value": "0xA72", "path": "0", "offset": [50154, 50173], "fn": "Ownable.transferOwnership", "statement": 50}, "4713": {"op": "DUP2", "path": "0", "offset": [50164, 50172], "fn": "Ownable.transferOwnership"}, "4714": {"op": "PUSH2", "value": "0x15CE", "path": "0", "offset": [50154, 50163], "fn": "Ownable.transferOwnership"}, "4717": {"op": "JUMP", "jump": "i", "path": "0", "offset": [50154, 50173], "fn": "Ownable.transferOwnership"}, "4718": {"op": "JUMPDEST", "path": "0", "offset": [28321, 28665], "fn": "ERC721.supportsInterface"}, "4719": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [28463, 28467], "fn": "ERC721.supportsInterface"}, "4721": {"op": "PUSH1", "value": "0x1"}, "4723": {"op": "PUSH1", "value": "0x1"}, "4725": {"op": "PUSH1", "value": "0xE0"}, "4727": {"op": "SHL"}, "4728": {"op": "SUB"}, "4729": {"op": "NOT"}, "4730": {"op": "DUP3", "path": "0", "offset": [28502, 28542], "fn": "ERC721.supportsInterface", "statement": 51}, "4731": {"op": "AND", "path": "0", "offset": [28502, 28542], "fn": "ERC721.supportsInterface"}, "4732": {"op": "PUSH4", "value": "0x80AC58CD"}, "4737": {"op": "PUSH1", "value": "0xE0"}, "4739": {"op": "SHL"}, "4740": {"op": "EQ", "path": "0", "offset": [28502, 28542], "fn": "ERC721.supportsInterface"}, "4741": {"op": "DUP1", "path": "0", "offset": [28502, 28542], "fn": "ERC721.supportsInterface"}, "4742": {"op": "PUSH2", "value": "0x129F", "path": "0", "offset": [28502, 28606], "fn": "ERC721.supportsInterface"}, "4745": {"op": "JUMPI", "path": "0", "offset": [28502, 28606], "fn": "ERC721.supportsInterface"}, "4746": {"op": "POP"}, "4747": {"op": "PUSH1", "value": "0x1"}, "4749": {"op": "PUSH1", "value": "0x1"}, "4751": {"op": "PUSH1", "value": "0xE0"}, "4753": {"op": "SHL"}, "4754": {"op": "SUB"}, "4755": {"op": "NOT"}, "4756": {"op": "DUP3", "path": "0", "offset": [28558, 28606], "fn": "ERC721.supportsInterface"}, "4757": {"op": "AND", "path": "0", "offset": [28558, 28606], "fn": "ERC721.supportsInterface"}, "4758": {"op": "PUSH4", "value": "0x5B5E139F"}, "4763": {"op": "PUSH1", "value": "0xE0"}, "4765": {"op": "SHL"}, "4766": {"op": "EQ", "path": "0", "offset": [28558, 28606], "fn": "ERC721.supportsInterface"}, "4767": {"op": "JUMPDEST", "path": "0", "offset": [28502, 28606], "fn": "ERC721.supportsInterface"}, "4768": {"op": "DUP1", "path": "0", "offset": [28502, 28658], "fn": "ERC721.supportsInterface"}, "4769": {"op": "PUSH2", "value": "0x656", "path": "0", "offset": [28502, 28658], "fn": "ERC721.supportsInterface"}, "4772": {"op": "JUMPI", "path": "0", "offset": [28502, 28658], "fn": "ERC721.supportsInterface"}, "4773": {"op": "POP"}, "4774": {"op": "PUSH4", "value": "0x1FFC9A7"}, "4779": {"op": "PUSH1", "value": "0xE0"}, "4781": {"op": "SHL"}, "4782": {"op": "PUSH1", "value": "0x1"}, "4784": {"op": "PUSH1", "value": "0x1"}, "4786": {"op": "PUSH1", "value": "0xE0"}, "4788": {"op": "SHL"}, "4789": {"op": "SUB"}, "4790": {"op": "NOT"}, "4791": {"op": "DUP4", "path": "0", "offset": [14223, 14263], "fn": "ERC165.supportsInterface", "statement": 52}, "4792": {"op": "AND", "path": "0", "offset": [14223, 14263], "fn": "ERC165.supportsInterface"}, "4793": {"op": "EQ", "path": "0", "offset": [14223, 14263], "fn": "ERC165.supportsInterface"}, "4794": {"op": "PUSH2", "value": "0x656", "path": "0", "offset": [28622, 28658], "fn": "ERC721.supportsInterface"}, "4797": {"op": "JUMP", "path": "0", "offset": [14071, 14270], "fn": "ERC165.supportsInterface"}, "4798": {"op": "JUMPDEST", "path": "0", "offset": [38600, 38771], "fn": "ERC721._approve"}, "4799": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve", "statement": 53}, "4801": {"op": "DUP2", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4802": {"op": "DUP2", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4803": {"op": "MSTORE", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4804": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [38674, 38689], "fn": "ERC721._approve"}, "4806": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4808": {"op": "MSTORE", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4809": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4811": {"op": "SWAP1", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4812": {"op": "KECCAK256", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4813": {"op": "DUP1", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4814": {"op": "SLOAD", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4815": {"op": "PUSH1", "value": "0x1"}, "4817": {"op": "PUSH1", "value": "0x1"}, "4819": {"op": "PUSH1", "value": "0xA0"}, "4821": {"op": "SHL"}, "4822": {"op": "SUB"}, "4823": {"op": "NOT"}, "4824": {"op": "AND", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4825": {"op": "PUSH1", "value": "0x1"}, "4827": {"op": "PUSH1", "value": "0x1"}, "4829": {"op": "PUSH1", "value": "0xA0"}, "4831": {"op": "SHL"}, "4832": {"op": "SUB"}, "4833": {"op": "DUP5", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4834": {"op": "AND", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4835": {"op": "SWAP1", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4836": {"op": "DUP2", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4837": {"op": "OR", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4838": {"op": "SWAP1", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4839": {"op": "SWAP2", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4840": {"op": "SSTORE", "path": "0", "offset": [38674, 38703], "fn": "ERC721._approve"}, "4841": {"op": "DUP2", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4842": {"op": "SWAP1", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4843": {"op": "PUSH2", "value": "0x12F3", "path": "0", "offset": [38727, 38750], "fn": "ERC721._approve", "statement": 54}, "4846": {"op": "DUP3", "path": "0", "offset": [38674, 38698], "fn": "ERC721._approve"}, "4847": {"op": "PUSH2", "value": "0xC72", "path": "0", "offset": [38727, 38741], "fn": "ERC721._approve"}, "4850": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38727, 38750], "fn": "ERC721._approve"}, "4851": {"op": "JUMPDEST", "path": "0", "offset": [38727, 38750], "fn": "ERC721._approve"}, "4852": {"op": "PUSH1", "value": "0x1"}, "4854": {"op": "PUSH1", "value": "0x1"}, "4856": {"op": "PUSH1", "value": "0xA0"}, "4858": {"op": "SHL"}, "4859": {"op": "SUB"}, "4860": {"op": "AND", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4861": {"op": "PUSH32", "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4894": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4896": {"op": "MLOAD", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4897": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4899": {"op": "MLOAD", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4900": {"op": "DUP1", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4901": {"op": "SWAP2", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4902": {"op": "SUB", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4903": {"op": "SWAP1", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4904": {"op": "LOG4", "path": "0", "offset": [38718, 38764], "fn": "ERC721._approve"}, "4905": {"op": "POP", "path": "0", "offset": [38600, 38771], "fn": "ERC721._approve"}, "4906": {"op": "POP", "path": "0", "offset": [38600, 38771], "fn": "ERC721._approve"}, "4907": {"op": "JUMP", "jump": "o", "path": "0", "offset": [38600, 38771], "fn": "ERC721._approve"}, "4908": {"op": "JUMPDEST", "path": "0", "offset": [34904, 35342], "fn": "ERC721._isApprovedOrOwner"}, "4909": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [35029, 35033], "fn": "ERC721._isApprovedOrOwner"}, "4911": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4912": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4913": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4914": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [34709, 34716], "fn": "ERC721._exists"}, "4916": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4918": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4919": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4921": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4922": {"op": "KECCAK256", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4923": {"op": "SLOAD", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4924": {"op": "PUSH1", "value": "0x1"}, "4926": {"op": "PUSH1", "value": "0x1"}, "4928": {"op": "PUSH1", "value": "0xA0"}, "4930": {"op": "SHL"}, "4931": {"op": "SUB"}, "4932": {"op": "AND", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "4933": {"op": "PUSH2", "value": "0x13A5", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner", "statement": 55}, "4936": {"op": "JUMPI", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4937": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4939": {"op": "MLOAD", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4940": {"op": "PUSH3", "value": "0x461BCD"}, "4944": {"op": "PUSH1", "value": "0xE5"}, "4946": {"op": "SHL"}, "4947": {"op": "DUP2", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4948": {"op": "MSTORE", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4949": {"op": "PUSH1", "value": "0x20"}, "4951": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4953": {"op": "DUP3", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4954": {"op": "ADD", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "4955": {"op": "MSTORE"}, "4956": {"op": "PUSH1", "value": "0x2C"}, "4958": {"op": "PUSH1", "value": "0x24"}, "4960": {"op": "DUP3"}, "4961": {"op": "ADD"}, "4962": {"op": "MSTORE"}, "4963": {"op": "PUSH32", "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"}, "4996": {"op": "PUSH1", "value": "0x44"}, "4998": {"op": "DUP3"}, "4999": {"op": "ADD"}, "5000": {"op": "MSTORE"}, "5001": {"op": "PUSH12", "value": "0x34B9BA32B73A103A37B5B2B7"}, "5014": {"op": "PUSH1", "value": "0xA1"}, "5016": {"op": "SHL"}, "5017": {"op": "PUSH1", "value": "0x64"}, "5019": {"op": "DUP3"}, "5020": {"op": "ADD"}, "5021": {"op": "MSTORE"}, "5022": {"op": "PUSH1", "value": "0x84"}, "5024": {"op": "ADD"}, "5025": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "5028": {"op": "JUMP"}, "5029": {"op": "JUMPDEST", "path": "0", "offset": [35049, 35156], "fn": "ERC721._isApprovedOrOwner"}, "5030": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [35166, 35179], "fn": "ERC721._isApprovedOrOwner"}, "5032": {"op": "PUSH2", "value": "0x13B0", "path": "0", "offset": [35182, 35205], "fn": "ERC721._isApprovedOrOwner"}, "5035": {"op": "DUP4", "path": "0", "offset": [35197, 35204], "fn": "ERC721._isApprovedOrOwner"}, "5036": {"op": "PUSH2", "value": "0xC72", "path": "0", "offset": [35182, 35196], "fn": "ERC721._isApprovedOrOwner"}, "5039": {"op": "JUMP", "jump": "i", "path": "0", "offset": [35182, 35205], "fn": "ERC721._isApprovedOrOwner"}, "5040": {"op": "JUMPDEST", "path": "0", "offset": [35182, 35205], "fn": "ERC721._isApprovedOrOwner"}, "5041": {"op": "SWAP1", "path": "0", "offset": [35166, 35205], "fn": "ERC721._isApprovedOrOwner"}, "5042": {"op": "POP", "path": "0", "offset": [35166, 35205], "fn": "ERC721._isApprovedOrOwner"}, "5043": {"op": "DUP1", "path": "0", "offset": [35234, 35239], "fn": "ERC721._isApprovedOrOwner", "statement": 56}, "5044": {"op": "PUSH1", "value": "0x1"}, "5046": {"op": "PUSH1", "value": "0x1"}, "5048": {"op": "PUSH1", "value": "0xA0"}, "5050": {"op": "SHL"}, "5051": {"op": "SUB"}, "5052": {"op": "AND", "path": "0", "offset": [35223, 35239], "fn": "ERC721._isApprovedOrOwner"}, "5053": {"op": "DUP5", "path": "0", "offset": [35223, 35230], "fn": "ERC721._isApprovedOrOwner"}, "5054": {"op": "PUSH1", "value": "0x1"}, "5056": {"op": "PUSH1", "value": "0x1"}, "5058": {"op": "PUSH1", "value": "0xA0"}, "5060": {"op": "SHL"}, "5061": {"op": "SUB"}, "5062": {"op": "AND", "path": "0", "offset": [35223, 35239], "fn": "ERC721._isApprovedOrOwner"}, "5063": {"op": "EQ", "path": "0", "offset": [35223, 35239], "fn": "ERC721._isApprovedOrOwner"}, "5064": {"op": "DUP1", "path": "0", "offset": [35223, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5065": {"op": "PUSH2", "value": "0x13EB", "path": "0", "offset": [35223, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5068": {"op": "JUMPI", "path": "0", "offset": [35223, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5069": {"op": "POP", "path": "0", "offset": [35223, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5070": {"op": "DUP4", "path": "0", "offset": [35279, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5071": {"op": "PUSH1", "value": "0x1"}, "5073": {"op": "PUSH1", "value": "0x1"}, "5075": {"op": "PUSH1", "value": "0xA0"}, "5077": {"op": "SHL"}, "5078": {"op": "SUB"}, "5079": {"op": "AND", "path": "0", "offset": [35255, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5080": {"op": "PUSH2", "value": "0x13E0", "path": "0", "offset": [35255, 35275], "fn": "ERC721._isApprovedOrOwner"}, "5083": {"op": "DUP5", "path": "0", "offset": [35267, 35274], "fn": "ERC721._isApprovedOrOwner"}, "5084": {"op": "PUSH2", "value": "0x6EE", "path": "0", "offset": [35255, 35266], "fn": "ERC721._isApprovedOrOwner"}, "5087": {"op": "JUMP", "jump": "i", "path": "0", "offset": [35255, 35275], "fn": "ERC721._isApprovedOrOwner"}, "5088": {"op": "JUMPDEST", "path": "0", "offset": [35255, 35275], "fn": "ERC721._isApprovedOrOwner"}, "5089": {"op": "PUSH1", "value": "0x1"}, "5091": {"op": "PUSH1", "value": "0x1"}, "5093": {"op": "PUSH1", "value": "0xA0"}, "5095": {"op": "SHL"}, "5096": {"op": "SUB"}, "5097": {"op": "AND", "path": "0", "offset": [35255, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5098": {"op": "EQ", "path": "0", "offset": [35255, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5099": {"op": "JUMPDEST", "path": "0", "offset": [35223, 35286], "fn": "ERC721._isApprovedOrOwner"}, "5100": {"op": "DUP1", "path": "0", "offset": [35223, 35334], "fn": "ERC721._isApprovedOrOwner"}, "5101": {"op": "PUSH2", "value": "0x141B", "path": "0", "offset": [35223, 35334], "fn": "ERC721._isApprovedOrOwner"}, "5104": {"op": "JUMPI", "path": "0", "offset": [35223, 35334], "fn": "ERC721._isApprovedOrOwner"}, "5105": {"op": "POP"}, "5106": {"op": "PUSH1", "value": "0x1"}, "5108": {"op": "PUSH1", "value": "0x1"}, "5110": {"op": "PUSH1", "value": "0xA0"}, "5112": {"op": "SHL"}, "5113": {"op": "SUB"}, "5114": {"op": "DUP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5115": {"op": "DUP3", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5116": {"op": "AND", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5117": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [31955, 31959], "fn": "ERC721.isApprovedForAll"}, "5119": {"op": "SWAP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5120": {"op": "DUP2", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5121": {"op": "MSTORE", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5122": {"op": "PUSH1", "value": "0x5", "path": "0", "offset": [31982, 32000], "fn": "ERC721.isApprovedForAll"}, "5124": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5126": {"op": "SWAP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5127": {"op": "DUP2", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5128": {"op": "MSTORE", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5129": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5131": {"op": "DUP1", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5132": {"op": "DUP4", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5133": {"op": "KECCAK256", "path": "0", "offset": [31982, 32007], "fn": "ERC721.isApprovedForAll"}, "5134": {"op": "SWAP4", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5135": {"op": "DUP9", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5136": {"op": "AND", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5137": {"op": "DUP4", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5138": {"op": "MSTORE", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5139": {"op": "SWAP3", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5140": {"op": "SWAP1", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5141": {"op": "MSTORE", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5142": {"op": "KECCAK256", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5143": {"op": "SLOAD", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5144": {"op": "PUSH1", "value": "0xFF", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5146": {"op": "AND", "path": "0", "offset": [31982, 32017], "fn": "ERC721.isApprovedForAll"}, "5147": {"op": "JUMPDEST", "path": "0", "offset": [35302, 35334], "fn": "ERC721._isApprovedOrOwner"}, "5148": {"op": "SWAP5", "path": "0", "offset": [35215, 35335], "fn": "ERC721._isApprovedOrOwner"}, "5149": {"op": "SWAP4", "path": "0", "offset": [34904, 35342], "fn": "ERC721._isApprovedOrOwner"}, "5150": {"op": "POP"}, "5151": {"op": "POP"}, "5152": {"op": "POP"}, "5153": {"op": "POP"}, "5154": {"op": "JUMP", "jump": "o", "path": "0", "offset": [34904, 35342], "fn": "ERC721._isApprovedOrOwner"}, "5155": {"op": "JUMPDEST", "path": "0", "offset": [37895, 38489], "fn": "ERC721._transfer"}, "5156": {"op": "DUP3", "path": "0", "offset": [38062, 38066], "fn": "ERC721._transfer", "statement": 57}, "5157": {"op": "PUSH1", "value": "0x1"}, "5159": {"op": "PUSH1", "value": "0x1"}, "5161": {"op": "PUSH1", "value": "0xA0"}, "5163": {"op": "SHL"}, "5164": {"op": "SUB"}, "5165": {"op": "AND", "path": "0", "offset": [38035, 38066], "fn": "ERC721._transfer"}, "5166": {"op": "PUSH2", "value": "0x1436", "path": "0", "offset": [38035, 38058], "fn": "ERC721._transfer"}, "5169": {"op": "DUP3", "path": "0", "offset": [38050, 38057], "fn": "ERC721._transfer"}, "5170": {"op": "PUSH2", "value": "0xC72", "path": "0", "offset": [38035, 38049], "fn": "ERC721._transfer"}, "5173": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38035, 38058], "fn": "ERC721._transfer"}, "5174": {"op": "JUMPDEST", "path": "0", "offset": [38035, 38058], "fn": "ERC721._transfer"}, "5175": {"op": "PUSH1", "value": "0x1"}, "5177": {"op": "PUSH1", "value": "0x1"}, "5179": {"op": "PUSH1", "value": "0xA0"}, "5181": {"op": "SHL"}, "5182": {"op": "SUB"}, "5183": {"op": "AND", "path": "0", "offset": [38035, 38066], "fn": "ERC721._transfer"}, "5184": {"op": "EQ", "path": "0", "offset": [38035, 38066], "fn": "ERC721._transfer", "branch": 124}, "5185": {"op": "PUSH2", "value": "0x149E", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5188": {"op": "JUMPI", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer", "branch": 124}, "5189": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5191": {"op": "MLOAD", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5192": {"op": "PUSH3", "value": "0x461BCD"}, "5196": {"op": "PUSH1", "value": "0xE5"}, "5198": {"op": "SHL"}, "5199": {"op": "DUP2", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5200": {"op": "MSTORE", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5201": {"op": "PUSH1", "value": "0x20"}, "5203": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5205": {"op": "DUP3", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5206": {"op": "ADD", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5207": {"op": "MSTORE"}, "5208": {"op": "PUSH1", "value": "0x29"}, "5210": {"op": "PUSH1", "value": "0x24"}, "5212": {"op": "DUP3"}, "5213": {"op": "ADD"}, "5214": {"op": "MSTORE"}, "5215": {"op": "PUSH32", "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"}, "5248": {"op": "PUSH1", "value": "0x44"}, "5250": {"op": "DUP3"}, "5251": {"op": "ADD"}, "5252": {"op": "MSTORE"}, "5253": {"op": "PUSH9", "value": "0x39903737BA1037BBB7"}, "5263": {"op": "PUSH1", "value": "0xB9"}, "5265": {"op": "SHL"}, "5266": {"op": "PUSH1", "value": "0x64"}, "5268": {"op": "DUP3"}, "5269": {"op": "ADD"}, "5270": {"op": "MSTORE"}, "5271": {"op": "PUSH1", "value": "0x84"}, "5273": {"op": "ADD"}, "5274": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5277": {"op": "JUMP"}, "5278": {"op": "JUMPDEST", "path": "0", "offset": [38014, 38133], "fn": "ERC721._transfer"}, "5279": {"op": "PUSH1", "value": "0x1"}, "5281": {"op": "PUSH1", "value": "0x1"}, "5283": {"op": "PUSH1", "value": "0xA0"}, "5285": {"op": "SHL"}, "5286": {"op": "SUB"}, "5287": {"op": "DUP3", "path": "0", "offset": [38151, 38167], "fn": "ERC721._transfer", "statement": 58}, "5288": {"op": "AND", "path": "0", "offset": [38151, 38167], "fn": "ERC721._transfer", "branch": 125}, "5289": {"op": "PUSH2", "value": "0x1500", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5292": {"op": "JUMPI", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer", "branch": 125}, "5293": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5295": {"op": "MLOAD", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5296": {"op": "PUSH3", "value": "0x461BCD"}, "5300": {"op": "PUSH1", "value": "0xE5"}, "5302": {"op": "SHL"}, "5303": {"op": "DUP2", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5304": {"op": "MSTORE", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5305": {"op": "PUSH1", "value": "0x20"}, "5307": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5309": {"op": "DUP3", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5310": {"op": "ADD", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5311": {"op": "MSTORE"}, "5312": {"op": "PUSH1", "value": "0x24"}, "5314": {"op": "DUP1"}, "5315": {"op": "DUP3"}, "5316": {"op": "ADD"}, "5317": {"op": "MSTORE"}, "5318": {"op": "PUSH32", "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"}, "5351": {"op": "PUSH1", "value": "0x44"}, "5353": {"op": "DUP3"}, "5354": {"op": "ADD"}, "5355": {"op": "MSTORE"}, "5356": {"op": "PUSH4", "value": "0x72657373"}, "5361": {"op": "PUSH1", "value": "0xE0"}, "5363": {"op": "SHL"}, "5364": {"op": "PUSH1", "value": "0x64"}, "5366": {"op": "DUP3"}, "5367": {"op": "ADD"}, "5368": {"op": "MSTORE"}, "5369": {"op": "PUSH1", "value": "0x84"}, "5371": {"op": "ADD"}, "5372": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5375": {"op": "JUMP"}, "5376": {"op": "JUMPDEST", "path": "0", "offset": [38143, 38208], "fn": "ERC721._transfer"}, "5377": {"op": "PUSH2", "value": "0x150B", "path": "0", "offset": [38219, 38258], "fn": "ERC721._transfer", "statement": 59}, "5380": {"op": "DUP4", "path": "0", "offset": [38240, 38244], "fn": "ERC721._transfer"}, "5381": {"op": "DUP4", "path": "0", "offset": [38246, 38248], "fn": "ERC721._transfer"}, "5382": {"op": "DUP4", "path": "0", "offset": [38250, 38257], "fn": "ERC721._transfer"}, "5383": {"op": "PUSH2", "value": "0x177A", "path": "0", "offset": [38219, 38239], "fn": "ERC721._transfer"}, "5386": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38219, 38258], "fn": "ERC721._transfer"}, "5387": {"op": "JUMPDEST", "path": "0", "offset": [38219, 38258], "fn": "ERC721._transfer"}, "5388": {"op": "PUSH2", "value": "0x1516", "path": "0", "offset": [38320, 38349], "fn": "ERC721._transfer", "statement": 60}, "5391": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [38337, 38338], "fn": "ERC721._transfer"}, "5393": {"op": "DUP3", "path": "0", "offset": [38341, 38348], "fn": "ERC721._transfer"}, "5394": {"op": "PUSH2", "value": "0x12BE", "path": "0", "offset": [38320, 38328], "fn": "ERC721._transfer"}, "5397": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38320, 38349], "fn": "ERC721._transfer"}, "5398": {"op": "JUMPDEST", "path": "0", "offset": [38320, 38349], "fn": "ERC721._transfer"}, "5399": {"op": "PUSH1", "value": "0x1"}, "5401": {"op": "PUSH1", "value": "0x1"}, "5403": {"op": "PUSH1", "value": "0xA0"}, "5405": {"op": "SHL"}, "5406": {"op": "SUB"}, "5407": {"op": "DUP4", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer", "statement": 61}, "5408": {"op": "AND", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5409": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5411": {"op": "SWAP1", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5412": {"op": "DUP2", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5413": {"op": "MSTORE", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5414": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [38360, 38369], "fn": "ERC721._transfer"}, "5416": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5418": {"op": "MSTORE", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5419": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5421": {"op": "DUP2", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5422": {"op": "KECCAK256", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5423": {"op": "DUP1", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5424": {"op": "SLOAD", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5425": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [38379, 38380], "fn": "ERC721._transfer"}, "5427": {"op": "SWAP3", "path": "0", "offset": [38379, 38380], "fn": "ERC721._transfer"}, "5428": {"op": "SWAP1", "path": "0", "offset": [38360, 38375], "fn": "ERC721._transfer"}, "5429": {"op": "PUSH2", "value": "0x153F", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5432": {"op": "SWAP1", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5433": {"op": "DUP5", "path": "0", "offset": [38379, 38380], "fn": "ERC721._transfer"}, "5434": {"op": "SWAP1", "path": "0", "offset": [38379, 38380], "fn": "ERC721._transfer"}, "5435": {"op": "PUSH2", "value": "0x224E", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5438": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5439": {"op": "JUMPDEST", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5440": {"op": "SWAP1", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5441": {"op": "SWAP2", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5442": {"op": "SSTORE", "path": "0", "offset": [38360, 38380], "fn": "ERC721._transfer"}, "5443": {"op": "POP"}, "5444": {"op": "POP"}, "5445": {"op": "PUSH1", "value": "0x1"}, "5447": {"op": "PUSH1", "value": "0x1"}, "5449": {"op": "PUSH1", "value": "0xA0"}, "5451": {"op": "SHL"}, "5452": {"op": "SUB"}, "5453": {"op": "DUP3", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer", "statement": 62}, "5454": {"op": "AND", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5455": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5457": {"op": "SWAP1", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5458": {"op": "DUP2", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5459": {"op": "MSTORE", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5460": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [38390, 38399], "fn": "ERC721._transfer"}, "5462": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5464": {"op": "MSTORE", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5465": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5467": {"op": "DUP2", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5468": {"op": "KECCAK256", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5469": {"op": "DUP1", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5470": {"op": "SLOAD", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5471": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [38407, 38408], "fn": "ERC721._transfer"}, "5473": {"op": "SWAP3", "path": "0", "offset": [38407, 38408], "fn": "ERC721._transfer"}, "5474": {"op": "SWAP1", "path": "0", "offset": [38390, 38403], "fn": "ERC721._transfer"}, "5475": {"op": "PUSH2", "value": "0x156D", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5478": {"op": "SWAP1", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5479": {"op": "DUP5", "path": "0", "offset": [38407, 38408], "fn": "ERC721._transfer"}, "5480": {"op": "SWAP1", "path": "0", "offset": [38407, 38408], "fn": "ERC721._transfer"}, "5481": {"op": "PUSH2", "value": "0x2153", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5484": {"op": "JUMP", "jump": "i", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5485": {"op": "JUMPDEST", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5486": {"op": "SWAP1", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5487": {"op": "SWAP2", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5488": {"op": "SSTORE", "path": "0", "offset": [38390, 38408], "fn": "ERC721._transfer"}, "5489": {"op": "POP"}, "5490": {"op": "POP"}, "5491": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer", "statement": 63}, "5493": {"op": "DUP2", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5494": {"op": "DUP2", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5495": {"op": "MSTORE", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5496": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [38418, 38425], "fn": "ERC721._transfer"}, "5498": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5500": {"op": "MSTORE", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5501": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5503": {"op": "DUP1", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5504": {"op": "DUP3", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5505": {"op": "KECCAK256", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5506": {"op": "DUP1", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5507": {"op": "SLOAD", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5508": {"op": "PUSH1", "value": "0x1"}, "5510": {"op": "PUSH1", "value": "0x1"}, "5512": {"op": "PUSH1", "value": "0xA0"}, "5514": {"op": "SHL"}, "5515": {"op": "SUB"}, "5516": {"op": "NOT"}, "5517": {"op": "AND", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5518": {"op": "PUSH1", "value": "0x1"}, "5520": {"op": "PUSH1", "value": "0x1"}, "5522": {"op": "PUSH1", "value": "0xA0"}, "5524": {"op": "SHL"}, "5525": {"op": "SUB"}, "5526": {"op": "DUP7", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5527": {"op": "DUP2", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5528": {"op": "AND", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5529": {"op": "SWAP2", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5530": {"op": "DUP3", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5531": {"op": "OR", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5532": {"op": "SWAP1", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5533": {"op": "SWAP3", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5534": {"op": "SSTORE", "path": "0", "offset": [38418, 38439], "fn": "ERC721._transfer"}, "5535": {"op": "SWAP2", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer", "statement": 64}, "5536": {"op": "MLOAD", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5537": {"op": "DUP5", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5538": {"op": "SWAP4", "path": "0", "offset": [38418, 38434], "fn": "ERC721._transfer"}, "5539": {"op": "SWAP2", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5540": {"op": "DUP8", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5541": {"op": "AND", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5542": {"op": "SWAP2", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5543": {"op": "PUSH32", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5576": {"op": "SWAP2", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5577": {"op": "LOG4", "path": "0", "offset": [38455, 38482], "fn": "ERC721._transfer"}, "5578": {"op": "POP", "path": "0", "offset": [37895, 38489], "fn": "ERC721._transfer"}, "5579": {"op": "POP", "path": "0", "offset": [37895, 38489], "fn": "ERC721._transfer"}, "5580": {"op": "POP", "path": "0", "offset": [37895, 38489], "fn": "ERC721._transfer"}, "5581": {"op": "JUMP", "jump": "o", "path": "0", "offset": [37895, 38489], "fn": "ERC721._transfer"}, "5582": {"op": "JUMPDEST", "path": "0", "offset": [50186, 50355], "fn": "Ownable._setOwner"}, "5583": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5585": {"op": "DUP1", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5586": {"op": "SLOAD", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5587": {"op": "PUSH1", "value": "0x1"}, "5589": {"op": "PUSH1", "value": "0x1"}, "5591": {"op": "PUSH1", "value": "0xA0"}, "5593": {"op": "SHL"}, "5594": {"op": "SUB"}, "5595": {"op": "DUP4", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner", "statement": 65}, "5596": {"op": "DUP2", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5597": {"op": "AND", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5598": {"op": "PUSH1", "value": "0x1"}, "5600": {"op": "PUSH1", "value": "0x1"}, "5602": {"op": "PUSH1", "value": "0xA0"}, "5604": {"op": "SHL"}, "5605": {"op": "SUB"}, "5606": {"op": "NOT"}, "5607": {"op": "DUP4", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5608": {"op": "AND", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5609": {"op": "DUP2", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5610": {"op": "OR", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5611": {"op": "SWAP1", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5612": {"op": "SWAP4", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5613": {"op": "SSTORE", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5614": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [50308, 50348], "fn": "Ownable._setOwner", "statement": 66}, "5616": {"op": "MLOAD", "path": "0", "offset": [50308, 50348], "fn": "Ownable._setOwner"}, "5617": {"op": "SWAP2", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5618": {"op": "AND", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5619": {"op": "SWAP2", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5620": {"op": "SWAP1", "path": "0", "offset": [50276, 50293], "fn": "Ownable._setOwner"}, "5621": {"op": "DUP3", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5622": {"op": "SWAP1", "path": "0", "offset": [50260, 50266], "fn": "Ownable._setOwner"}, "5623": {"op": "PUSH32", "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0", "path": "0", "offset": [50308, 50348], "fn": "Ownable._setOwner"}, "5656": {"op": "SWAP1", "path": "0", "offset": [50308, 50348], "fn": "Ownable._setOwner"}, "5657": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [50241, 50257], "fn": "Ownable._setOwner"}, "5659": {"op": "SWAP1", "path": "0", "offset": [50241, 50257], "fn": "Ownable._setOwner"}, "5660": {"op": "LOG3", "path": "0", "offset": [50308, 50348], "fn": "Ownable._setOwner"}, "5661": {"op": "POP", "path": "0", "offset": [50231, 50355], "fn": "Ownable._setOwner"}, "5662": {"op": "POP", "path": "0", "offset": [50186, 50355], "fn": "Ownable._setOwner"}, "5663": {"op": "JUMP", "jump": "o", "path": "0", "offset": [50186, 50355], "fn": "Ownable._setOwner"}, "5664": {"op": "JUMPDEST", "path": "0", "offset": [35672, 35780], "fn": "ERC721._safeMint"}, "5665": {"op": "PUSH2", "value": "0xC6E", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint", "statement": 67}, "5668": {"op": "DUP3", "path": "0", "offset": [35757, 35759], "fn": "ERC721._safeMint"}, "5669": {"op": "DUP3", "path": "0", "offset": [35761, 35768], "fn": "ERC721._safeMint"}, "5670": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5672": {"op": "MLOAD", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5673": {"op": "DUP1", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5674": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5676": {"op": "ADD", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5677": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5679": {"op": "MSTORE", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5680": {"op": "DUP1", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5681": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5683": {"op": "DUP2", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5684": {"op": "MSTORE", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5685": {"op": "POP", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5686": {"op": "PUSH2", "value": "0x1832", "path": "0", "offset": [35747, 35756], "fn": "ERC721._safeMint"}, "5689": {"op": "JUMP", "jump": "i", "path": "0", "offset": [35747, 35773], "fn": "ERC721._safeMint"}, "5690": {"op": "JUMPDEST", "path": "0", "offset": [33977, 34318], "fn": "ERC721._safeTransfer"}, "5691": {"op": "PUSH2", "value": "0x1645", "path": "0", "offset": [34128, 34156], "fn": "ERC721._safeTransfer", "statement": 68}, "5694": {"op": "DUP5", "path": "0", "offset": [34138, 34142], "fn": "ERC721._safeTransfer"}, "5695": {"op": "DUP5", "path": "0", "offset": [34144, 34146], "fn": "ERC721._safeTransfer"}, "5696": {"op": "DUP5", "path": "0", "offset": [34148, 34155], "fn": "ERC721._safeTransfer"}, "5697": {"op": "PUSH2", "value": "0x1423", "path": "0", "offset": [34128, 34137], "fn": "ERC721._safeTransfer"}, "5700": {"op": "JUMP", "jump": "i", "path": "0", "offset": [34128, 34156], "fn": "ERC721._safeTransfer"}, "5701": {"op": "JUMPDEST", "path": "0", "offset": [34128, 34156], "fn": "ERC721._safeTransfer"}, "5702": {"op": "PUSH2", "value": "0x1651", "path": "0", "offset": [34187, 34235], "fn": "ERC721._safeTransfer", "statement": 69}, "5705": {"op": "DUP5", "path": "0", "offset": [34210, 34214], "fn": "ERC721._safeTransfer"}, "5706": {"op": "DUP5", "path": "0", "offset": [34216, 34218], "fn": "ERC721._safeTransfer"}, "5707": {"op": "DUP5", "path": "0", "offset": [34220, 34227], "fn": "ERC721._safeTransfer"}, "5708": {"op": "DUP5", "path": "0", "offset": [34229, 34234], "fn": "ERC721._safeTransfer"}, "5709": {"op": "PUSH2", "value": "0x1865", "path": "0", "offset": [34187, 34209], "fn": "ERC721._safeTransfer"}, "5712": {"op": "JUMP", "jump": "i", "path": "0", "offset": [34187, 34235], "fn": "ERC721._safeTransfer"}, "5713": {"op": "JUMPDEST", "path": "0", "offset": [34187, 34235], "fn": "ERC721._safeTransfer", "branch": 126}, "5714": {"op": "PUSH2", "value": "0xFCF", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5717": {"op": "JUMPI", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer", "branch": 126}, "5718": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5720": {"op": "MLOAD", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5721": {"op": "PUSH3", "value": "0x461BCD"}, "5725": {"op": "PUSH1", "value": "0xE5"}, "5727": {"op": "SHL"}, "5728": {"op": "DUP2", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5729": {"op": "MSTORE", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5730": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5732": {"op": "ADD", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5733": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5736": {"op": "SWAP1", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5737": {"op": "PUSH2", "value": "0x2265", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5740": {"op": "JUMP", "jump": "i", "path": "0", "offset": [34166, 34311], "fn": "ERC721._safeTransfer"}, "5741": {"op": "JUMPDEST", "path": "0", "offset": [51130, 51236], "fn": "FundMePunks._baseURI"}, "5742": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [51190, 51203], "fn": "FundMePunks._baseURI"}, "5744": {"op": "PUSH1", "value": "0xB", "path": "0", "offset": [51222, 51229], "fn": "FundMePunks._baseURI", "statement": 70}, "5746": {"op": "DUP1", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5747": {"op": "SLOAD", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5748": {"op": "PUSH2", "value": "0x66B", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5751": {"op": "SWAP1", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5752": {"op": "PUSH2", "value": "0x204B", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5755": {"op": "JUMP", "jump": "i", "path": "0", "offset": [51215, 51229], "fn": "FundMePunks._baseURI"}, "5756": {"op": "JUMPDEST", "path": "0", "offset": [14568, 15271], "fn": "Strings.toString"}, "5757": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [14624, 14637], "fn": "Strings.toString"}, "5759": {"op": "DUP2", "path": "0", "offset": [14841, 14851], "fn": "Strings.toString", "branch": 127}, "5760": {"op": "PUSH2", "value": "0x16A0", "path": "0", "offset": [14837, 14888], "fn": "Strings.toString"}, "5763": {"op": "JUMPI", "path": "0", "offset": [14837, 14888], "fn": "Strings.toString", "branch": 127}, "5764": {"op": "POP"}, "5765": {"op": "POP"}, "5766": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString", "statement": 71}, "5768": {"op": "DUP1", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5769": {"op": "MLOAD", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5770": {"op": "DUP1", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5771": {"op": "DUP3", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5772": {"op": "ADD", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5773": {"op": "SWAP1", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5774": {"op": "SWAP2", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5775": {"op": "MSTORE", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5776": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5778": {"op": "DUP2", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5779": {"op": "MSTORE", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5780": {"op": "PUSH1", "value": "0x3"}, "5782": {"op": "PUSH1", "value": "0xFC"}, "5784": {"op": "SHL"}, "5785": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5787": {"op": "DUP3", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5788": {"op": "ADD", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5789": {"op": "MSTORE", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5790": {"op": "SWAP1", "path": "0", "offset": [14867, 14877], "fn": "Strings.toString"}, "5791": {"op": "JUMP", "jump": "o", "path": "0", "offset": [14568, 15271], "fn": "Strings.toString"}, "5792": {"op": "JUMPDEST", "path": "0", "offset": [14837, 14888], "fn": "Strings.toString"}, "5793": {"op": "DUP2", "path": "0", "offset": [14912, 14917], "fn": "Strings.toString"}, "5794": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [14897, 14909], "fn": "Strings.toString"}, "5796": {"op": "JUMPDEST", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5797": {"op": "DUP2", "path": "0", "offset": [14958, 14967], "fn": "Strings.toString"}, "5798": {"op": "ISZERO", "path": "0", "offset": [14958, 14967], "fn": "Strings.toString"}, "5799": {"op": "PUSH2", "value": "0x16CA", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5802": {"op": "JUMPI", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5803": {"op": "DUP1", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString", "statement": 72}, "5804": {"op": "PUSH2", "value": "0x16B4", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5807": {"op": "DUP2", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5808": {"op": "PUSH2", "value": "0x2138", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5811": {"op": "JUMP", "jump": "i", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5812": {"op": "JUMPDEST", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5813": {"op": "SWAP2", "path": "0", "offset": [14983, 14991], "fn": "Strings.toString"}, "5814": {"op": "POP"}, "5815": {"op": "PUSH2", "value": "0x16C3", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString", "statement": 73}, "5818": {"op": "SWAP1", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5819": {"op": "POP"}, "5820": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [15013, 15015], "fn": "Strings.toString"}, "5822": {"op": "DUP4", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5823": {"op": "PUSH2", "value": "0x22CD", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5826": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5827": {"op": "JUMPDEST", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5828": {"op": "SWAP2", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5829": {"op": "POP", "path": "0", "offset": [15005, 15015], "fn": "Strings.toString"}, "5830": {"op": "PUSH2", "value": "0x16A4", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5833": {"op": "JUMP", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5834": {"op": "JUMPDEST", "path": "0", "offset": [14951, 15026], "fn": "Strings.toString"}, "5835": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [15035, 15054], "fn": "Strings.toString"}, "5837": {"op": "DUP2", "path": "0", "offset": [15067, 15073], "fn": "Strings.toString"}, "5838": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5847": {"op": "DUP2", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5848": {"op": "GT", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5849": {"op": "ISZERO", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5850": {"op": "PUSH2", "value": "0x16E5", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5853": {"op": "JUMPI", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5854": {"op": "PUSH2", "value": "0x16E5", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5857": {"op": "PUSH2", "value": "0x1E9D", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5860": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5861": {"op": "JUMPDEST", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5862": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5864": {"op": "MLOAD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5865": {"op": "SWAP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5866": {"op": "DUP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5867": {"op": "DUP3", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5868": {"op": "MSTORE", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5869": {"op": "DUP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5870": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5872": {"op": "ADD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5873": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5875": {"op": "NOT", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5876": {"op": "AND", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5877": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5879": {"op": "ADD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5880": {"op": "DUP3", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5881": {"op": "ADD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5882": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5884": {"op": "MSTORE", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5885": {"op": "DUP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5886": {"op": "ISZERO", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5887": {"op": "PUSH2", "value": "0x170F", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5890": {"op": "JUMPI", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5891": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5893": {"op": "DUP3", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5894": {"op": "ADD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5895": {"op": "DUP2", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5896": {"op": "DUP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5897": {"op": "CALLDATASIZE", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5898": {"op": "DUP4", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5899": {"op": "CALLDATACOPY", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5900": {"op": "ADD", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5901": {"op": "SWAP1", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5902": {"op": "POP"}, "5903": {"op": "JUMPDEST", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5904": {"op": "POP", "path": "0", "offset": [15057, 15074], "fn": "Strings.toString"}, "5905": {"op": "SWAP1", "path": "0", "offset": [15035, 15074], "fn": "Strings.toString"}, "5906": {"op": "POP", "path": "0", "offset": [15035, 15074], "fn": "Strings.toString"}, "5907": {"op": "JUMPDEST", "path": "0", "offset": [15084, 15234], "fn": "Strings.toString"}, "5908": {"op": "DUP5", "path": "0", "offset": [15091, 15101], "fn": "Strings.toString"}, "5909": {"op": "ISZERO", "path": "0", "offset": [15091, 15101], "fn": "Strings.toString"}, "5910": {"op": "PUSH2", "value": "0x141B", "path": "0", "offset": [15084, 15234], "fn": "Strings.toString"}, "5913": {"op": "JUMPI", "path": "0", "offset": [15084, 15234], "fn": "Strings.toString"}, "5914": {"op": "PUSH2", "value": "0x1724", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString", "statement": 74}, "5917": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [15127, 15128], "fn": "Strings.toString"}, "5919": {"op": "DUP4", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString"}, "5920": {"op": "PUSH2", "value": "0x224E", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString"}, "5923": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString"}, "5924": {"op": "JUMPDEST", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString"}, "5925": {"op": "SWAP2", "path": "0", "offset": [15117, 15128], "fn": "Strings.toString"}, "5926": {"op": "POP"}, "5927": {"op": "PUSH2", "value": "0x1731", "path": "0", "offset": [15185, 15195], "fn": "Strings.toString", "statement": 75}, "5930": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [15193, 15195], "fn": "Strings.toString"}, "5932": {"op": "DUP7", "path": "0", "offset": [15185, 15190], "fn": "Strings.toString"}, "5933": {"op": "PUSH2", "value": "0x22E1", "path": "0", "offset": [15185, 15195], "fn": "Strings.toString"}, "5936": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15185, 15195], "fn": "Strings.toString"}, "5937": {"op": "JUMPDEST", "path": "0", "offset": [15185, 15195], "fn": "Strings.toString"}, "5938": {"op": "PUSH2", "value": "0x173C", "path": "0", "offset": [15172, 15196], "fn": "Strings.toString"}, "5941": {"op": "SWAP1", "path": "0", "offset": [15172, 15196], "fn": "Strings.toString"}, "5942": {"op": "PUSH1", "value": "0x30", "path": "0", "offset": [15172, 15174], "fn": "Strings.toString"}, "5944": {"op": "PUSH2", "value": "0x2153", "path": "0", "offset": [15172, 15196], "fn": "Strings.toString"}, "5947": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15172, 15196], "fn": "Strings.toString"}, "5948": {"op": "JUMPDEST", "path": "0", "offset": [15172, 15196], "fn": "Strings.toString"}, "5949": {"op": "PUSH1", "value": "0xF8", "path": "0", "offset": [15159, 15198], "fn": "Strings.toString"}, "5951": {"op": "SHL", "path": "0", "offset": [15159, 15198], "fn": "Strings.toString"}, "5952": {"op": "DUP2", "path": "0", "offset": [15142, 15148], "fn": "Strings.toString"}, "5953": {"op": "DUP4", "path": "0", "offset": [15149, 15155], "fn": "Strings.toString"}, "5954": {"op": "DUP2", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5955": {"op": "MLOAD", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5956": {"op": "DUP2", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5957": {"op": "LT", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5958": {"op": "PUSH2", "value": "0x1751", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5961": {"op": "JUMPI", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5962": {"op": "PUSH2", "value": "0x1751", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5965": {"op": "PUSH2", "value": "0x210C", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5968": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5969": {"op": "JUMPDEST", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5970": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5972": {"op": "ADD", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5973": {"op": "ADD", "path": "0", "offset": [15142, 15156], "fn": "Strings.toString"}, "5974": {"op": "SWAP1", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5975": {"op": "PUSH1", "value": "0x1"}, "5977": {"op": "PUSH1", "value": "0x1"}, "5979": {"op": "PUSH1", "value": "0xF8"}, "5981": {"op": "SHL"}, "5982": {"op": "SUB"}, "5983": {"op": "NOT", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5984": {"op": "AND", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5985": {"op": "SWAP1", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5986": {"op": "DUP2", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5987": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5989": {"op": "BYTE", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5990": {"op": "SWAP1", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5991": {"op": "MSTORE8", "path": "0", "offset": [15142, 15198], "fn": "Strings.toString"}, "5992": {"op": "POP"}, "5993": {"op": "PUSH2", "value": "0x1773", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString", "statement": 76}, "5996": {"op": "PUSH1", "value": "0xA", "path": "0", "offset": [15221, 15223], "fn": "Strings.toString"}, "5998": {"op": "DUP7", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "5999": {"op": "PUSH2", "value": "0x22CD", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "6002": {"op": "JUMP", "jump": "i", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "6003": {"op": "JUMPDEST", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "6004": {"op": "SWAP5", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "6005": {"op": "POP", "path": "0", "offset": [15212, 15223], "fn": "Strings.toString"}, "6006": {"op": "PUSH2", "value": "0x1713", "path": "0", "offset": [15084, 15234], "fn": "Strings.toString"}, "6009": {"op": "JUMP", "path": "0", "offset": [15084, 15234], "fn": "Strings.toString"}, "6010": {"op": "JUMPDEST", "path": "0", "offset": [43711, 44283], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6011": {"op": "PUSH1", "value": "0x1"}, "6013": {"op": "PUSH1", "value": "0x1"}, "6015": {"op": "PUSH1", "value": "0xA0"}, "6017": {"op": "SHL"}, "6018": {"op": "SUB"}, "6019": {"op": "DUP4", "path": "0", "offset": [43910, 43928], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6020": {"op": "AND", "path": "0", "offset": [43910, 43928], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 128}, "6021": {"op": "PUSH2", "value": "0x17D5", "path": "0", "offset": [43906, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6024": {"op": "JUMPI", "path": "0", "offset": [43906, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 128}, "6025": {"op": "PUSH2", "value": "0x17D0", "path": "0", "offset": [43944, 43984], "fn": "ERC721Enumerable._beforeTokenTransfer", "statement": 77}, "6028": {"op": "DUP2", "path": "0", "offset": [43976, 43983], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6029": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [45092, 45102], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "statement": 78}, "6031": {"op": "DUP1", "path": "0", "offset": [45092, 45109], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6032": {"op": "SLOAD", "path": "0", "offset": [45092, 45109], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6033": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6035": {"op": "DUP4", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6036": {"op": "DUP2", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6037": {"op": "MSTORE", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6038": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [45065, 45080], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6040": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6042": {"op": "MSTORE", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6043": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6045": {"op": "DUP2", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6046": {"op": "KECCAK256", "path": "0", "offset": [45065, 45089], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6047": {"op": "DUP3", "path": "0", "offset": [45065, 45109], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6048": {"op": "SWAP1", "path": "0", "offset": [45065, 45109], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6049": {"op": "SSTORE", "path": "0", "offset": [45065, 45109], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6050": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration", "statement": 79}, "6052": {"op": "DUP3", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6053": {"op": "ADD", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6054": {"op": "DUP4", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6055": {"op": "SSTORE", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6056": {"op": "SWAP2", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6057": {"op": "SWAP1", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6058": {"op": "SWAP2", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6059": {"op": "MSTORE", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6060": {"op": "PUSH32", "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6093": {"op": "ADD", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6094": {"op": "SSTORE", "path": "0", "offset": [45119, 45143], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6095": {"op": "JUMP", "path": "0", "offset": [44989, 45150], "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration"}, "6096": {"op": "JUMPDEST", "path": "0", "offset": [43944, 43984], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6097": {"op": "PUSH2", "value": "0x17F8", "path": "0", "offset": [43906, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6100": {"op": "JUMP", "path": "0", "offset": [43906, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6101": {"op": "JUMPDEST", "path": "0", "offset": [43906, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6102": {"op": "DUP2", "path": "0", "offset": [44013, 44015], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6103": {"op": "PUSH1", "value": "0x1"}, "6105": {"op": "PUSH1", "value": "0x1"}, "6107": {"op": "PUSH1", "value": "0xA0"}, "6109": {"op": "SHL"}, "6110": {"op": "SUB"}, "6111": {"op": "AND", "path": "0", "offset": [44005, 44015], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6112": {"op": "DUP4", "path": "0", "offset": [44005, 44009], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6113": {"op": "PUSH1", "value": "0x1"}, "6115": {"op": "PUSH1", "value": "0x1"}, "6117": {"op": "PUSH1", "value": "0xA0"}, "6119": {"op": "SHL"}, "6120": {"op": "SUB"}, "6121": {"op": "AND", "path": "0", "offset": [44005, 44015], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6122": {"op": "EQ", "path": "0", "offset": [44005, 44015], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 129}, "6123": {"op": "PUSH2", "value": "0x17F8", "path": "0", "offset": [44001, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6126": {"op": "JUMPI", "path": "0", "offset": [44001, 44089], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 129}, "6127": {"op": "PUSH2", "value": "0x17F8", "path": "0", "offset": [44031, 44078], "fn": "ERC721Enumerable._beforeTokenTransfer", "statement": 80}, "6130": {"op": "DUP4", "path": "0", "offset": [44064, 44068], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6131": {"op": "DUP3", "path": "0", "offset": [44070, 44077], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6132": {"op": "PUSH2", "value": "0x1963", "path": "0", "offset": [44031, 44063], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6135": {"op": "JUMP", "jump": "i", "path": "0", "offset": [44031, 44078], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6136": {"op": "JUMPDEST", "path": "0", "offset": [44031, 44078], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6137": {"op": "PUSH1", "value": "0x1"}, "6139": {"op": "PUSH1", "value": "0x1"}, "6141": {"op": "PUSH1", "value": "0xA0"}, "6143": {"op": "SHL"}, "6144": {"op": "SUB"}, "6145": {"op": "DUP3", "path": "0", "offset": [44102, 44118], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6146": {"op": "AND", "path": "0", "offset": [44102, 44118], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 130}, "6147": {"op": "PUSH2", "value": "0x180F", "path": "0", "offset": [44098, 44277], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6150": {"op": "JUMPI", "path": "0", "offset": [44098, 44277], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 130}, "6151": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [44134, 44179], "fn": "ERC721Enumerable._beforeTokenTransfer", "statement": 81}, "6154": {"op": "DUP2", "path": "0", "offset": [44171, 44178], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6155": {"op": "PUSH2", "value": "0x1A00", "path": "0", "offset": [44134, 44170], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6158": {"op": "JUMP", "jump": "i", "path": "0", "offset": [44134, 44179], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6159": {"op": "JUMPDEST", "path": "0", "offset": [44098, 44277], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6160": {"op": "DUP3", "path": "0", "offset": [44206, 44210], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6161": {"op": "PUSH1", "value": "0x1"}, "6163": {"op": "PUSH1", "value": "0x1"}, "6165": {"op": "PUSH1", "value": "0xA0"}, "6167": {"op": "SHL"}, "6168": {"op": "SUB"}, "6169": {"op": "AND", "path": "0", "offset": [44200, 44210], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6170": {"op": "DUP3", "path": "0", "offset": [44200, 44202], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6171": {"op": "PUSH1", "value": "0x1"}, "6173": {"op": "PUSH1", "value": "0x1"}, "6175": {"op": "PUSH1", "value": "0xA0"}, "6177": {"op": "SHL"}, "6178": {"op": "SUB"}, "6179": {"op": "AND", "path": "0", "offset": [44200, 44210], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6180": {"op": "EQ", "path": "0", "offset": [44200, 44210], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 131}, "6181": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [44196, 44277], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6184": {"op": "JUMPI", "path": "0", "offset": [44196, 44277], "fn": "ERC721Enumerable._beforeTokenTransfer", "branch": 131}, "6185": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [44226, 44266], "fn": "ERC721Enumerable._beforeTokenTransfer", "statement": 82}, "6188": {"op": "DUP3", "path": "0", "offset": [44254, 44256], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6189": {"op": "DUP3", "path": "0", "offset": [44258, 44265], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6190": {"op": "PUSH2", "value": "0x1AAF", "path": "0", "offset": [44226, 44253], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6193": {"op": "JUMP", "jump": "i", "path": "0", "offset": [44226, 44266], "fn": "ERC721Enumerable._beforeTokenTransfer"}, "6194": {"op": "JUMPDEST", "path": "0", "offset": [36001, 36312], "fn": "ERC721._safeMint"}, "6195": {"op": "PUSH2", "value": "0x183C", "path": "0", "offset": [36126, 36144], "fn": "ERC721._safeMint", "statement": 83}, "6198": {"op": "DUP4", "path": "0", "offset": [36132, 36134], "fn": "ERC721._safeMint"}, "6199": {"op": "DUP4", "path": "0", "offset": [36136, 36143], "fn": "ERC721._safeMint"}, "6200": {"op": "PUSH2", "value": "0x1AF3", "path": "0", "offset": [36126, 36131], "fn": "ERC721._safeMint"}, "6203": {"op": "JUMP", "jump": "i", "path": "0", "offset": [36126, 36144], "fn": "ERC721._safeMint"}, "6204": {"op": "JUMPDEST", "path": "0", "offset": [36126, 36144], "fn": "ERC721._safeMint"}, "6205": {"op": "PUSH2", "value": "0x1849", "path": "0", "offset": [36175, 36229], "fn": "ERC721._safeMint", "statement": 84}, "6208": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [36206, 36207], "fn": "ERC721._safeMint"}, "6210": {"op": "DUP5", "path": "0", "offset": [36210, 36212], "fn": "ERC721._safeMint"}, "6211": {"op": "DUP5", "path": "0", "offset": [36214, 36221], "fn": "ERC721._safeMint"}, "6212": {"op": "DUP5", "path": "0", "offset": [36223, 36228], "fn": "ERC721._safeMint"}, "6213": {"op": "PUSH2", "value": "0x1865", "path": "0", "offset": [36175, 36197], "fn": "ERC721._safeMint"}, "6216": {"op": "JUMP", "jump": "i", "path": "0", "offset": [36175, 36229], "fn": "ERC721._safeMint"}, "6217": {"op": "JUMPDEST", "path": "0", "offset": [36175, 36229], "fn": "ERC721._safeMint", "branch": 132}, "6218": {"op": "PUSH2", "value": "0x927", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6221": {"op": "JUMPI", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint", "branch": 132}, "6222": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6224": {"op": "MLOAD", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6225": {"op": "PUSH3", "value": "0x461BCD"}, "6229": {"op": "PUSH1", "value": "0xE5"}, "6231": {"op": "SHL"}, "6232": {"op": "DUP2", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6233": {"op": "MSTORE", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6234": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6236": {"op": "ADD", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6237": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6240": {"op": "SWAP1", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6241": {"op": "PUSH2", "value": "0x2265", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6244": {"op": "JUMP", "jump": "i", "path": "0", "offset": [36154, 36305], "fn": "ERC721._safeMint"}, "6245": {"op": "JUMPDEST", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6246": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [39474, 39478], "fn": "ERC721._checkOnERC721Received"}, "6248": {"op": "PUSH1", "value": "0x1"}, "6250": {"op": "PUSH1", "value": "0x1"}, "6252": {"op": "PUSH1", "value": "0xA0"}, "6254": {"op": "SHL"}, "6255": {"op": "SUB"}, "6256": {"op": "DUP5", "path": "0", "offset": [39494, 39507], "fn": "ERC721._checkOnERC721Received"}, "6257": {"op": "AND", "path": "0", "offset": [39494, 39507], "fn": "ERC721._checkOnERC721Received"}, "6258": {"op": "EXTCODESIZE", "path": "0", "offset": [17354, 17374], "fn": "Address.isContract"}, "6259": {"op": "ISZERO", "path": "0", "offset": [17400, 17408], "fn": "Address.isContract", "statement": 85}, "6260": {"op": "PUSH2", "value": "0x1958", "path": "0", "offset": [39490, 40268], "fn": "ERC721._checkOnERC721Received"}, "6263": {"op": "JUMPI", "path": "0", "offset": [39490, 40268], "fn": "ERC721._checkOnERC721Received"}, "6264": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6266": {"op": "MLOAD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6267": {"op": "PUSH4", "value": "0xA85BD01"}, "6272": {"op": "PUSH1", "value": "0xE1"}, "6274": {"op": "SHL"}, "6275": {"op": "DUP2", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6276": {"op": "MSTORE", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6277": {"op": "PUSH1", "value": "0x1"}, "6279": {"op": "PUSH1", "value": "0x1"}, "6281": {"op": "PUSH1", "value": "0xA0"}, "6283": {"op": "SHL"}, "6284": {"op": "SUB"}, "6285": {"op": "DUP6", "path": "0", "offset": [39545, 39581], "fn": "ERC721._checkOnERC721Received"}, "6286": {"op": "AND", "path": "0", "offset": [39545, 39581], "fn": "ERC721._checkOnERC721Received"}, "6287": {"op": "SWAP1", "path": "0", "offset": [39545, 39581], "fn": "ERC721._checkOnERC721Received"}, "6288": {"op": "PUSH4", "value": "0x150B7A02", "path": "0", "offset": [39545, 39581], "fn": "ERC721._checkOnERC721Received"}, "6293": {"op": "SWAP1", "path": "0", "offset": [39545, 39581], "fn": "ERC721._checkOnERC721Received"}, "6294": {"op": "PUSH2", "value": "0x18A9", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6297": {"op": "SWAP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6298": {"op": "CALLER", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "6299": {"op": "SWAP1", "path": "0", "offset": [26924, 26934], "fn": "Context._msgSender"}, "6300": {"op": "DUP10", "path": "0", "offset": [39637, 39641], "fn": "ERC721._checkOnERC721Received"}, "6301": {"op": "SWAP1", "path": "0", "offset": [39637, 39641], "fn": "ERC721._checkOnERC721Received"}, "6302": {"op": "DUP9", "path": "0", "offset": [39663, 39670], "fn": "ERC721._checkOnERC721Received"}, "6303": {"op": "SWAP1", "path": "0", "offset": [39663, 39670], "fn": "ERC721._checkOnERC721Received"}, "6304": {"op": "DUP9", "path": "0", "offset": [39692, 39697], "fn": "ERC721._checkOnERC721Received"}, "6305": {"op": "SWAP1", "path": "0", "offset": [39692, 39697], "fn": "ERC721._checkOnERC721Received"}, "6306": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6308": {"op": "ADD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6309": {"op": "PUSH2", "value": "0x22F5", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6312": {"op": "JUMP", "jump": "i", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6313": {"op": "JUMPDEST", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6314": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6316": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6318": {"op": "MLOAD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6319": {"op": "DUP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6320": {"op": "DUP4", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6321": {"op": "SUB", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6322": {"op": "DUP2", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6323": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6325": {"op": "DUP8", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6326": {"op": "GAS", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6327": {"op": "CALL", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6328": {"op": "SWAP3", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6329": {"op": "POP", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6330": {"op": "POP", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6331": {"op": "POP", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6332": {"op": "DUP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6333": {"op": "ISZERO", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6334": {"op": "PUSH2", "value": "0x18E4", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6337": {"op": "JUMPI", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6338": {"op": "POP"}, "6339": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6341": {"op": "DUP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6342": {"op": "MLOAD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6343": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6345": {"op": "RETURNDATASIZE", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6346": {"op": "SWAP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6347": {"op": "DUP2", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6348": {"op": "ADD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6349": {"op": "PUSH1", "value": "0x1F"}, "6351": {"op": "NOT"}, "6352": {"op": "AND", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6353": {"op": "DUP3", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6354": {"op": "ADD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6355": {"op": "SWAP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6356": {"op": "SWAP3", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6357": {"op": "MSTORE", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6358": {"op": "PUSH2", "value": "0x18E1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6361": {"op": "SWAP2", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6362": {"op": "DUP2", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6363": {"op": "ADD", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6364": {"op": "SWAP1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6365": {"op": "PUSH2", "value": "0x2332", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6368": {"op": "JUMP", "jump": "i", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6369": {"op": "JUMPDEST", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6370": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6372": {"op": "JUMPDEST", "path": "0", "offset": [39545, 39715], "fn": "ERC721._checkOnERC721Received"}, "6373": {"op": "PUSH2", "value": "0x193E", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6376": {"op": "JUMPI", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6377": {"op": "RETURNDATASIZE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6378": {"op": "DUP1", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6379": {"op": "DUP1", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6380": {"op": "ISZERO", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6381": {"op": "PUSH2", "value": "0x1912", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6384": {"op": "JUMPI", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6385": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6387": {"op": "MLOAD", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6388": {"op": "SWAP2", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6389": {"op": "POP", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6390": {"op": "PUSH1", "value": "0x1F", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6392": {"op": "NOT", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6393": {"op": "PUSH1", "value": "0x3F", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6395": {"op": "RETURNDATASIZE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6396": {"op": "ADD", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6397": {"op": "AND", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6398": {"op": "DUP3", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6399": {"op": "ADD", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6400": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6402": {"op": "MSTORE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6403": {"op": "RETURNDATASIZE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6404": {"op": "DUP3", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6405": {"op": "MSTORE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6406": {"op": "RETURNDATASIZE", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6407": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6409": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6411": {"op": "DUP5", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6412": {"op": "ADD", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6413": {"op": "RETURNDATACOPY", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6414": {"op": "PUSH2", "value": "0x1917", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6417": {"op": "JUMP", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6418": {"op": "JUMPDEST", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6419": {"op": "PUSH1", "value": "0x60", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6421": {"op": "SWAP2", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6422": {"op": "POP", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6423": {"op": "JUMPDEST", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6424": {"op": "POP"}, "6425": {"op": "DUP1", "path": "0", "offset": [39894, 39907], "fn": "ERC721._checkOnERC721Received"}, "6426": {"op": "MLOAD", "path": "0", "offset": [39894, 39907], "fn": "ERC721._checkOnERC721Received"}, "6427": {"op": "PUSH2", "value": "0x1936", "path": "0", "offset": [39890, 40202], "fn": "ERC721._checkOnERC721Received"}, "6430": {"op": "JUMPI", "path": "0", "offset": [39890, 40202], "fn": "ERC721._checkOnERC721Received"}, "6431": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received", "statement": 86}, "6433": {"op": "MLOAD", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6434": {"op": "PUSH3", "value": "0x461BCD"}, "6438": {"op": "PUSH1", "value": "0xE5"}, "6440": {"op": "SHL"}, "6441": {"op": "DUP2", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6442": {"op": "MSTORE", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6443": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6445": {"op": "ADD", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6446": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6449": {"op": "SWAP1", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6450": {"op": "PUSH2", "value": "0x2265", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6453": {"op": "JUMP", "jump": "i", "path": "0", "offset": [39936, 40042], "fn": "ERC721._checkOnERC721Received"}, "6454": {"op": "JUMPDEST", "path": "0", "offset": [39890, 40202], "fn": "ERC721._checkOnERC721Received"}, "6455": {"op": "DUP1", "path": "0", "offset": [40154, 40160], "fn": "ERC721._checkOnERC721Received"}, "6456": {"op": "MLOAD", "path": "0", "offset": [40148, 40161], "fn": "ERC721._checkOnERC721Received"}, "6457": {"op": "DUP2", "path": "0", "offset": [40139, 40145], "fn": "ERC721._checkOnERC721Received"}, "6458": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [40135, 40137], "fn": "ERC721._checkOnERC721Received"}, "6460": {"op": "ADD", "path": "0", "offset": [40131, 40146], "fn": "ERC721._checkOnERC721Received"}, "6461": {"op": "REVERT", "path": "0", "offset": [40124, 40162], "fn": "ERC721._checkOnERC721Received"}, "6462": {"op": "JUMPDEST", "path": "0", "offset": [39525, 40216], "fn": "ERC721._checkOnERC721Received"}, "6463": {"op": "PUSH1", "value": "0x1"}, "6465": {"op": "PUSH1", "value": "0x1"}, "6467": {"op": "PUSH1", "value": "0xE0"}, "6469": {"op": "SHL"}, "6470": {"op": "SUB"}, "6471": {"op": "NOT"}, "6472": {"op": "AND", "path": "0", "offset": [39777, 39828], "fn": "ERC721._checkOnERC721Received", "statement": 87}, "6473": {"op": "PUSH4", "value": "0xA85BD01"}, "6478": {"op": "PUSH1", "value": "0xE1"}, "6480": {"op": "SHL"}, "6481": {"op": "EQ", "path": "0", "offset": [39777, 39828], "fn": "ERC721._checkOnERC721Received"}, "6482": {"op": "SWAP1", "path": "0", "offset": [39777, 39828], "fn": "ERC721._checkOnERC721Received"}, "6483": {"op": "POP"}, "6484": {"op": "PUSH2", "value": "0x141B", "path": "0", "offset": [39770, 39828], "fn": "ERC721._checkOnERC721Received"}, "6487": {"op": "JUMP", "path": "0", "offset": [39770, 39828], "fn": "ERC721._checkOnERC721Received"}, "6488": {"op": "JUMPDEST", "path": "0", "offset": [39490, 40268], "fn": "ERC721._checkOnERC721Received"}, "6489": {"op": "POP"}, "6490": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [40253, 40257], "fn": "ERC721._checkOnERC721Received", "statement": 88}, "6492": {"op": "SWAP5", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6493": {"op": "SWAP4", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6494": {"op": "POP", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6495": {"op": "POP", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6496": {"op": "POP", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6497": {"op": "POP", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6498": {"op": "JUMP", "jump": "o", "path": "0", "offset": [39324, 40274], "fn": "ERC721._checkOnERC721Received"}, "6499": {"op": "JUMPDEST", "path": "0", "offset": [45767, 46749], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6500": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [46041, 46063], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6502": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [46091, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6504": {"op": "PUSH2", "value": "0x1970", "path": "0", "offset": [46066, 46088], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6507": {"op": "DUP5", "path": "0", "offset": [46083, 46087], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6508": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [46066, 46082], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6511": {"op": "JUMP", "jump": "i", "path": "0", "offset": [46066, 46088], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6512": {"op": "JUMPDEST", "path": "0", "offset": [46066, 46088], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6513": {"op": "PUSH2", "value": "0x197A", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6516": {"op": "SWAP2", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6517": {"op": "SWAP1", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6518": {"op": "PUSH2", "value": "0x224E", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6521": {"op": "JUMP", "jump": "i", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6522": {"op": "JUMPDEST", "path": "0", "offset": [46066, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6523": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [46102, 46120], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6525": {"op": "DUP4", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6526": {"op": "DUP2", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6527": {"op": "MSTORE", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6528": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [46123, 46140], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6530": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6532": {"op": "MSTORE", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6533": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6535": {"op": "SWAP1", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6536": {"op": "KECCAK256", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6537": {"op": "SLOAD", "path": "0", "offset": [46123, 46149], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6538": {"op": "SWAP1", "path": "0", "offset": [46041, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6539": {"op": "SWAP2", "path": "0", "offset": [46041, 46092], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6540": {"op": "POP"}, "6541": {"op": "DUP1", "path": "0", "offset": [46253, 46281], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6542": {"op": "DUP3", "path": "0", "offset": [46253, 46281], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6543": {"op": "EQ", "path": "0", "offset": [46253, 46281], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "branch": 133}, "6544": {"op": "PUSH2", "value": "0x19CD", "path": "0", "offset": [46249, 46572], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6547": {"op": "JUMPI", "path": "0", "offset": [46249, 46572], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "branch": 133}, "6548": {"op": "PUSH1", "value": "0x1"}, "6550": {"op": "PUSH1", "value": "0x1"}, "6552": {"op": "PUSH1", "value": "0xA0"}, "6554": {"op": "SHL"}, "6555": {"op": "SUB"}, "6556": {"op": "DUP5", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6557": {"op": "AND", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6558": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [46297, 46316], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6560": {"op": "SWAP1", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6561": {"op": "DUP2", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6562": {"op": "MSTORE", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6563": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [46319, 46331], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6565": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6567": {"op": "SWAP1", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6568": {"op": "DUP2", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6569": {"op": "MSTORE", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6570": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6572": {"op": "DUP1", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6573": {"op": "DUP4", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6574": {"op": "KECCAK256", "path": "0", "offset": [46319, 46337], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6575": {"op": "DUP6", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6576": {"op": "DUP5", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6577": {"op": "MSTORE", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6578": {"op": "DUP3", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6579": {"op": "MSTORE", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6580": {"op": "DUP1", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6581": {"op": "DUP4", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6582": {"op": "KECCAK256", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6583": {"op": "SLOAD", "path": "0", "offset": [46319, 46353], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6584": {"op": "DUP5", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "statement": 89}, "6585": {"op": "DUP5", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6586": {"op": "MSTORE", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6587": {"op": "DUP2", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6588": {"op": "DUP5", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6589": {"op": "KECCAK256", "path": "0", "offset": [46368, 46398], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6590": {"op": "DUP2", "path": "0", "offset": [46368, 46412], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6591": {"op": "SWAP1", "path": "0", "offset": [46368, 46412], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6592": {"op": "SSTORE", "path": "0", "offset": [46368, 46412], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6593": {"op": "DUP4", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "statement": 90}, "6594": {"op": "MSTORE", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6595": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [46484, 46501], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6597": {"op": "SWAP1", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6598": {"op": "SWAP2", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6599": {"op": "MSTORE", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6600": {"op": "SWAP1", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6601": {"op": "KECCAK256", "path": "0", "offset": [46484, 46514], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6602": {"op": "DUP2", "path": "0", "offset": [46484, 46527], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6603": {"op": "SWAP1", "path": "0", "offset": [46484, 46527], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6604": {"op": "SSTORE", "path": "0", "offset": [46484, 46527], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6605": {"op": "JUMPDEST", "path": "0", "offset": [46249, 46572], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6606": {"op": "POP"}, "6607": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "statement": 91}, "6609": {"op": "SWAP2", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6610": {"op": "DUP3", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6611": {"op": "MSTORE", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6612": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [46665, 46682], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6614": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6616": {"op": "SWAP1", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6617": {"op": "DUP2", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6618": {"op": "MSTORE", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6619": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6621": {"op": "DUP1", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6622": {"op": "DUP5", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6623": {"op": "KECCAK256", "path": "0", "offset": [46665, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6624": {"op": "DUP5", "path": "0", "offset": [46658, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6625": {"op": "SWAP1", "path": "0", "offset": [46658, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6626": {"op": "SSTORE", "path": "0", "offset": [46658, 46691], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6627": {"op": "PUSH1", "value": "0x1"}, "6629": {"op": "PUSH1", "value": "0x1"}, "6631": {"op": "PUSH1", "value": "0xA0"}, "6633": {"op": "SHL"}, "6634": {"op": "SUB"}, "6635": {"op": "SWAP1", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration", "statement": 92}, "6636": {"op": "SWAP5", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6637": {"op": "AND", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6638": {"op": "DUP4", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6639": {"op": "MSTORE", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6640": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [46708, 46720], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6642": {"op": "DUP2", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6643": {"op": "MSTORE", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6644": {"op": "DUP4", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6645": {"op": "DUP4", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6646": {"op": "KECCAK256", "path": "0", "offset": [46708, 46726], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6647": {"op": "SWAP2", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6648": {"op": "DUP4", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6649": {"op": "MSTORE", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6650": {"op": "MSTORE", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6651": {"op": "SWAP1", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6652": {"op": "DUP2", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6653": {"op": "KECCAK256", "path": "0", "offset": [46708, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6654": {"op": "SSTORE", "path": "0", "offset": [46701, 46742], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6655": {"op": "JUMP", "jump": "o", "path": "0", "offset": [45767, 46749], "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration"}, "6656": {"op": "JUMPDEST", "path": "0", "offset": [47037, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6657": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [47311, 47321], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6659": {"op": "SLOAD", "path": "0", "offset": [47311, 47328], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6660": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [47286, 47308], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6662": {"op": "SWAP1", "path": "0", "offset": [47286, 47308], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6663": {"op": "PUSH2", "value": "0x1A12", "path": "0", "offset": [47311, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6666": {"op": "SWAP1", "path": "0", "offset": [47311, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6667": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [47331, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6669": {"op": "SWAP1", "path": "0", "offset": [47331, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6670": {"op": "PUSH2", "value": "0x224E", "path": "0", "offset": [47311, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6673": {"op": "JUMP", "jump": "i", "path": "0", "offset": [47311, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6674": {"op": "JUMPDEST", "path": "0", "offset": [47311, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6675": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [47342, 47360], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6677": {"op": "DUP4", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6678": {"op": "DUP2", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6679": {"op": "MSTORE", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6680": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [47363, 47378], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6682": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6684": {"op": "MSTORE", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6685": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6687": {"op": "DUP2", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6688": {"op": "KECCAK256", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6689": {"op": "SLOAD", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6690": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [47731, 47741], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6692": {"op": "DUP1", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6693": {"op": "SLOAD", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6694": {"op": "SWAP4", "path": "0", "offset": [47286, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6695": {"op": "SWAP5", "path": "0", "offset": [47286, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6696": {"op": "POP"}, "6697": {"op": "SWAP1", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6698": {"op": "SWAP3", "path": "0", "offset": [47363, 47387], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6699": {"op": "DUP5", "path": "0", "offset": [47286, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6700": {"op": "SWAP1", "path": "0", "offset": [47286, 47332], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6701": {"op": "DUP2", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6702": {"op": "LT", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6703": {"op": "PUSH2", "value": "0x1A3A", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6706": {"op": "JUMPI", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6707": {"op": "PUSH2", "value": "0x1A3A", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6710": {"op": "PUSH2", "value": "0x210C", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6713": {"op": "JUMP", "jump": "i", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6714": {"op": "JUMPDEST", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6715": {"op": "SWAP1", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6716": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6718": {"op": "MSTORE", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6719": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6721": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6723": {"op": "KECCAK256", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6724": {"op": "ADD", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6725": {"op": "SLOAD", "path": "0", "offset": [47731, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6726": {"op": "SWAP1", "path": "0", "offset": [47709, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6727": {"op": "POP", "path": "0", "offset": [47709, 47757], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6728": {"op": "DUP1", "path": "0", "offset": [47793, 47804], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "statement": 93}, "6729": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [47768, 47778], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6731": {"op": "DUP4", "path": "0", "offset": [47779, 47789], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6732": {"op": "DUP2", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6733": {"op": "SLOAD", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6734": {"op": "DUP2", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6735": {"op": "LT", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6736": {"op": "PUSH2", "value": "0x1A5B", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6739": {"op": "JUMPI", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6740": {"op": "PUSH2", "value": "0x1A5B", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6743": {"op": "PUSH2", "value": "0x210C", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6746": {"op": "JUMP", "jump": "i", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6747": {"op": "JUMPDEST", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6748": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6750": {"op": "SWAP2", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6751": {"op": "DUP3", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6752": {"op": "MSTORE", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6753": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6755": {"op": "DUP1", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6756": {"op": "DUP4", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6757": {"op": "KECCAK256", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6758": {"op": "SWAP1", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6759": {"op": "SWAP2", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6760": {"op": "ADD", "path": "0", "offset": [47768, 47790], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6761": {"op": "SWAP3", "path": "0", "offset": [47768, 47804], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6762": {"op": "SWAP1", "path": "0", "offset": [47768, 47804], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6763": {"op": "SWAP3", "path": "0", "offset": [47768, 47804], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6764": {"op": "SSTORE", "path": "0", "offset": [47768, 47804], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6765": {"op": "DUP3", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "statement": 94}, "6766": {"op": "DUP2", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6767": {"op": "MSTORE", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6768": {"op": "PUSH1", "value": "0x9", "path": "0", "offset": [47872, 47887], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6770": {"op": "SWAP1", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6771": {"op": "SWAP2", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6772": {"op": "MSTORE", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6773": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6775": {"op": "DUP1", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6776": {"op": "DUP3", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6777": {"op": "KECCAK256", "path": "0", "offset": [47872, 47900], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6778": {"op": "DUP5", "path": "0", "offset": [47872, 47913], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6779": {"op": "SWAP1", "path": "0", "offset": [47872, 47913], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6780": {"op": "SSTORE", "path": "0", "offset": [47872, 47913], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6781": {"op": "DUP6", "path": "0", "offset": [48041, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "statement": 95}, "6782": {"op": "DUP3", "path": "0", "offset": [48041, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6783": {"op": "MSTORE", "path": "0", "offset": [48041, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6784": {"op": "DUP2", "path": "0", "offset": [48041, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6785": {"op": "KECCAK256", "path": "0", "offset": [48041, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6786": {"op": "SSTORE", "path": "0", "offset": [48034, 48065], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6787": {"op": "PUSH1", "value": "0x8", "path": "0", "offset": [48075, 48085], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration", "statement": 96}, "6789": {"op": "DUP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6790": {"op": "SLOAD", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6791": {"op": "DUP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6792": {"op": "PUSH2", "value": "0x1A93", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6795": {"op": "JUMPI", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6796": {"op": "PUSH2", "value": "0x1A93", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6799": {"op": "PUSH2", "value": "0x234F", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6802": {"op": "JUMP", "jump": "i", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6803": {"op": "JUMPDEST", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6804": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6806": {"op": "SWAP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6807": {"op": "SUB", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6808": {"op": "DUP2", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6809": {"op": "DUP2", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6810": {"op": "SWAP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6811": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6813": {"op": "MSTORE", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6814": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6816": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6818": {"op": "KECCAK256", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6819": {"op": "ADD", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6820": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6822": {"op": "SWAP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6823": {"op": "SSTORE", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6824": {"op": "SWAP1", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6825": {"op": "SSTORE", "path": "0", "offset": [48075, 48091], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6826": {"op": "POP", "path": "0", "offset": [47108, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6827": {"op": "POP", "path": "0", "offset": [47108, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6828": {"op": "POP", "path": "0", "offset": [47108, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6829": {"op": "POP", "path": "0", "offset": [47037, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6830": {"op": "JUMP", "jump": "o", "path": "0", "offset": [47037, 48098], "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration"}, "6831": {"op": "JUMPDEST", "path": "0", "offset": [44577, 44794], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6832": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [44661, 44675], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6834": {"op": "PUSH2", "value": "0x1ABA", "path": "0", "offset": [44678, 44698], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6837": {"op": "DUP4", "path": "0", "offset": [44695, 44697], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6838": {"op": "PUSH2", "value": "0xCE9", "path": "0", "offset": [44678, 44694], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6841": {"op": "JUMP", "jump": "i", "path": "0", "offset": [44678, 44698], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6842": {"op": "JUMPDEST", "path": "0", "offset": [44678, 44698], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6843": {"op": "PUSH1", "value": "0x1"}, "6845": {"op": "PUSH1", "value": "0x1"}, "6847": {"op": "PUSH1", "value": "0xA0"}, "6849": {"op": "SHL"}, "6850": {"op": "SUB"}, "6851": {"op": "SWAP1", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "statement": 97}, "6852": {"op": "SWAP4", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6853": {"op": "AND", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6854": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6856": {"op": "SWAP1", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6857": {"op": "DUP2", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6858": {"op": "MSTORE", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6859": {"op": "PUSH1", "value": "0x6", "path": "0", "offset": [44708, 44720], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6861": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6863": {"op": "SWAP1", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6864": {"op": "DUP2", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6865": {"op": "MSTORE", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6866": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6868": {"op": "DUP1", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6869": {"op": "DUP4", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6870": {"op": "KECCAK256", "path": "0", "offset": [44708, 44724], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6871": {"op": "DUP7", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6872": {"op": "DUP5", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6873": {"op": "MSTORE", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6874": {"op": "DUP3", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6875": {"op": "MSTORE", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6876": {"op": "DUP1", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6877": {"op": "DUP4", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6878": {"op": "KECCAK256", "path": "0", "offset": [44708, 44732], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6879": {"op": "DUP6", "path": "0", "offset": [44708, 44742], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6880": {"op": "SWAP1", "path": "0", "offset": [44708, 44742], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6881": {"op": "SSTORE", "path": "0", "offset": [44708, 44742], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6882": {"op": "SWAP4", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration", "statement": 98}, "6883": {"op": "DUP3", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6884": {"op": "MSTORE", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6885": {"op": "PUSH1", "value": "0x7", "path": "0", "offset": [44752, 44769], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6887": {"op": "SWAP1", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6888": {"op": "MSTORE", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6889": {"op": "SWAP2", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6890": {"op": "SWAP1", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6891": {"op": "SWAP2", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6892": {"op": "KECCAK256", "path": "0", "offset": [44752, 44778], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6893": {"op": "SWAP2", "path": "0", "offset": [44752, 44787], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6894": {"op": "SWAP1", "path": "0", "offset": [44752, 44787], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6895": {"op": "SWAP2", "path": "0", "offset": [44752, 44787], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6896": {"op": "SSTORE", "path": "0", "offset": [44752, 44787], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6897": {"op": "POP"}, "6898": {"op": "JUMP", "jump": "o", "path": "0", "offset": [44577, 44794], "fn": "ERC721Enumerable._addTokenToOwnerEnumeration"}, "6899": {"op": "JUMPDEST", "path": "0", "offset": [36634, 37006], "fn": "ERC721._mint"}, "6900": {"op": "PUSH1", "value": "0x1"}, "6902": {"op": "PUSH1", "value": "0x1"}, "6904": {"op": "PUSH1", "value": "0xA0"}, "6906": {"op": "SHL"}, "6907": {"op": "SUB"}, "6908": {"op": "DUP3", "path": "0", "offset": [36713, 36729], "fn": "ERC721._mint", "statement": 99}, "6909": {"op": "AND", "path": "0", "offset": [36713, 36729], "fn": "ERC721._mint", "branch": 134}, "6910": {"op": "PUSH2", "value": "0x1B49", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6913": {"op": "JUMPI", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint", "branch": 134}, "6914": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6916": {"op": "MLOAD", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6917": {"op": "PUSH3", "value": "0x461BCD"}, "6921": {"op": "PUSH1", "value": "0xE5"}, "6923": {"op": "SHL"}, "6924": {"op": "DUP2", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6925": {"op": "MSTORE", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6926": {"op": "PUSH1", "value": "0x20"}, "6928": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6930": {"op": "DUP3", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6931": {"op": "ADD", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6932": {"op": "DUP2"}, "6933": {"op": "SWAP1"}, "6934": {"op": "MSTORE"}, "6935": {"op": "PUSH1", "value": "0x24"}, "6937": {"op": "DUP3"}, "6938": {"op": "ADD"}, "6939": {"op": "MSTORE"}, "6940": {"op": "PUSH32", "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"}, "6973": {"op": "PUSH1", "value": "0x44"}, "6975": {"op": "DUP3"}, "6976": {"op": "ADD"}, "6977": {"op": "MSTORE"}, "6978": {"op": "PUSH1", "value": "0x64"}, "6980": {"op": "ADD"}, "6981": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6984": {"op": "JUMP"}, "6985": {"op": "JUMPDEST", "path": "0", "offset": [36705, 36766], "fn": "ERC721._mint"}, "6986": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [34686, 34690], "fn": "ERC721._exists"}, "6988": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6989": {"op": "DUP2", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6990": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6991": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [34709, 34716], "fn": "ERC721._exists"}, "6993": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6995": {"op": "MSTORE", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6996": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6998": {"op": "SWAP1", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "6999": {"op": "KECCAK256", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "7000": {"op": "SLOAD", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "7001": {"op": "PUSH1", "value": "0x1"}, "7003": {"op": "PUSH1", "value": "0x1"}, "7005": {"op": "PUSH1", "value": "0xA0"}, "7007": {"op": "SHL"}, "7008": {"op": "SUB"}, "7009": {"op": "AND", "path": "0", "offset": [34709, 34725], "fn": "ERC721._exists"}, "7010": {"op": "ISZERO", "path": "0", "offset": [34709, 34739], "fn": "ERC721._exists"}, "7011": {"op": "PUSH2", "value": "0x1BAE", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint", "statement": 100}, "7014": {"op": "JUMPI", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7015": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7017": {"op": "MLOAD", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7018": {"op": "PUSH3", "value": "0x461BCD"}, "7022": {"op": "PUSH1", "value": "0xE5"}, "7024": {"op": "SHL"}, "7025": {"op": "DUP2", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7026": {"op": "MSTORE", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7027": {"op": "PUSH1", "value": "0x20"}, "7029": {"op": "PUSH1", "value": "0x4", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7031": {"op": "DUP3", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7032": {"op": "ADD", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7033": {"op": "MSTORE"}, "7034": {"op": "PUSH1", "value": "0x1C"}, "7036": {"op": "PUSH1", "value": "0x24"}, "7038": {"op": "DUP3"}, "7039": {"op": "ADD"}, "7040": {"op": "MSTORE"}, "7041": {"op": "PUSH32", "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"}, "7074": {"op": "PUSH1", "value": "0x44"}, "7076": {"op": "DUP3"}, "7077": {"op": "ADD"}, "7078": {"op": "MSTORE"}, "7079": {"op": "PUSH1", "value": "0x64"}, "7081": {"op": "ADD"}, "7082": {"op": "PUSH2", "value": "0x763", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7085": {"op": "JUMP"}, "7086": {"op": "JUMPDEST", "path": "0", "offset": [36776, 36834], "fn": "ERC721._mint"}, "7087": {"op": "PUSH2", "value": "0x1BBA", "path": "0", "offset": [36845, 36890], "fn": "ERC721._mint", "statement": 101}, "7090": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [36874, 36875], "fn": "ERC721._mint"}, "7092": {"op": "DUP4", "path": "0", "offset": [36878, 36880], "fn": "ERC721._mint"}, "7093": {"op": "DUP4", "path": "0", "offset": [36882, 36889], "fn": "ERC721._mint"}, "7094": {"op": "PUSH2", "value": "0x177A", "path": "0", "offset": [36845, 36865], "fn": "ERC721._mint"}, "7097": {"op": "JUMP", "jump": "i", "path": "0", "offset": [36845, 36890], "fn": "ERC721._mint"}, "7098": {"op": "JUMPDEST", "path": "0", "offset": [36845, 36890], "fn": "ERC721._mint"}, "7099": {"op": "PUSH1", "value": "0x1"}, "7101": {"op": "PUSH1", "value": "0x1"}, "7103": {"op": "PUSH1", "value": "0xA0"}, "7105": {"op": "SHL"}, "7106": {"op": "SUB"}, "7107": {"op": "DUP3", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint", "statement": 102}, "7108": {"op": "AND", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7109": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7111": {"op": "SWAP1", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7112": {"op": "DUP2", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7113": {"op": "MSTORE", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7114": {"op": "PUSH1", "value": "0x3", "path": "0", "offset": [36901, 36910], "fn": "ERC721._mint"}, "7116": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7118": {"op": "MSTORE", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7119": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7121": {"op": "DUP2", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7122": {"op": "KECCAK256", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7123": {"op": "DUP1", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7124": {"op": "SLOAD", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7125": {"op": "PUSH1", "value": "0x1", "path": "0", "offset": [36918, 36919], "fn": "ERC721._mint"}, "7127": {"op": "SWAP3", "path": "0", "offset": [36918, 36919], "fn": "ERC721._mint"}, "7128": {"op": "SWAP1", "path": "0", "offset": [36901, 36914], "fn": "ERC721._mint"}, "7129": {"op": "PUSH2", "value": "0x1BE3", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7132": {"op": "SWAP1", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7133": {"op": "DUP5", "path": "0", "offset": [36918, 36919], "fn": "ERC721._mint"}, "7134": {"op": "SWAP1", "path": "0", "offset": [36918, 36919], "fn": "ERC721._mint"}, "7135": {"op": "PUSH2", "value": "0x2153", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7138": {"op": "JUMP", "jump": "i", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7139": {"op": "JUMPDEST", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7140": {"op": "SWAP1", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7141": {"op": "SWAP2", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7142": {"op": "SSTORE", "path": "0", "offset": [36901, 36919], "fn": "ERC721._mint"}, "7143": {"op": "POP"}, "7144": {"op": "POP"}, "7145": {"op": "PUSH1", "value": "0x0", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint", "statement": 103}, "7147": {"op": "DUP2", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7148": {"op": "DUP2", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7149": {"op": "MSTORE", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7150": {"op": "PUSH1", "value": "0x2", "path": "0", "offset": [36929, 36936], "fn": "ERC721._mint"}, "7152": {"op": "PUSH1", "value": "0x20", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7154": {"op": "MSTORE", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7155": {"op": "PUSH1", "value": "0x40", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7157": {"op": "DUP1", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7158": {"op": "DUP3", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7159": {"op": "KECCAK256", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7160": {"op": "DUP1", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7161": {"op": "SLOAD", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7162": {"op": "PUSH1", "value": "0x1"}, "7164": {"op": "PUSH1", "value": "0x1"}, "7166": {"op": "PUSH1", "value": "0xA0"}, "7168": {"op": "SHL"}, "7169": {"op": "SUB"}, "7170": {"op": "NOT"}, "7171": {"op": "AND", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7172": {"op": "PUSH1", "value": "0x1"}, "7174": {"op": "PUSH1", "value": "0x1"}, "7176": {"op": "PUSH1", "value": "0xA0"}, "7178": {"op": "SHL"}, "7179": {"op": "SUB"}, "7180": {"op": "DUP7", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7181": {"op": "AND", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7182": {"op": "SWAP1", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7183": {"op": "DUP2", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7184": {"op": "OR", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7185": {"op": "SWAP1", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7186": {"op": "SWAP2", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7187": {"op": "SSTORE", "path": "0", "offset": [36929, 36950], "fn": "ERC721._mint"}, "7188": {"op": "SWAP1", "path": "0", "offset": [36966, 36999], "fn": "ERC721._mint", "statement": 104}, "7189": {"op": "MLOAD", "path": "0", "offset": [36966, 36999], "fn": "ERC721._mint"}, "7190": {"op": "DUP4", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7191": {"op": "SWAP3", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7192": {"op": "SWAP1", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7193": {"op": "PUSH32", "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF", "path": "0", "offset": [36966, 36999], "fn": "ERC721._mint"}, "7226": {"op": "SWAP1", "path": "0", "offset": [36966, 36999], "fn": "ERC721._mint"}, "7227": {"op": "DUP3", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7228": {"op": "SWAP1", "path": "0", "offset": [36929, 36945], "fn": "ERC721._mint"}, "7229": {"op": "LOG4", "path": "0", "offset": [36966, 36999], "fn": "ERC721._mint"}, "7230": {"op": "POP", "path": "0", "offset": [36634, 37006], "fn": "ERC721._mint"}, "7231": {"op": "POP", "path": "0", "offset": [36634, 37006], "fn": "ERC721._mint"}, "7232": {"op": "JUMP", "jump": "o", "path": "0", "offset": [36634, 37006], "fn": "ERC721._mint"}, "7233": {"op": "JUMPDEST"}, "7234": {"op": "DUP3"}, "7235": {"op": "DUP1"}, "7236": {"op": "SLOAD"}, "7237": {"op": "PUSH2", "value": "0x1C4D"}, "7240": {"op": "SWAP1"}, "7241": {"op": "PUSH2", "value": "0x204B"}, "7244": {"op": "JUMP", "jump": "i"}, "7245": {"op": "JUMPDEST"}, "7246": {"op": "SWAP1"}, "7247": {"op": "PUSH1", "value": "0x0"}, "7249": {"op": "MSTORE"}, "7250": {"op": "PUSH1", "value": "0x20"}, "7252": {"op": "PUSH1", "value": "0x0"}, "7254": {"op": "KECCAK256"}, "7255": {"op": "SWAP1"}, "7256": {"op": "PUSH1", "value": "0x1F"}, "7258": {"op": "ADD"}, "7259": {"op": "PUSH1", "value": "0x20"}, "7261": {"op": "SWAP1"}, "7262": {"op": "DIV"}, "7263": {"op": "DUP2"}, "7264": {"op": "ADD"}, "7265": {"op": "SWAP3"}, "7266": {"op": "DUP3"}, "7267": {"op": "PUSH2", "value": "0x1C6F"}, "7270": {"op": "JUMPI"}, "7271": {"op": "PUSH1", "value": "0x0"}, "7273": {"op": "DUP6"}, "7274": {"op": "SSTORE"}, "7275": {"op": "PUSH2", "value": "0x1CB5"}, "7278": {"op": "JUMP"}, "7279": {"op": "JUMPDEST"}, "7280": {"op": "DUP3"}, "7281": {"op": "PUSH1", "value": "0x1F"}, "7283": {"op": "LT"}, "7284": {"op": "PUSH2", "value": "0x1C88"}, "7287": {"op": "JUMPI"}, "7288": {"op": "DUP1"}, "7289": {"op": "MLOAD"}, "7290": {"op": "PUSH1", "value": "0xFF"}, "7292": {"op": "NOT"}, "7293": {"op": "AND"}, "7294": {"op": "DUP4"}, "7295": {"op": "DUP1"}, "7296": {"op": "ADD"}, "7297": {"op": "OR"}, "7298": {"op": "DUP6"}, "7299": {"op": "SSTORE"}, "7300": {"op": "PUSH2", "value": "0x1CB5"}, "7303": {"op": "JUMP"}, "7304": {"op": "JUMPDEST"}, "7305": {"op": "DUP3"}, "7306": {"op": "DUP1"}, "7307": {"op": "ADD"}, "7308": {"op": "PUSH1", "value": "0x1"}, "7310": {"op": "ADD"}, "7311": {"op": "DUP6"}, "7312": {"op": "SSTORE"}, "7313": {"op": "DUP3"}, "7314": {"op": "ISZERO"}, "7315": {"op": "PUSH2", "value": "0x1CB5"}, "7318": {"op": "JUMPI"}, "7319": {"op": "SWAP2"}, "7320": {"op": "DUP3"}, "7321": {"op": "ADD"}, "7322": {"op": "JUMPDEST"}, "7323": {"op": "DUP3"}, "7324": {"op": "DUP2"}, "7325": {"op": "GT"}, "7326": {"op": "ISZERO"}, "7327": {"op": "PUSH2", "value": "0x1CB5"}, "7330": {"op": "JUMPI"}, "7331": {"op": "DUP3"}, "7332": {"op": "MLOAD"}, "7333": {"op": "DUP3"}, "7334": {"op": "SSTORE"}, "7335": {"op": "SWAP2"}, "7336": {"op": "PUSH1", "value": "0x20"}, "7338": {"op": "ADD"}, "7339": {"op": "SWAP2"}, "7340": {"op": "SWAP1"}, "7341": {"op": "PUSH1", "value": "0x1"}, "7343": {"op": "ADD"}, "7344": {"op": "SWAP1"}, "7345": {"op": "PUSH2", "value": "0x1C9A"}, "7348": {"op": "JUMP"}, "7349": {"op": "JUMPDEST"}, "7350": {"op": "POP"}, "7351": {"op": "PUSH2", "value": "0x1CC1"}, "7354": {"op": "SWAP3"}, "7355": {"op": "SWAP2"}, "7356": {"op": "POP"}, "7357": {"op": "PUSH2", "value": "0x1CC5"}, "7360": {"op": "JUMP", "jump": "i"}, "7361": {"op": "JUMPDEST"}, "7362": {"op": "POP"}, "7363": {"op": "SWAP1"}, "7364": {"op": "JUMP", "jump": "o"}, "7365": {"op": "JUMPDEST"}, "7366": {"op": "JUMPDEST"}, "7367": {"op": "DUP1"}, "7368": {"op": "DUP3"}, "7369": {"op": "GT"}, "7370": {"op": "ISZERO"}, "7371": {"op": "PUSH2", "value": "0x1CC1"}, "7374": {"op": "JUMPI"}, "7375": {"op": "PUSH1", "value": "0x0"}, "7377": {"op": "DUP2"}, "7378": {"op": "SSTORE"}, "7379": {"op": "PUSH1", "value": "0x1"}, "7381": {"op": "ADD"}, "7382": {"op": "PUSH2", "value": "0x1CC6"}, "7385": {"op": "JUMP"}, "7386": {"op": "JUMPDEST"}, "7387": {"op": "PUSH1", "value": "0x1"}, "7389": {"op": "PUSH1", "value": "0x1"}, "7391": {"op": "PUSH1", "value": "0xE0"}, "7393": {"op": "SHL"}, "7394": {"op": "SUB"}, "7395": {"op": "NOT"}, "7396": {"op": "DUP2"}, "7397": {"op": "AND"}, "7398": {"op": "DUP2"}, "7399": {"op": "EQ"}, "7400": {"op": "PUSH2", "value": "0xA72"}, "7403": {"op": "JUMPI"}, "7404": {"op": "PUSH1", "value": "0x0"}, "7406": {"op": "DUP1"}, "7407": {"op": "REVERT"}, "7408": {"op": "JUMPDEST"}, "7409": {"op": "PUSH1", "value": "0x0"}, "7411": {"op": "PUSH1", "value": "0x20"}, "7413": {"op": "DUP3"}, "7414": {"op": "DUP5"}, "7415": {"op": "SUB"}, "7416": {"op": "SLT"}, "7417": {"op": "ISZERO"}, "7418": {"op": "PUSH2", "value": "0x1D02"}, "7421": {"op": "JUMPI"}, "7422": {"op": "PUSH1", "value": "0x0"}, "7424": {"op": "DUP1"}, "7425": {"op": "REVERT"}, "7426": {"op": "JUMPDEST"}, "7427": {"op": "DUP2"}, "7428": {"op": "CALLDATALOAD"}, "7429": {"op": "PUSH2", "value": "0x1155"}, "7432": {"op": "DUP2"}, "7433": {"op": "PUSH2", "value": "0x1CDA"}, "7436": {"op": "JUMP", "jump": "i"}, "7437": {"op": "JUMPDEST"}, "7438": {"op": "PUSH1", "value": "0x0"}, "7440": {"op": "JUMPDEST"}, "7441": {"op": "DUP4"}, "7442": {"op": "DUP2"}, "7443": {"op": "LT"}, "7444": {"op": "ISZERO"}, "7445": {"op": "PUSH2", "value": "0x1D28"}, "7448": {"op": "JUMPI"}, "7449": {"op": "DUP2"}, "7450": {"op": "DUP2"}, "7451": {"op": "ADD"}, "7452": {"op": "MLOAD"}, "7453": {"op": "DUP4"}, "7454": {"op": "DUP3"}, "7455": {"op": "ADD"}, "7456": {"op": "MSTORE"}, "7457": {"op": "PUSH1", "value": "0x20"}, "7459": {"op": "ADD"}, "7460": {"op": "PUSH2", "value": "0x1D10"}, "7463": {"op": "JUMP"}, "7464": {"op": "JUMPDEST"}, "7465": {"op": "DUP4"}, "7466": {"op": "DUP2"}, "7467": {"op": "GT"}, "7468": {"op": "ISZERO"}, "7469": {"op": "PUSH2", "value": "0xFCF"}, "7472": {"op": "JUMPI"}, "7473": {"op": "POP"}, "7474": {"op": "POP"}, "7475": {"op": "PUSH1", "value": "0x0"}, "7477": {"op": "SWAP2"}, "7478": {"op": "ADD"}, "7479": {"op": "MSTORE"}, "7480": {"op": "JUMP", "jump": "o"}, "7481": {"op": "JUMPDEST"}, "7482": {"op": "PUSH1", "value": "0x0"}, "7484": {"op": "DUP2"}, "7485": {"op": "MLOAD"}, "7486": {"op": "DUP1"}, "7487": {"op": "DUP5"}, "7488": {"op": "MSTORE"}, "7489": {"op": "PUSH2", "value": "0x1D51"}, "7492": {"op": "DUP2"}, "7493": {"op": "PUSH1", "value": "0x20"}, "7495": {"op": "DUP7"}, "7496": {"op": "ADD"}, "7497": {"op": "PUSH1", "value": "0x20"}, "7499": {"op": "DUP7"}, "7500": {"op": "ADD"}, "7501": {"op": "PUSH2", "value": "0x1D0D"}, "7504": {"op": "JUMP", "jump": "i"}, "7505": {"op": "JUMPDEST"}, "7506": {"op": "PUSH1", "value": "0x1F"}, "7508": {"op": "ADD"}, "7509": {"op": "PUSH1", "value": "0x1F"}, "7511": {"op": "NOT"}, "7512": {"op": "AND"}, "7513": {"op": "SWAP3"}, "7514": {"op": "SWAP1"}, "7515": {"op": "SWAP3"}, "7516": {"op": "ADD"}, "7517": {"op": "PUSH1", "value": "0x20"}, "7519": {"op": "ADD"}, "7520": {"op": "SWAP3"}, "7521": {"op": "SWAP2"}, "7522": {"op": "POP"}, "7523": {"op": "POP"}, "7524": {"op": "JUMP", "jump": "o"}, "7525": {"op": "JUMPDEST"}, "7526": {"op": "PUSH1", "value": "0x20"}, "7528": {"op": "DUP2"}, "7529": {"op": "MSTORE"}, "7530": {"op": "PUSH1", "value": "0x0"}, "7532": {"op": "PUSH2", "value": "0x1155"}, "7535": {"op": "PUSH1", "value": "0x20"}, "7537": {"op": "DUP4"}, "7538": {"op": "ADD"}, "7539": {"op": "DUP5"}, "7540": {"op": "PUSH2", "value": "0x1D39"}, "7543": {"op": "JUMP", "jump": "i"}, "7544": {"op": "JUMPDEST"}, "7545": {"op": "PUSH1", "value": "0x0"}, "7547": {"op": "PUSH1", "value": "0x20"}, "7549": {"op": "DUP3"}, "7550": {"op": "DUP5"}, "7551": {"op": "SUB"}, "7552": {"op": "SLT"}, "7553": {"op": "ISZERO"}, "7554": {"op": "PUSH2", "value": "0x1D8A"}, "7557": {"op": "JUMPI"}, "7558": {"op": "PUSH1", "value": "0x0"}, "7560": {"op": "DUP1"}, "7561": {"op": "REVERT"}, "7562": {"op": "JUMPDEST"}, "7563": {"op": "POP"}, "7564": {"op": "CALLDATALOAD"}, "7565": {"op": "SWAP2"}, "7566": {"op": "SWAP1"}, "7567": {"op": "POP"}, "7568": {"op": "JUMP", "jump": "o"}, "7569": {"op": "JUMPDEST"}, "7570": {"op": "DUP1"}, "7571": {"op": "CALLDATALOAD"}, "7572": {"op": "PUSH1", "value": "0x1"}, "7574": {"op": "PUSH1", "value": "0x1"}, "7576": {"op": "PUSH1", "value": "0xA0"}, "7578": {"op": "SHL"}, "7579": {"op": "SUB"}, "7580": {"op": "DUP2"}, "7581": {"op": "AND"}, "7582": {"op": "DUP2"}, "7583": {"op": "EQ"}, "7584": {"op": "PUSH2", "value": "0x1DA8"}, "7587": {"op": "JUMPI"}, "7588": {"op": "PUSH1", "value": "0x0"}, "7590": {"op": "DUP1"}, "7591": {"op": "REVERT"}, "7592": {"op": "JUMPDEST"}, "7593": {"op": "SWAP2"}, "7594": {"op": "SWAP1"}, "7595": {"op": "POP"}, "7596": {"op": "JUMP", "jump": "o"}, "7597": {"op": "JUMPDEST"}, "7598": {"op": "PUSH1", "value": "0x0"}, "7600": {"op": "DUP1"}, "7601": {"op": "PUSH1", "value": "0x40"}, "7603": {"op": "DUP4"}, "7604": {"op": "DUP6"}, "7605": {"op": "SUB"}, "7606": {"op": "SLT"}, "7607": {"op": "ISZERO"}, "7608": {"op": "PUSH2", "value": "0x1DC0"}, "7611": {"op": "JUMPI"}, "7612": {"op": "PUSH1", "value": "0x0"}, "7614": {"op": "DUP1"}, "7615": {"op": "REVERT"}, "7616": {"op": "JUMPDEST"}, "7617": {"op": "PUSH2", "value": "0x1DC9"}, "7620": {"op": "DUP4"}, "7621": {"op": "PUSH2", "value": "0x1D91"}, "7624": {"op": "JUMP", "jump": "i"}, "7625": {"op": "JUMPDEST"}, "7626": {"op": "SWAP5"}, "7627": {"op": "PUSH1", "value": "0x20"}, "7629": {"op": "SWAP4"}, "7630": {"op": "SWAP1"}, "7631": {"op": "SWAP4"}, "7632": {"op": "ADD"}, "7633": {"op": "CALLDATALOAD"}, "7634": {"op": "SWAP4"}, "7635": {"op": "POP"}, "7636": {"op": "POP"}, "7637": {"op": "POP"}, "7638": {"op": "JUMP", "jump": "o"}, "7639": {"op": "JUMPDEST"}, "7640": {"op": "PUSH1", "value": "0x0"}, "7642": {"op": "DUP1"}, "7643": {"op": "PUSH1", "value": "0x0"}, "7645": {"op": "PUSH1", "value": "0x60"}, "7647": {"op": "DUP5"}, "7648": {"op": "DUP7"}, "7649": {"op": "SUB"}, "7650": {"op": "SLT"}, "7651": {"op": "ISZERO"}, "7652": {"op": "PUSH2", "value": "0x1DEC"}, "7655": {"op": "JUMPI"}, "7656": {"op": "PUSH1", "value": "0x0"}, "7658": {"op": "DUP1"}, "7659": {"op": "REVERT"}, "7660": {"op": "JUMPDEST"}, "7661": {"op": "PUSH2", "value": "0x1DF5"}, "7664": {"op": "DUP5"}, "7665": {"op": "PUSH2", "value": "0x1D91"}, "7668": {"op": "JUMP", "jump": "i"}, "7669": {"op": "JUMPDEST"}, "7670": {"op": "SWAP3"}, "7671": {"op": "POP"}, "7672": {"op": "PUSH2", "value": "0x1E03"}, "7675": {"op": "PUSH1", "value": "0x20"}, "7677": {"op": "DUP6"}, "7678": {"op": "ADD"}, "7679": {"op": "PUSH2", "value": "0x1D91"}, "7682": {"op": "JUMP", "jump": "i"}, "7683": {"op": "JUMPDEST"}, "7684": {"op": "SWAP2"}, "7685": {"op": "POP"}, "7686": {"op": "PUSH1", "value": "0x40"}, "7688": {"op": "DUP5"}, "7689": {"op": "ADD"}, "7690": {"op": "CALLDATALOAD"}, "7691": {"op": "SWAP1"}, "7692": {"op": "POP"}, "7693": {"op": "SWAP3"}, "7694": {"op": "POP"}, "7695": {"op": "SWAP3"}, "7696": {"op": "POP"}, "7697": {"op": "SWAP3"}, "7698": {"op": "JUMP", "jump": "o"}, "7699": {"op": "JUMPDEST"}, "7700": {"op": "PUSH1", "value": "0x0"}, "7702": {"op": "PUSH1", "value": "0x20"}, "7704": {"op": "DUP3"}, "7705": {"op": "DUP5"}, "7706": {"op": "SUB"}, "7707": {"op": "SLT"}, "7708": {"op": "ISZERO"}, "7709": {"op": "PUSH2", "value": "0x1E25"}, "7712": {"op": "JUMPI"}, "7713": {"op": "PUSH1", "value": "0x0"}, "7715": {"op": "DUP1"}, "7716": {"op": "REVERT"}, "7717": {"op": "JUMPDEST"}, "7718": {"op": "PUSH2", "value": "0x1155"}, "7721": {"op": "DUP3"}, "7722": {"op": "PUSH2", "value": "0x1D91"}, "7725": {"op": "JUMP", "jump": "i"}, "7726": {"op": "JUMPDEST"}, "7727": {"op": "PUSH1", "value": "0x20"}, "7729": {"op": "DUP1"}, "7730": {"op": "DUP3"}, "7731": {"op": "MSTORE"}, "7732": {"op": "DUP3"}, "7733": {"op": "MLOAD"}, "7734": {"op": "DUP3"}, "7735": {"op": "DUP3"}, "7736": {"op": "ADD"}, "7737": {"op": "DUP2"}, "7738": {"op": "SWAP1"}, "7739": {"op": "MSTORE"}, "7740": {"op": "PUSH1", "value": "0x0"}, "7742": {"op": "SWAP2"}, "7743": {"op": "SWAP1"}, "7744": {"op": "DUP5"}, "7745": {"op": "DUP3"}, "7746": {"op": "ADD"}, "7747": {"op": "SWAP1"}, "7748": {"op": "PUSH1", "value": "0x40"}, "7750": {"op": "DUP6"}, "7751": {"op": "ADD"}, "7752": {"op": "SWAP1"}, "7753": {"op": "DUP5"}, "7754": {"op": "JUMPDEST"}, "7755": {"op": "DUP2"}, "7756": {"op": "DUP2"}, "7757": {"op": "LT"}, "7758": {"op": "ISZERO"}, "7759": {"op": "PUSH2", "value": "0x1E66"}, "7762": {"op": "JUMPI"}, "7763": {"op": "DUP4"}, "7764": {"op": "MLOAD"}, "7765": {"op": "DUP4"}, "7766": {"op": "MSTORE"}, "7767": {"op": "SWAP3"}, "7768": {"op": "DUP5"}, "7769": {"op": "ADD"}, "7770": {"op": "SWAP3"}, "7771": {"op": "SWAP2"}, "7772": {"op": "DUP5"}, "7773": {"op": "ADD"}, "7774": {"op": "SWAP2"}, "7775": {"op": "PUSH1", "value": "0x1"}, "7777": {"op": "ADD"}, "7778": {"op": "PUSH2", "value": "0x1E4A"}, "7781": {"op": "JUMP"}, "7782": {"op": "JUMPDEST"}, "7783": {"op": "POP"}, "7784": {"op": "SWAP1"}, "7785": {"op": "SWAP7"}, "7786": {"op": "SWAP6"}, "7787": {"op": "POP"}, "7788": {"op": "POP"}, "7789": {"op": "POP"}, "7790": {"op": "POP"}, "7791": {"op": "POP"}, "7792": {"op": "POP"}, "7793": {"op": "JUMP", "jump": "o"}, "7794": {"op": "JUMPDEST"}, "7795": {"op": "DUP1"}, "7796": {"op": "CALLDATALOAD"}, "7797": {"op": "DUP1"}, "7798": {"op": "ISZERO"}, "7799": {"op": "ISZERO"}, "7800": {"op": "DUP2"}, "7801": {"op": "EQ"}, "7802": {"op": "PUSH2", "value": "0x1DA8"}, "7805": {"op": "JUMPI"}, "7806": {"op": "PUSH1", "value": "0x0"}, "7808": {"op": "DUP1"}, "7809": {"op": "REVERT"}, "7810": {"op": "JUMPDEST"}, "7811": {"op": "PUSH1", "value": "0x0"}, "7813": {"op": "PUSH1", "value": "0x20"}, "7815": {"op": "DUP3"}, "7816": {"op": "DUP5"}, "7817": {"op": "SUB"}, "7818": {"op": "SLT"}, "7819": {"op": "ISZERO"}, "7820": {"op": "PUSH2", "value": "0x1E94"}, "7823": {"op": "JUMPI"}, "7824": {"op": "PUSH1", "value": "0x0"}, "7826": {"op": "DUP1"}, "7827": {"op": "REVERT"}, "7828": {"op": "JUMPDEST"}, "7829": {"op": "PUSH2", "value": "0x1155"}, "7832": {"op": "DUP3"}, "7833": {"op": "PUSH2", "value": "0x1E72"}, "7836": {"op": "JUMP", "jump": "i"}, "7837": {"op": "JUMPDEST"}, "7838": {"op": "PUSH4", "value": "0x4E487B71"}, "7843": {"op": "PUSH1", "value": "0xE0"}, "7845": {"op": "SHL"}, "7846": {"op": "PUSH1", "value": "0x0"}, "7848": {"op": "MSTORE"}, "7849": {"op": "PUSH1", "value": "0x41"}, "7851": {"op": "PUSH1", "value": "0x4"}, "7853": {"op": "MSTORE"}, "7854": {"op": "PUSH1", "value": "0x24"}, "7856": {"op": "PUSH1", "value": "0x0"}, "7858": {"op": "REVERT"}, "7859": {"op": "JUMPDEST"}, "7860": {"op": "PUSH1", "value": "0x0"}, "7862": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "7871": {"op": "DUP1"}, "7872": {"op": "DUP5"}, "7873": {"op": "GT"}, "7874": {"op": "ISZERO"}, "7875": {"op": "PUSH2", "value": "0x1ECE"}, "7878": {"op": "JUMPI"}, "7879": {"op": "PUSH2", "value": "0x1ECE"}, "7882": {"op": "PUSH2", "value": "0x1E9D"}, "7885": {"op": "JUMP", "jump": "i"}, "7886": {"op": "JUMPDEST"}, "7887": {"op": "PUSH1", "value": "0x40"}, "7889": {"op": "MLOAD"}, "7890": {"op": "PUSH1", "value": "0x1F"}, "7892": {"op": "DUP6"}, "7893": {"op": "ADD"}, "7894": {"op": "PUSH1", "value": "0x1F"}, "7896": {"op": "NOT"}, "7897": {"op": "SWAP1"}, "7898": {"op": "DUP2"}, "7899": {"op": "AND"}, "7900": {"op": "PUSH1", "value": "0x3F"}, "7902": {"op": "ADD"}, "7903": {"op": "AND"}, "7904": {"op": "DUP2"}, "7905": {"op": "ADD"}, "7906": {"op": "SWAP1"}, "7907": {"op": "DUP3"}, "7908": {"op": "DUP3"}, "7909": {"op": "GT"}, "7910": {"op": "DUP2"}, "7911": {"op": "DUP4"}, "7912": {"op": "LT"}, "7913": {"op": "OR"}, "7914": {"op": "ISZERO"}, "7915": {"op": "PUSH2", "value": "0x1EF6"}, "7918": {"op": "JUMPI"}, "7919": {"op": "PUSH2", "value": "0x1EF6"}, "7922": {"op": "PUSH2", "value": "0x1E9D"}, "7925": {"op": "JUMP", "jump": "i"}, "7926": {"op": "JUMPDEST"}, "7927": {"op": "DUP2"}, "7928": {"op": "PUSH1", "value": "0x40"}, "7930": {"op": "MSTORE"}, "7931": {"op": "DUP1"}, "7932": {"op": "SWAP4"}, "7933": {"op": "POP"}, "7934": {"op": "DUP6"}, "7935": {"op": "DUP2"}, "7936": {"op": "MSTORE"}, "7937": {"op": "DUP7"}, "7938": {"op": "DUP7"}, "7939": {"op": "DUP7"}, "7940": {"op": "ADD"}, "7941": {"op": "GT"}, "7942": {"op": "ISZERO"}, "7943": {"op": "PUSH2", "value": "0x1F0F"}, "7946": {"op": "JUMPI"}, "7947": {"op": "PUSH1", "value": "0x0"}, "7949": {"op": "DUP1"}, "7950": {"op": "REVERT"}, "7951": {"op": "JUMPDEST"}, "7952": {"op": "DUP6"}, "7953": {"op": "DUP6"}, "7954": {"op": "PUSH1", "value": "0x20"}, "7956": {"op": "DUP4"}, "7957": {"op": "ADD"}, "7958": {"op": "CALLDATACOPY"}, "7959": {"op": "PUSH1", "value": "0x0"}, "7961": {"op": "PUSH1", "value": "0x20"}, "7963": {"op": "DUP8"}, "7964": {"op": "DUP4"}, "7965": {"op": "ADD"}, "7966": {"op": "ADD"}, "7967": {"op": "MSTORE"}, "7968": {"op": "POP"}, "7969": {"op": "POP"}, "7970": {"op": "POP"}, "7971": {"op": "SWAP4"}, "7972": {"op": "SWAP3"}, "7973": {"op": "POP"}, "7974": {"op": "POP"}, "7975": {"op": "POP"}, "7976": {"op": "JUMP", "jump": "o"}, "7977": {"op": "JUMPDEST"}, "7978": {"op": "PUSH1", "value": "0x0"}, "7980": {"op": "PUSH1", "value": "0x20"}, "7982": {"op": "DUP3"}, "7983": {"op": "DUP5"}, "7984": {"op": "SUB"}, "7985": {"op": "SLT"}, "7986": {"op": "ISZERO"}, "7987": {"op": "PUSH2", "value": "0x1F3B"}, "7990": {"op": "JUMPI"}, "7991": {"op": "PUSH1", "value": "0x0"}, "7993": {"op": "DUP1"}, "7994": {"op": "REVERT"}, "7995": {"op": "JUMPDEST"}, "7996": {"op": "DUP2"}, "7997": {"op": "CALLDATALOAD"}, "7998": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "8007": {"op": "DUP2"}, "8008": {"op": "GT"}, "8009": {"op": "ISZERO"}, "8010": {"op": "PUSH2", "value": "0x1F52"}, "8013": {"op": "JUMPI"}, "8014": {"op": "PUSH1", "value": "0x0"}, "8016": {"op": "DUP1"}, "8017": {"op": "REVERT"}, "8018": {"op": "JUMPDEST"}, "8019": {"op": "DUP3"}, "8020": {"op": "ADD"}, "8021": {"op": "PUSH1", "value": "0x1F"}, "8023": {"op": "DUP2"}, "8024": {"op": "ADD"}, "8025": {"op": "DUP5"}, "8026": {"op": "SGT"}, "8027": {"op": "PUSH2", "value": "0x1F63"}, "8030": {"op": "JUMPI"}, "8031": {"op": "PUSH1", "value": "0x0"}, "8033": {"op": "DUP1"}, "8034": {"op": "REVERT"}, "8035": {"op": "JUMPDEST"}, "8036": {"op": "PUSH2", "value": "0x141B"}, "8039": {"op": "DUP5"}, "8040": {"op": "DUP3"}, "8041": {"op": "CALLDATALOAD"}, "8042": {"op": "PUSH1", "value": "0x20"}, "8044": {"op": "DUP5"}, "8045": {"op": "ADD"}, "8046": {"op": "PUSH2", "value": "0x1EB3"}, "8049": {"op": "JUMP", "jump": "i"}, "8050": {"op": "JUMPDEST"}, "8051": {"op": "PUSH1", "value": "0x0"}, "8053": {"op": "DUP1"}, "8054": {"op": "PUSH1", "value": "0x40"}, "8056": {"op": "DUP4"}, "8057": {"op": "DUP6"}, "8058": {"op": "SUB"}, "8059": {"op": "SLT"}, "8060": {"op": "ISZERO"}, "8061": {"op": "PUSH2", "value": "0x1F85"}, "8064": {"op": "JUMPI"}, "8065": {"op": "PUSH1", "value": "0x0"}, "8067": {"op": "DUP1"}, "8068": {"op": "REVERT"}, "8069": {"op": "JUMPDEST"}, "8070": {"op": "PUSH2", "value": "0x1F8E"}, "8073": {"op": "DUP4"}, "8074": {"op": "PUSH2", "value": "0x1D91"}, "8077": {"op": "JUMP", "jump": "i"}, "8078": {"op": "JUMPDEST"}, "8079": {"op": "SWAP2"}, "8080": {"op": "POP"}, "8081": {"op": "PUSH2", "value": "0x1F9C"}, "8084": {"op": "PUSH1", "value": "0x20"}, "8086": {"op": "DUP5"}, "8087": {"op": "ADD"}, "8088": {"op": "PUSH2", "value": "0x1E72"}, "8091": {"op": "JUMP", "jump": "i"}, "8092": {"op": "JUMPDEST"}, "8093": {"op": "SWAP1"}, "8094": {"op": "POP"}, "8095": {"op": "SWAP3"}, "8096": {"op": "POP"}, "8097": {"op": "SWAP3"}, "8098": {"op": "SWAP1"}, "8099": {"op": "POP"}, "8100": {"op": "JUMP", "jump": "o"}, "8101": {"op": "JUMPDEST"}, "8102": {"op": "PUSH1", "value": "0x0"}, "8104": {"op": "DUP1"}, "8105": {"op": "PUSH1", "value": "0x0"}, "8107": {"op": "DUP1"}, "8108": {"op": "PUSH1", "value": "0x80"}, "8110": {"op": "DUP6"}, "8111": {"op": "DUP8"}, "8112": {"op": "SUB"}, "8113": {"op": "SLT"}, "8114": {"op": "ISZERO"}, "8115": {"op": "PUSH2", "value": "0x1FBB"}, "8118": {"op": "JUMPI"}, "8119": {"op": "PUSH1", "value": "0x0"}, "8121": {"op": "DUP1"}, "8122": {"op": "REVERT"}, "8123": {"op": "JUMPDEST"}, "8124": {"op": "PUSH2", "value": "0x1FC4"}, "8127": {"op": "DUP6"}, "8128": {"op": "PUSH2", "value": "0x1D91"}, "8131": {"op": "JUMP", "jump": "i"}, "8132": {"op": "JUMPDEST"}, "8133": {"op": "SWAP4"}, "8134": {"op": "POP"}, "8135": {"op": "PUSH2", "value": "0x1FD2"}, "8138": {"op": "PUSH1", "value": "0x20"}, "8140": {"op": "DUP7"}, "8141": {"op": "ADD"}, "8142": {"op": "PUSH2", "value": "0x1D91"}, "8145": {"op": "JUMP", "jump": "i"}, "8146": {"op": "JUMPDEST"}, "8147": {"op": "SWAP3"}, "8148": {"op": "POP"}, "8149": {"op": "PUSH1", "value": "0x40"}, "8151": {"op": "DUP6"}, "8152": {"op": "ADD"}, "8153": {"op": "CALLDATALOAD"}, "8154": {"op": "SWAP2"}, "8155": {"op": "POP"}, "8156": {"op": "PUSH1", "value": "0x60"}, "8158": {"op": "DUP6"}, "8159": {"op": "ADD"}, "8160": {"op": "CALLDATALOAD"}, "8161": {"op": "PUSH8", "value": "0xFFFFFFFFFFFFFFFF"}, "8170": {"op": "DUP2"}, "8171": {"op": "GT"}, "8172": {"op": "ISZERO"}, "8173": {"op": "PUSH2", "value": "0x1FF5"}, "8176": {"op": "JUMPI"}, "8177": {"op": "PUSH1", "value": "0x0"}, "8179": {"op": "DUP1"}, "8180": {"op": "REVERT"}, "8181": {"op": "JUMPDEST"}, "8182": {"op": "DUP6"}, "8183": {"op": "ADD"}, "8184": {"op": "PUSH1", "value": "0x1F"}, "8186": {"op": "DUP2"}, "8187": {"op": "ADD"}, "8188": {"op": "DUP8"}, "8189": {"op": "SGT"}, "8190": {"op": "PUSH2", "value": "0x2006"}, "8193": {"op": "JUMPI"}, "8194": {"op": "PUSH1", "value": "0x0"}, "8196": {"op": "DUP1"}, "8197": {"op": "REVERT"}, "8198": {"op": "JUMPDEST"}, "8199": {"op": "PUSH2", "value": "0x2015"}, "8202": {"op": "DUP8"}, "8203": {"op": "DUP3"}, "8204": {"op": "CALLDATALOAD"}, "8205": {"op": "PUSH1", "value": "0x20"}, "8207": {"op": "DUP5"}, "8208": {"op": "ADD"}, "8209": {"op": "PUSH2", "value": "0x1EB3"}, "8212": {"op": "JUMP", "jump": "i"}, "8213": {"op": "JUMPDEST"}, "8214": {"op": "SWAP2"}, "8215": {"op": "POP"}, "8216": {"op": "POP"}, "8217": {"op": "SWAP3"}, "8218": {"op": "SWAP6"}, "8219": {"op": "SWAP2"}, "8220": {"op": "SWAP5"}, "8221": {"op": "POP"}, "8222": {"op": "SWAP3"}, "8223": {"op": "POP"}, "8224": {"op": "JUMP", "jump": "o"}, "8225": {"op": "JUMPDEST"}, "8226": {"op": "PUSH1", "value": "0x0"}, "8228": {"op": "DUP1"}, "8229": {"op": "PUSH1", "value": "0x40"}, "8231": {"op": "DUP4"}, "8232": {"op": "DUP6"}, "8233": {"op": "SUB"}, "8234": {"op": "SLT"}, "8235": {"op": "ISZERO"}, "8236": {"op": "PUSH2", "value": "0x2034"}, "8239": {"op": "JUMPI"}, "8240": {"op": "PUSH1", "value": "0x0"}, "8242": {"op": "DUP1"}, "8243": {"op": "REVERT"}, "8244": {"op": "JUMPDEST"}, "8245": {"op": "PUSH2", "value": "0x203D"}, "8248": {"op": "DUP4"}, "8249": {"op": "PUSH2", "value": "0x1D91"}, "8252": {"op": "JUMP", "jump": "i"}, "8253": {"op": "JUMPDEST"}, "8254": {"op": "SWAP2"}, "8255": {"op": "POP"}, "8256": {"op": "PUSH2", "value": "0x1F9C"}, "8259": {"op": "PUSH1", "value": "0x20"}, "8261": {"op": "DUP5"}, "8262": {"op": "ADD"}, "8263": {"op": "PUSH2", "value": "0x1D91"}, "8266": {"op": "JUMP", "jump": "i"}, "8267": {"op": "JUMPDEST"}, "8268": {"op": "PUSH1", "value": "0x1"}, "8270": {"op": "DUP2"}, "8271": {"op": "DUP2"}, "8272": {"op": "SHR"}, "8273": {"op": "SWAP1"}, "8274": {"op": "DUP3"}, "8275": {"op": "AND"}, "8276": {"op": "DUP1"}, "8277": {"op": "PUSH2", "value": "0x205F"}, "8280": {"op": "JUMPI"}, "8281": {"op": "PUSH1", "value": "0x7F"}, "8283": {"op": "DUP3"}, "8284": {"op": "AND"}, "8285": {"op": "SWAP2"}, "8286": {"op": "POP"}, "8287": {"op": "JUMPDEST"}, "8288": {"op": "PUSH1", "value": "0x20"}, "8290": {"op": "DUP3"}, "8291": {"op": "LT"}, "8292": {"op": "DUP2"}, "8293": {"op": "EQ"}, "8294": {"op": "ISZERO"}, "8295": {"op": "PUSH2", "value": "0x2080"}, "8298": {"op": "JUMPI"}, "8299": {"op": "PUSH4", "value": "0x4E487B71"}, "8304": {"op": "PUSH1", "value": "0xE0"}, "8306": {"op": "SHL"}, "8307": {"op": "PUSH1", "value": "0x0"}, "8309": {"op": "MSTORE"}, "8310": {"op": "PUSH1", "value": "0x22"}, "8312": {"op": "PUSH1", "value": "0x4"}, "8314": {"op": "MSTORE"}, "8315": {"op": "PUSH1", "value": "0x24"}, "8317": {"op": "PUSH1", "value": "0x0"}, "8319": {"op": "REVERT"}, "8320": {"op": "JUMPDEST"}, "8321": {"op": "POP"}, "8322": {"op": "SWAP2"}, "8323": {"op": "SWAP1"}, "8324": {"op": "POP"}, "8325": {"op": "JUMP", "jump": "o"}, "8326": {"op": "JUMPDEST"}, "8327": {"op": "PUSH1", "value": "0x20"}, "8329": {"op": "DUP1"}, "8330": {"op": "DUP3"}, "8331": {"op": "MSTORE"}, "8332": {"op": "PUSH1", "value": "0x31"}, "8334": {"op": "SWAP1"}, "8335": {"op": "DUP3"}, "8336": {"op": "ADD"}, "8337": {"op": "MSTORE"}, "8338": {"op": "PUSH32", "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"}, "8371": {"op": "PUSH1", "value": "0x40"}, "8373": {"op": "DUP3"}, "8374": {"op": "ADD"}, "8375": {"op": "MSTORE"}, "8376": {"op": "PUSH17", "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"}, "8394": {"op": "PUSH1", "value": "0x7A"}, "8396": {"op": "SHL"}, "8397": {"op": "PUSH1", "value": "0x60"}, "8399": {"op": "DUP3"}, "8400": {"op": "ADD"}, "8401": {"op": "MSTORE"}, "8402": {"op": "PUSH1", "value": "0x80"}, "8404": {"op": "ADD"}, "8405": {"op": "SWAP1"}, "8406": {"op": "JUMP", "jump": "o"}, "8407": {"op": "JUMPDEST"}, "8408": {"op": "PUSH1", "value": "0x20"}, "8410": {"op": "DUP1"}, "8411": {"op": "DUP3"}, "8412": {"op": "MSTORE"}, "8413": {"op": "DUP2"}, "8414": {"op": "DUP2"}, "8415": {"op": "ADD"}, "8416": {"op": "MSTORE"}, "8417": {"op": "PUSH32", "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"}, "8450": {"op": "PUSH1", "value": "0x40"}, "8452": {"op": "DUP3"}, "8453": {"op": "ADD"}, "8454": {"op": "MSTORE"}, "8455": {"op": "PUSH1", "value": "0x60"}, "8457": {"op": "ADD"}, "8458": {"op": "SWAP1"}, "8459": {"op": "JUMP", "jump": "o"}, "8460": {"op": "JUMPDEST"}, "8461": {"op": "PUSH4", "value": "0x4E487B71"}, "8466": {"op": "PUSH1", "value": "0xE0"}, "8468": {"op": "SHL"}, "8469": {"op": "PUSH1", "value": "0x0"}, "8471": {"op": "MSTORE"}, "8472": {"op": "PUSH1", "value": "0x32"}, "8474": {"op": "PUSH1", "value": "0x4"}, "8476": {"op": "MSTORE"}, "8477": {"op": "PUSH1", "value": "0x24"}, "8479": {"op": "PUSH1", "value": "0x0"}, "8481": {"op": "REVERT"}, "8482": {"op": "JUMPDEST"}, "8483": {"op": "PUSH4", "value": "0x4E487B71"}, "8488": {"op": "PUSH1", "value": "0xE0"}, "8490": {"op": "SHL"}, "8491": {"op": "PUSH1", "value": "0x0"}, "8493": {"op": "MSTORE"}, "8494": {"op": "PUSH1", "value": "0x11"}, "8496": {"op": "PUSH1", "value": "0x4"}, "8498": {"op": "MSTORE"}, "8499": {"op": "PUSH1", "value": "0x24"}, "8501": {"op": "PUSH1", "value": "0x0"}, "8503": {"op": "REVERT"}, "8504": {"op": "JUMPDEST"}, "8505": {"op": "PUSH1", "value": "0x0"}, "8507": {"op": "PUSH1", "value": "0x0"}, "8509": {"op": "NOT"}, "8510": {"op": "DUP3"}, "8511": {"op": "EQ"}, "8512": {"op": "ISZERO"}, "8513": {"op": "PUSH2", "value": "0x214C"}, "8516": {"op": "JUMPI"}, "8517": {"op": "PUSH2", "value": "0x214C"}, "8520": {"op": "PUSH2", "value": "0x2122"}, "8523": {"op": "JUMP", "jump": "i"}, "8524": {"op": "JUMPDEST"}, "8525": {"op": "POP"}, "8526": {"op": "PUSH1", "value": "0x1"}, "8528": {"op": "ADD"}, "8529": {"op": "SWAP1"}, "8530": {"op": "JUMP", "jump": "o"}, "8531": {"op": "JUMPDEST"}, "8532": {"op": "PUSH1", "value": "0x0"}, "8534": {"op": "DUP3"}, "8535": {"op": "NOT"}, "8536": {"op": "DUP3"}, "8537": {"op": "GT"}, "8538": {"op": "ISZERO"}, "8539": {"op": "PUSH2", "value": "0x2166"}, "8542": {"op": "JUMPI"}, "8543": {"op": "PUSH2", "value": "0x2166"}, "8546": {"op": "PUSH2", "value": "0x2122"}, "8549": {"op": "JUMP", "jump": "i"}, "8550": {"op": "JUMPDEST"}, "8551": {"op": "POP"}, "8552": {"op": "ADD"}, "8553": {"op": "SWAP1"}, "8554": {"op": "JUMP", "jump": "o"}, "8555": {"op": "JUMPDEST"}, "8556": {"op": "PUSH1", "value": "0x0"}, "8558": {"op": "DUP2"}, "8559": {"op": "PUSH1", "value": "0x0"}, "8561": {"op": "NOT"}, "8562": {"op": "DIV"}, "8563": {"op": "DUP4"}, "8564": {"op": "GT"}, "8565": {"op": "DUP3"}, "8566": {"op": "ISZERO"}, "8567": {"op": "ISZERO"}, "8568": {"op": "AND"}, "8569": {"op": "ISZERO"}, "8570": {"op": "PUSH2", "value": "0x2185"}, "8573": {"op": "JUMPI"}, "8574": {"op": "PUSH2", "value": "0x2185"}, "8577": {"op": "PUSH2", "value": "0x2122"}, "8580": {"op": "JUMP", "jump": "i"}, "8581": {"op": "JUMPDEST"}, "8582": {"op": "POP"}, "8583": {"op": "MUL"}, "8584": {"op": "SWAP1"}, "8585": {"op": "JUMP", "jump": "o"}, "8586": {"op": "JUMPDEST"}, "8587": {"op": "PUSH1", "value": "0x0"}, "8589": {"op": "DUP5"}, "8590": {"op": "MLOAD"}, "8591": {"op": "PUSH1", "value": "0x20"}, "8593": {"op": "PUSH2", "value": "0x219D"}, "8596": {"op": "DUP3"}, "8597": {"op": "DUP6"}, "8598": {"op": "DUP4"}, "8599": {"op": "DUP11"}, "8600": {"op": "ADD"}, "8601": {"op": "PUSH2", "value": "0x1D0D"}, "8604": {"op": "JUMP", "jump": "i"}, "8605": {"op": "JUMPDEST"}, "8606": {"op": "DUP6"}, "8607": {"op": "MLOAD"}, "8608": {"op": "SWAP2"}, "8609": {"op": "DUP5"}, "8610": {"op": "ADD"}, "8611": {"op": "SWAP2"}, "8612": {"op": "PUSH2", "value": "0x21B0"}, "8615": {"op": "DUP2"}, "8616": {"op": "DUP5"}, "8617": {"op": "DUP5"}, "8618": {"op": "DUP11"}, "8619": {"op": "ADD"}, "8620": {"op": "PUSH2", "value": "0x1D0D"}, "8623": {"op": "JUMP", "jump": "i"}, "8624": {"op": "JUMPDEST"}, "8625": {"op": "DUP6"}, "8626": {"op": "SLOAD"}, "8627": {"op": "SWAP3"}, "8628": {"op": "ADD"}, "8629": {"op": "SWAP2"}, "8630": {"op": "PUSH1", "value": "0x0"}, "8632": {"op": "SWAP1"}, "8633": {"op": "PUSH1", "value": "0x1"}, "8635": {"op": "DUP2"}, "8636": {"op": "DUP2"}, "8637": {"op": "SHR"}, "8638": {"op": "SWAP1"}, "8639": {"op": "DUP1"}, "8640": {"op": "DUP4"}, "8641": {"op": "AND"}, "8642": {"op": "DUP1"}, "8643": {"op": "PUSH2", "value": "0x21CD"}, "8646": {"op": "JUMPI"}, "8647": {"op": "PUSH1", "value": "0x7F"}, "8649": {"op": "DUP4"}, "8650": {"op": "AND"}, "8651": {"op": "SWAP3"}, "8652": {"op": "POP"}, "8653": {"op": "JUMPDEST"}, "8654": {"op": "DUP6"}, "8655": {"op": "DUP4"}, "8656": {"op": "LT"}, "8657": {"op": "DUP2"}, "8658": {"op": "EQ"}, "8659": {"op": "ISZERO"}, "8660": {"op": "PUSH2", "value": "0x21EB"}, "8663": {"op": "JUMPI"}, "8664": {"op": "PUSH4", "value": "0x4E487B71"}, "8669": {"op": "PUSH1", "value": "0xE0"}, "8671": {"op": "SHL"}, "8672": {"op": "DUP6"}, "8673": {"op": "MSTORE"}, "8674": {"op": "PUSH1", "value": "0x22"}, "8676": {"op": "PUSH1", "value": "0x4"}, "8678": {"op": "MSTORE"}, "8679": {"op": "PUSH1", "value": "0x24"}, "8681": {"op": "DUP6"}, "8682": {"op": "REVERT"}, "8683": {"op": "JUMPDEST"}, "8684": {"op": "DUP1"}, "8685": {"op": "DUP1"}, "8686": {"op": "ISZERO"}, "8687": {"op": "PUSH2", "value": "0x21FF"}, "8690": {"op": "JUMPI"}, "8691": {"op": "PUSH1", "value": "0x1"}, "8693": {"op": "DUP2"}, "8694": {"op": "EQ"}, "8695": {"op": "PUSH2", "value": "0x2210"}, "8698": {"op": "JUMPI"}, "8699": {"op": "PUSH2", "value": "0x223D"}, "8702": {"op": "JUMP"}, "8703": {"op": "JUMPDEST"}, "8704": {"op": "PUSH1", "value": "0xFF"}, "8706": {"op": "NOT"}, "8707": {"op": "DUP6"}, "8708": {"op": "AND"}, "8709": {"op": "DUP9"}, "8710": {"op": "MSTORE"}, "8711": {"op": "DUP4"}, "8712": {"op": "DUP9"}, "8713": {"op": "ADD"}, "8714": {"op": "SWAP6"}, "8715": {"op": "POP"}, "8716": {"op": "PUSH2", "value": "0x223D"}, "8719": {"op": "JUMP"}, "8720": {"op": "JUMPDEST"}, "8721": {"op": "PUSH1", "value": "0x0"}, "8723": {"op": "DUP12"}, "8724": {"op": "DUP2"}, "8725": {"op": "MSTORE"}, "8726": {"op": "PUSH1", "value": "0x20"}, "8728": {"op": "SWAP1"}, "8729": {"op": "KECCAK256"}, "8730": {"op": "PUSH1", "value": "0x0"}, "8732": {"op": "JUMPDEST"}, "8733": {"op": "DUP6"}, "8734": {"op": "DUP2"}, "8735": {"op": "LT"}, "8736": {"op": "ISZERO"}, "8737": {"op": "PUSH2", "value": "0x2235"}, "8740": {"op": "JUMPI"}, "8741": {"op": "DUP2"}, "8742": {"op": "SLOAD"}, "8743": {"op": "DUP11"}, "8744": {"op": "DUP3"}, "8745": {"op": "ADD"}, "8746": {"op": "MSTORE"}, "8747": {"op": "SWAP1"}, "8748": {"op": "DUP5"}, "8749": {"op": "ADD"}, "8750": {"op": "SWAP1"}, "8751": {"op": "DUP9"}, "8752": {"op": "ADD"}, "8753": {"op": "PUSH2", "value": "0x221C"}, "8756": {"op": "JUMP"}, "8757": {"op": "JUMPDEST"}, "8758": {"op": "POP"}, "8759": {"op": "POP"}, "8760": {"op": "DUP4"}, "8761": {"op": "DUP9"}, "8762": {"op": "ADD"}, "8763": {"op": "SWAP6"}, "8764": {"op": "POP"}, "8765": {"op": "JUMPDEST"}, "8766": {"op": "POP"}, "8767": {"op": "SWAP4"}, "8768": {"op": "SWAP12"}, "8769": {"op": "SWAP11"}, "8770": {"op": "POP"}, "8771": {"op": "POP"}, "8772": {"op": "POP"}, "8773": {"op": "POP"}, "8774": {"op": "POP"}, "8775": {"op": "POP"}, "8776": {"op": "POP"}, "8777": {"op": "POP"}, "8778": {"op": "POP"}, "8779": {"op": "POP"}, "8780": {"op": "POP"}, "8781": {"op": "JUMP", "jump": "o"}, "8782": {"op": "JUMPDEST"}, "8783": {"op": "PUSH1", "value": "0x0"}, "8785": {"op": "DUP3"}, "8786": {"op": "DUP3"}, "8787": {"op": "LT"}, "8788": {"op": "ISZERO"}, "8789": {"op": "PUSH2", "value": "0x2260"}, "8792": {"op": "JUMPI"}, "8793": {"op": "PUSH2", "value": "0x2260"}, "8796": {"op": "PUSH2", "value": "0x2122"}, "8799": {"op": "JUMP", "jump": "i"}, "8800": {"op": "JUMPDEST"}, "8801": {"op": "POP"}, "8802": {"op": "SUB"}, "8803": {"op": "SWAP1"}, "8804": {"op": "JUMP", "jump": "o"}, "8805": {"op": "JUMPDEST"}, "8806": {"op": "PUSH1", "value": "0x20"}, "8808": {"op": "DUP1"}, "8809": {"op": "DUP3"}, "8810": {"op": "MSTORE"}, "8811": {"op": "PUSH1", "value": "0x32"}, "8813": {"op": "SWAP1"}, "8814": {"op": "DUP3"}, "8815": {"op": "ADD"}, "8816": {"op": "MSTORE"}, "8817": {"op": "PUSH32", "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"}, "8850": {"op": "PUSH1", "value": "0x40"}, "8852": {"op": "DUP3"}, "8853": {"op": "ADD"}, "8854": {"op": "MSTORE"}, "8855": {"op": "PUSH18", "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"}, "8874": {"op": "PUSH1", "value": "0x71"}, "8876": {"op": "SHL"}, "8877": {"op": "PUSH1", "value": "0x60"}, "8879": {"op": "DUP3"}, "8880": {"op": "ADD"}, "8881": {"op": "MSTORE"}, "8882": {"op": "PUSH1", "value": "0x80"}, "8884": {"op": "ADD"}, "8885": {"op": "SWAP1"}, "8886": {"op": "JUMP", "jump": "o"}, "8887": {"op": "JUMPDEST"}, "8888": {"op": "PUSH4", "value": "0x4E487B71"}, "8893": {"op": "PUSH1", "value": "0xE0"}, "8895": {"op": "SHL"}, "8896": {"op": "PUSH1", "value": "0x0"}, "8898": {"op": "MSTORE"}, "8899": {"op": "PUSH1", "value": "0x12"}, "8901": {"op": "PUSH1", "value": "0x4"}, "8903": {"op": "MSTORE"}, "8904": {"op": "PUSH1", "value": "0x24"}, "8906": {"op": "PUSH1", "value": "0x0"}, "8908": {"op": "REVERT"}, "8909": {"op": "JUMPDEST"}, "8910": {"op": "PUSH1", "value": "0x0"}, "8912": {"op": "DUP3"}, "8913": {"op": "PUSH2", "value": "0x22DC"}, "8916": {"op": "JUMPI"}, "8917": {"op": "PUSH2", "value": "0x22DC"}, "8920": {"op": "PUSH2", "value": "0x22B7"}, "8923": {"op": "JUMP", "jump": "i"}, "8924": {"op": "JUMPDEST"}, "8925": {"op": "POP"}, "8926": {"op": "DIV"}, "8927": {"op": "SWAP1"}, "8928": {"op": "JUMP", "jump": "o"}, "8929": {"op": "JUMPDEST"}, "8930": {"op": "PUSH1", "value": "0x0"}, "8932": {"op": "DUP3"}, "8933": {"op": "PUSH2", "value": "0x22F0"}, "8936": {"op": "JUMPI"}, "8937": {"op": "PUSH2", "value": "0x22F0"}, "8940": {"op": "PUSH2", "value": "0x22B7"}, "8943": {"op": "JUMP", "jump": "i"}, "8944": {"op": "JUMPDEST"}, "8945": {"op": "POP"}, "8946": {"op": "MOD"}, "8947": {"op": "SWAP1"}, "8948": {"op": "JUMP", "jump": "o"}, "8949": {"op": "JUMPDEST"}, "8950": {"op": "PUSH1", "value": "0x1"}, "8952": {"op": "PUSH1", "value": "0x1"}, "8954": {"op": "PUSH1", "value": "0xA0"}, "8956": {"op": "SHL"}, "8957": {"op": "SUB"}, "8958": {"op": "DUP6"}, "8959": {"op": "DUP2"}, "8960": {"op": "AND"}, "8961": {"op": "DUP3"}, "8962": {"op": "MSTORE"}, "8963": {"op": "DUP5"}, "8964": {"op": "AND"}, "8965": {"op": "PUSH1", "value": "0x20"}, "8967": {"op": "DUP3"}, "8968": {"op": "ADD"}, "8969": {"op": "MSTORE"}, "8970": {"op": "PUSH1", "value": "0x40"}, "8972": {"op": "DUP2"}, "8973": {"op": "ADD"}, "8974": {"op": "DUP4"}, "8975": {"op": "SWAP1"}, "8976": {"op": "MSTORE"}, "8977": {"op": "PUSH1", "value": "0x80"}, "8979": {"op": "PUSH1", "value": "0x60"}, "8981": {"op": "DUP3"}, "8982": {"op": "ADD"}, "8983": {"op": "DUP2"}, "8984": {"op": "SWAP1"}, "8985": {"op": "MSTORE"}, "8986": {"op": "PUSH1", "value": "0x0"}, "8988": {"op": "SWAP1"}, "8989": {"op": "PUSH2", "value": "0x2328"}, "8992": {"op": "SWAP1"}, "8993": {"op": "DUP4"}, "8994": {"op": "ADD"}, "8995": {"op": "DUP5"}, "8996": {"op": "PUSH2", "value": "0x1D39"}, "8999": {"op": "JUMP", "jump": "i"}, "9000": {"op": "JUMPDEST"}, "9001": {"op": "SWAP7"}, "9002": {"op": "SWAP6"}, "9003": {"op": "POP"}, "9004": {"op": "POP"}, "9005": {"op": "POP"}, "9006": {"op": "POP"}, "9007": {"op": "POP"}, "9008": {"op": "POP"}, "9009": {"op": "JUMP", "jump": "o"}, "9010": {"op": "JUMPDEST"}, "9011": {"op": "PUSH1", "value": "0x0"}, "9013": {"op": "PUSH1", "value": "0x20"}, "9015": {"op": "DUP3"}, "9016": {"op": "DUP5"}, "9017": {"op": "SUB"}, "9018": {"op": "SLT"}, "9019": {"op": "ISZERO"}, "9020": {"op": "PUSH2", "value": "0x2344"}, "9023": {"op": "JUMPI"}, "9024": {"op": "PUSH1", "value": "0x0"}, "9026": {"op": "DUP1"}, "9027": {"op": "REVERT"}, "9028": {"op": "JUMPDEST"}, "9029": {"op": "DUP2"}, "9030": {"op": "MLOAD"}, "9031": {"op": "PUSH2", "value": "0x1155"}, "9034": {"op": "DUP2"}, "9035": {"op": "PUSH2", "value": "0x1CDA"}, "9038": {"op": "JUMP", "jump": "i"}, "9039": {"op": "JUMPDEST"}, "9040": {"op": "PUSH4", "value": "0x4E487B71"}, "9045": {"op": "PUSH1", "value": "0xE0"}, "9047": {"op": "SHL"}, "9048": {"op": "PUSH1", "value": "0x0"}, "9050": {"op": "MSTORE"}, "9051": {"op": "PUSH1", "value": "0x31"}, "9053": {"op": "PUSH1", "value": "0x4"}, "9055": {"op": "MSTORE"}, "9056": {"op": "PUSH1", "value": "0x24"}, "9058": {"op": "PUSH1", "value": "0x0"}, "9060": {"op": "REVERT"}}, "type": "contract", "abi": [{"inputs": [{"internalType": "string", "name": "_name", "type": "string"}, {"internalType": "string", "name": "_symbol", "type": "string"}, {"internalType": "uint256", "name": "_cost", "type": "uint256"}, {"internalType": "uint256", "name": "_maxSupply", "type": "uint256"}, {"internalType": "string", "name": "_initBaseURI", "type": "string"}, {"internalType": "string", "name": "_initNotRevealedUri", "type": "string"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "approved", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "operator", "type": "address"}, {"indexed": false, "internalType": "bool", "name": "approved", "type": "bool"}], "name": "ApprovalForAll", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": true, "internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "approve", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "baseExtension", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "cost", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "getApproved", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "operator", "type": "address"}], "name": "isApprovedForAll", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "isRevealed", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "maxMintAmount", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "maxSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_mintAmount", "type": "uint256"}], "name": "mint", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "notRevealedUri", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "ownerOf", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}, {"internalType": "bytes", "name": "_data", "type": "bytes"}], "name": "safeTransferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "operator", "type": "address"}, {"internalType": "bool", "name": "approved", "type": "bool"}], "name": "setApprovalForAll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_newBaseExtension", "type": "string"}], "name": "setBaseExtension", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_newBaseURI", "type": "string"}], "name": "setBaseURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_newCost", "type": "uint256"}], "name": "setCost", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "_state", "type": "bool"}], "name": "setIsRevealed", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_notRevealedURI", "type": "string"}], "name": "setNotRevealedURI", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_newmaxMintAmount", "type": "uint256"}], "name": "setmaxMintAmount", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes4", "name": "interfaceId", "type": "bytes4"}], "name": "supportsInterface", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "uint256", "name": "index", "type": "uint256"}], "name": "tokenOfOwnerByIndex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "tokenURI", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "tokenId", "type": "uint256"}], "name": "transferFrom", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_owner", "type": "address"}], "name": "walletOfOwner", "outputs": [{"internalType": "uint256[]", "name": "", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "withdraw", "outputs": [], "stateMutability": "payable", "type": "function"}], "ast": {"absolutePath": "contracts/FundMePunks.sol", "exportedSymbols": {"Address": [985], "Context": [1048], "ERC165": [487], "ERC721": [1856], "ERC721Enumerable": [2191], "FundMePunks": [2638], "IERC165": [322], "IERC721": [436], "IERC721Enumerable": [465], "IERC721Metadata": [1010], "IERC721Receiver": [1027], "Ownable": [2293], "SafeMath": [311], "Strings": [689]}, "id": 2639, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "34:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "SafeMath", "contractDependencies": [], "contractKind": "library", "documentation": {"id": 2, "nodeType": "StructuredDocumentation", "src": "212:196:0", "text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."}, "fullyImplemented": true, "id": 311, "linearizedBaseContracts": [311], "name": "SafeMath", "nameLocation": "417:8:0", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 33, "nodeType": "Block", "src": "644:140:0", "statements": [{"id": 32, "nodeType": "UncheckedBlock", "src": "654:124:0", "statements": [{"assignments": [15], "declarations": [{"constant": false, "id": 15, "mutability": "mutable", "name": "c", "nameLocation": "686:1:0", "nodeType": "VariableDeclaration", "scope": 32, "src": "678:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 14, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "678:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 19, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 18, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 16, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "690:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 17, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 7, "src": "694:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "690:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "678:17:0"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "713:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 21, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5, "src": "717:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "713:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 27, "nodeType": "IfStatement", "src": "709:28:0", "trueBody": {"expression": {"components": [{"hexValue": "66616c7365", "id": 23, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "728:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 24, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "735:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 25, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "727:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 13, "id": 26, "nodeType": "Return", "src": "720:17:0"}}, {"expression": {"components": [{"hexValue": "74727565", "id": 28, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "759:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"id": 29, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 15, "src": "765:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 30, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "758:9:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 13, "id": 31, "nodeType": "Return", "src": "751:16:0"}]}]}, "documentation": {"id": 3, "nodeType": "StructuredDocumentation", "src": "432:131:0", "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"}, "id": 34, "implemented": true, "kind": "function", "modifiers": [], "name": "tryAdd", "nameLocation": "577:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 8, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5, "mutability": "mutable", "name": "a", "nameLocation": "592:1:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "584:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "584:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 7, "mutability": "mutable", "name": "b", "nameLocation": "603:1:0", "nodeType": "VariableDeclaration", "scope": 34, "src": "595:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 6, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "595:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "583:22:0"}, "returnParameters": {"id": 13, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 10, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 34, "src": "629:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 9, "name": "bool", "nodeType": "ElementaryTypeName", "src": "629:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 12, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 34, "src": "635:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 11, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "635:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "628:15:0"}, "scope": 311, "src": "568:216:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 61, "nodeType": "Block", "src": "1005:113:0", "statements": [{"id": 60, "nodeType": "UncheckedBlock", "src": "1015:97:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 48, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 46, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "1043:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 47, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1047:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1043:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 53, "nodeType": "IfStatement", "src": "1039:28:0", "trueBody": {"expression": {"components": [{"hexValue": "66616c7365", "id": 49, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1058:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 50, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1065:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 51, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1057:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 45, "id": 52, "nodeType": "Return", "src": "1050:17:0"}}, {"expression": {"components": [{"hexValue": "74727565", "id": 54, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1089:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 57, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 55, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1095:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 56, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 39, "src": "1099:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1095:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 58, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1088:13:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 45, "id": 59, "nodeType": "Return", "src": "1081:20:0"}]}]}, "documentation": {"id": 35, "nodeType": "StructuredDocumentation", "src": "790:134:0", "text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"}, "id": 62, "implemented": true, "kind": "function", "modifiers": [], "name": "trySub", "nameLocation": "938:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 40, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 37, "mutability": "mutable", "name": "a", "nameLocation": "953:1:0", "nodeType": "VariableDeclaration", "scope": 62, "src": "945:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 36, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "945:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 39, "mutability": "mutable", "name": "b", "nameLocation": "964:1:0", "nodeType": "VariableDeclaration", "scope": 62, "src": "956:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 38, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "956:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "944:22:0"}, "returnParameters": {"id": 45, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 42, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 62, "src": "990:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 41, "name": "bool", "nodeType": "ElementaryTypeName", "src": "990:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 44, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 62, "src": "996:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 43, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "996:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "989:15:0"}, "scope": 311, "src": "929:189:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 103, "nodeType": "Block", "src": "1342:417:0", "statements": [{"id": 102, "nodeType": "UncheckedBlock", "src": "1352:401:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 76, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 74, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1610:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 75, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1615:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1610:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 81, "nodeType": "IfStatement", "src": "1606:28:0", "trueBody": {"expression": {"components": [{"hexValue": "74727565", "id": 77, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1626:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"hexValue": "30", "id": 78, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1632:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 79, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1625:9:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 73, "id": 80, "nodeType": "Return", "src": "1618:16:0"}}, {"assignments": [83], "declarations": [{"constant": false, "id": 83, "mutability": "mutable", "name": "c", "nameLocation": "1656:1:0", "nodeType": "VariableDeclaration", "scope": 102, "src": "1648:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 82, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1648:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 87, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 86, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 84, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1660:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 85, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1664:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1660:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1648:17:0"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 92, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 90, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 88, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 83, "src": "1683:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 89, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 65, "src": "1687:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1683:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 91, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67, "src": "1692:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1683:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 97, "nodeType": "IfStatement", "src": "1679:33:0", "trueBody": {"expression": {"components": [{"hexValue": "66616c7365", "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1703:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 94, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1710:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 95, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1702:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 73, "id": 96, "nodeType": "Return", "src": "1695:17:0"}}, {"expression": {"components": [{"hexValue": "74727565", "id": 98, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1734:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"id": 99, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 83, "src": "1740:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 100, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "1733:9:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 73, "id": 101, "nodeType": "Return", "src": "1726:16:0"}]}]}, "documentation": {"id": 63, "nodeType": "StructuredDocumentation", "src": "1124:137:0", "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"}, "id": 104, "implemented": true, "kind": "function", "modifiers": [], "name": "tryMul", "nameLocation": "1275:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 68, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 65, "mutability": "mutable", "name": "a", "nameLocation": "1290:1:0", "nodeType": "VariableDeclaration", "scope": 104, "src": "1282:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 64, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1282:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 67, "mutability": "mutable", "name": "b", "nameLocation": "1301:1:0", "nodeType": "VariableDeclaration", "scope": 104, "src": "1293:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 66, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1293:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1281:22:0"}, "returnParameters": {"id": 73, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 70, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 104, "src": "1327:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 69, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1327:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 72, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 104, "src": "1333:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 71, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1333:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1326:15:0"}, "scope": 311, "src": "1266:493:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 131, "nodeType": "Block", "src": "1984:114:0", "statements": [{"id": 130, "nodeType": "UncheckedBlock", "src": "1994:98:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 116, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 109, "src": "2022:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 117, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2027:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2022:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 123, "nodeType": "IfStatement", "src": "2018:29:0", "trueBody": {"expression": {"components": [{"hexValue": "66616c7365", "id": 119, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2038:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 120, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2045:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 121, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2037:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 115, "id": 122, "nodeType": "Return", "src": "2030:17:0"}}, {"expression": {"components": [{"hexValue": "74727565", "id": 124, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2069:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 125, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "2075:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 126, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 109, "src": "2079:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2075:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 128, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2068:13:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 115, "id": 129, "nodeType": "Return", "src": "2061:20:0"}]}]}, "documentation": {"id": 105, "nodeType": "StructuredDocumentation", "src": "1765:138:0", "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"}, "id": 132, "implemented": true, "kind": "function", "modifiers": [], "name": "tryDiv", "nameLocation": "1917:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 110, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 107, "mutability": "mutable", "name": "a", "nameLocation": "1932:1:0", "nodeType": "VariableDeclaration", "scope": 132, "src": "1924:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 106, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1924:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 109, "mutability": "mutable", "name": "b", "nameLocation": "1943:1:0", "nodeType": "VariableDeclaration", "scope": 132, "src": "1935:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 108, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1935:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1923:22:0"}, "returnParameters": {"id": 115, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 112, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 132, "src": "1969:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 111, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1969:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 114, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 132, "src": "1975:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 113, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1975:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1968:15:0"}, "scope": 311, "src": "1908:190:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 159, "nodeType": "Block", "src": "2333:114:0", "statements": [{"id": 158, "nodeType": "UncheckedBlock", "src": "2343:98:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 144, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "2371:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 145, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2376:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2371:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 151, "nodeType": "IfStatement", "src": "2367:29:0", "trueBody": {"expression": {"components": [{"hexValue": "66616c7365", "id": 147, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2387:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"hexValue": "30", "id": 148, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2394:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "id": 149, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2386:10:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$", "typeString": "tuple(bool,int_const 0)"}}, "functionReturnParameters": 143, "id": 150, "nodeType": "Return", "src": "2379:17:0"}}, {"expression": {"components": [{"hexValue": "74727565", "id": 152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2418:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 153, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 135, "src": "2424:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 154, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 137, "src": "2428:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2424:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 156, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2417:13:0", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$", "typeString": "tuple(bool,uint256)"}}, "functionReturnParameters": 143, "id": 157, "nodeType": "Return", "src": "2410:20:0"}]}]}, "documentation": {"id": 133, "nodeType": "StructuredDocumentation", "src": "2104:148:0", "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"}, "id": 160, "implemented": true, "kind": "function", "modifiers": [], "name": "tryMod", "nameLocation": "2266:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 138, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 135, "mutability": "mutable", "name": "a", "nameLocation": "2281:1:0", "nodeType": "VariableDeclaration", "scope": 160, "src": "2273:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 134, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2273:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 137, "mutability": "mutable", "name": "b", "nameLocation": "2292:1:0", "nodeType": "VariableDeclaration", "scope": 160, "src": "2284:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 136, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2284:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2272:22:0"}, "returnParameters": {"id": 143, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 140, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 160, "src": "2318:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 139, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2318:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 142, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 160, "src": "2324:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 141, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2324:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2317:15:0"}, "scope": 311, "src": "2257:190:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 174, "nodeType": "Block", "src": "2749:29:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 172, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 170, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 163, "src": "2766:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 171, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 165, "src": "2770:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2766:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 169, "id": 173, "nodeType": "Return", "src": "2759:12:0"}]}, "documentation": {"id": 161, "nodeType": "StructuredDocumentation", "src": "2453:224:0", "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."}, "id": 175, "implemented": true, "kind": "function", "modifiers": [], "name": "add", "nameLocation": "2691:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 166, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 163, "mutability": "mutable", "name": "a", "nameLocation": "2703:1:0", "nodeType": "VariableDeclaration", "scope": 175, "src": "2695:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 162, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2695:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 165, "mutability": "mutable", "name": "b", "nameLocation": "2714:1:0", "nodeType": "VariableDeclaration", "scope": 175, "src": "2706:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 164, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2706:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2694:22:0"}, "returnParameters": {"id": 169, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 168, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 175, "src": "2740:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 167, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2740:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2739:9:0"}, "scope": 311, "src": "2682:96:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 189, "nodeType": "Block", "src": "3116:29:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 185, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 178, "src": "3133:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 186, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 180, "src": "3137:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3133:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 184, "id": 188, "nodeType": "Return", "src": "3126:12:0"}]}, "documentation": {"id": 176, "nodeType": "StructuredDocumentation", "src": "2784:260:0", "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."}, "id": 190, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nameLocation": "3058:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 181, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 178, "mutability": "mutable", "name": "a", "nameLocation": "3070:1:0", "nodeType": "VariableDeclaration", "scope": 190, "src": "3062:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 177, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3062:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 180, "mutability": "mutable", "name": "b", "nameLocation": "3081:1:0", "nodeType": "VariableDeclaration", "scope": 190, "src": "3073:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 179, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3073:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3061:22:0"}, "returnParameters": {"id": 184, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 183, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 190, "src": "3107:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 182, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3107:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3106:9:0"}, "scope": 311, "src": "3049:96:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 204, "nodeType": "Block", "src": "3459:29:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 202, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 200, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 193, "src": "3476:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 201, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 195, "src": "3480:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3476:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 199, "id": 203, "nodeType": "Return", "src": "3469:12:0"}]}, "documentation": {"id": 191, "nodeType": "StructuredDocumentation", "src": "3151:236:0", "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."}, "id": 205, "implemented": true, "kind": "function", "modifiers": [], "name": "mul", "nameLocation": "3401:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 196, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 193, "mutability": "mutable", "name": "a", "nameLocation": "3413:1:0", "nodeType": "VariableDeclaration", "scope": 205, "src": "3405:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 192, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3405:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 195, "mutability": "mutable", "name": "b", "nameLocation": "3424:1:0", "nodeType": "VariableDeclaration", "scope": 205, "src": "3416:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 194, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3416:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3404:22:0"}, "returnParameters": {"id": 199, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 198, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 205, "src": "3450:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 197, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3450:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3449:9:0"}, "scope": 311, "src": "3392:96:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 219, "nodeType": "Block", "src": "3844:29:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 215, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 208, "src": "3861:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 216, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 210, "src": "3865:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3861:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 214, "id": 218, "nodeType": "Return", "src": "3854:12:0"}]}, "documentation": {"id": 206, "nodeType": "StructuredDocumentation", "src": "3494:278:0", "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."}, "id": 220, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nameLocation": "3786:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 211, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 208, "mutability": "mutable", "name": "a", "nameLocation": "3798:1:0", "nodeType": "VariableDeclaration", "scope": 220, "src": "3790:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 207, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3790:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 210, "mutability": "mutable", "name": "b", "nameLocation": "3809:1:0", "nodeType": "VariableDeclaration", "scope": 220, "src": "3801:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 209, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3801:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3789:22:0"}, "returnParameters": {"id": 214, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 213, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 220, "src": "3835:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 212, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3835:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3834:9:0"}, "scope": 311, "src": "3777:96:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 234, "nodeType": "Block", "src": "4393:29:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 232, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 230, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 223, "src": "4410:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 231, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 225, "src": "4414:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4410:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 229, "id": 233, "nodeType": "Return", "src": "4403:12:0"}]}, "documentation": {"id": 221, "nodeType": "StructuredDocumentation", "src": "3879:442:0", "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 235, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nameLocation": "4335:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 226, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 223, "mutability": "mutable", "name": "a", "nameLocation": "4347:1:0", "nodeType": "VariableDeclaration", "scope": 235, "src": "4339:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 222, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4339:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 225, "mutability": "mutable", "name": "b", "nameLocation": "4358:1:0", "nodeType": "VariableDeclaration", "scope": 235, "src": "4350:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 224, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4350:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4338:22:0"}, "returnParameters": {"id": 229, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 228, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 235, "src": "4384:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4384:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4383:9:0"}, "scope": 311, "src": "4326:96:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 259, "nodeType": "Block", "src": "5011:106:0", "statements": [{"id": 258, "nodeType": "UncheckedBlock", "src": "5021:90:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 248, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 240, "src": "5053:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 249, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 238, "src": "5058:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5053:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 251, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 242, "src": "5061:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 247, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5045:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 252, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5045:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 253, "nodeType": "ExpressionStatement", "src": "5045:29:0"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 254, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 238, "src": "5095:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 255, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 240, "src": "5099:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5095:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 246, "id": 257, "nodeType": "Return", "src": "5088:12:0"}]}]}, "documentation": {"id": 236, "nodeType": "StructuredDocumentation", "src": "4428:453:0", "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."}, "id": 260, "implemented": true, "kind": "function", "modifiers": [], "name": "sub", "nameLocation": "4895:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 243, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 238, "mutability": "mutable", "name": "a", "nameLocation": "4916:1:0", "nodeType": "VariableDeclaration", "scope": 260, "src": "4908:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4908:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 240, "mutability": "mutable", "name": "b", "nameLocation": "4935:1:0", "nodeType": "VariableDeclaration", "scope": 260, "src": "4927:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 239, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4927:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 242, "mutability": "mutable", "name": "errorMessage", "nameLocation": "4960:12:0", "nodeType": "VariableDeclaration", "scope": 260, "src": "4946:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 241, "name": "string", "nodeType": "ElementaryTypeName", "src": "4946:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "4898:80:0"}, "returnParameters": {"id": 246, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 245, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 260, "src": "5002:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 244, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5002:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5001:9:0"}, "scope": 311, "src": "4886:231:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 284, "nodeType": "Block", "src": "5726:105:0", "statements": [{"id": 283, "nodeType": "UncheckedBlock", "src": "5736:89:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 275, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 273, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 265, "src": "5768:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5772:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5768:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 276, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 267, "src": "5775:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 272, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5760:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 277, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5760:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 278, "nodeType": "ExpressionStatement", "src": "5760:28:0"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 279, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 263, "src": "5809:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 280, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 265, "src": "5813:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5809:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 271, "id": 282, "nodeType": "Return", "src": "5802:12:0"}]}]}, "documentation": {"id": 261, "nodeType": "StructuredDocumentation", "src": "5123:473:0", "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 285, "implemented": true, "kind": "function", "modifiers": [], "name": "div", "nameLocation": "5610:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 268, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 263, "mutability": "mutable", "name": "a", "nameLocation": "5631:1:0", "nodeType": "VariableDeclaration", "scope": 285, "src": "5623:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 262, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5623:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 265, "mutability": "mutable", "name": "b", "nameLocation": "5650:1:0", "nodeType": "VariableDeclaration", "scope": 285, "src": "5642:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 264, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5642:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 267, "mutability": "mutable", "name": "errorMessage", "nameLocation": "5675:12:0", "nodeType": "VariableDeclaration", "scope": 285, "src": "5661:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 266, "name": "string", "nodeType": "ElementaryTypeName", "src": "5661:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "5613:80:0"}, "returnParameters": {"id": 271, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 270, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 285, "src": "5717:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 269, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5717:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5716:9:0"}, "scope": 311, "src": "5601:230:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 309, "nodeType": "Block", "src": "6602:105:0", "statements": [{"id": 308, "nodeType": "UncheckedBlock", "src": "6612:89:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 300, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 298, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 290, "src": "6644:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 299, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6648:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6644:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 301, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 292, "src": "6651:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 297, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6636:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 302, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6636:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 303, "nodeType": "ExpressionStatement", "src": "6636:28:0"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 306, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 304, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 288, "src": "6685:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 305, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 290, "src": "6689:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6685:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 296, "id": 307, "nodeType": "Return", "src": "6678:12:0"}]}]}, "documentation": {"id": 286, "nodeType": "StructuredDocumentation", "src": "5837:635:0", "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."}, "id": 310, "implemented": true, "kind": "function", "modifiers": [], "name": "mod", "nameLocation": "6486:3:0", "nodeType": "FunctionDefinition", "parameters": {"id": 293, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 288, "mutability": "mutable", "name": "a", "nameLocation": "6507:1:0", "nodeType": "VariableDeclaration", "scope": 310, "src": "6499:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 287, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6499:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 290, "mutability": "mutable", "name": "b", "nameLocation": "6526:1:0", "nodeType": "VariableDeclaration", "scope": 310, "src": "6518:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 289, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6518:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 292, "mutability": "mutable", "name": "errorMessage", "nameLocation": "6551:12:0", "nodeType": "VariableDeclaration", "scope": 310, "src": "6537:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 291, "name": "string", "nodeType": "ElementaryTypeName", "src": "6537:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "6489:80:0"}, "returnParameters": {"id": 296, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 295, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 310, "src": "6593:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 294, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6593:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6592:9:0"}, "scope": 311, "src": "6477:230:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 2639, "src": "409:6300:0", "usedErrors": []}, {"id": 312, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "6776:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC165", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 313, "nodeType": "StructuredDocumentation", "src": "6801:279:0", "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."}, "fullyImplemented": false, "id": 322, "linearizedBaseContracts": [322], "name": "IERC165", "nameLocation": "7091:7:0", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 314, "nodeType": "StructuredDocumentation", "src": "7105:340:0", "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."}, "functionSelector": "01ffc9a7", "id": 321, "implemented": false, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "7459:17:0", "nodeType": "FunctionDefinition", "parameters": {"id": 317, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 316, "mutability": "mutable", "name": "interfaceId", "nameLocation": "7484:11:0", "nodeType": "VariableDeclaration", "scope": 321, "src": "7477:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 315, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "7477:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "7476:20:0"}, "returnParameters": {"id": 320, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 319, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 321, "src": "7520:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 318, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7520:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "7519:6:0"}, "scope": 322, "src": "7450:76:0", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 2639, "src": "7081:447:0", "usedErrors": []}, {"id": 323, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "7588:23:0"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 325, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "7702:7:0"}, "id": 326, "nodeType": "InheritanceSpecifier", "src": "7702:7:0"}], "canonicalName": "IERC721", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 324, "nodeType": "StructuredDocumentation", "src": "7613:67:0", "text": " @dev Required interface of an ERC721 compliant contract."}, "fullyImplemented": false, "id": 436, "linearizedBaseContracts": [436, 322], "name": "IERC721", "nameLocation": "7691:7:0", "nodeType": "ContractDefinition", "nodes": [{"anonymous": false, "documentation": {"id": 327, "nodeType": "StructuredDocumentation", "src": "7716:88:0", "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."}, "id": 335, "name": "Transfer", "nameLocation": "7815:8:0", "nodeType": "EventDefinition", "parameters": {"id": 334, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 329, "indexed": true, "mutability": "mutable", "name": "from", "nameLocation": "7849:4:0", "nodeType": "VariableDeclaration", "scope": 335, "src": "7833:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 328, "name": "address", "nodeType": "ElementaryTypeName", "src": "7833:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 331, "indexed": true, "mutability": "mutable", "name": "to", "nameLocation": "7879:2:0", "nodeType": "VariableDeclaration", "scope": 335, "src": "7863:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 330, "name": "address", "nodeType": "ElementaryTypeName", "src": "7863:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 333, "indexed": true, "mutability": "mutable", "name": "tokenId", "nameLocation": "7907:7:0", "nodeType": "VariableDeclaration", "scope": 335, "src": "7891:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 332, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7891:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7823:97:0"}, "src": "7809:112:0"}, {"anonymous": false, "documentation": {"id": 336, "nodeType": "StructuredDocumentation", "src": "7927:94:0", "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."}, "id": 344, "name": "Approval", "nameLocation": "8032:8:0", "nodeType": "EventDefinition", "parameters": {"id": 343, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 338, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "8066:5:0", "nodeType": "VariableDeclaration", "scope": 344, "src": "8050:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 337, "name": "address", "nodeType": "ElementaryTypeName", "src": "8050:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 340, "indexed": true, "mutability": "mutable", "name": "approved", "nameLocation": "8097:8:0", "nodeType": "VariableDeclaration", "scope": 344, "src": "8081:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 339, "name": "address", "nodeType": "ElementaryTypeName", "src": "8081:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 342, "indexed": true, "mutability": "mutable", "name": "tokenId", "nameLocation": "8131:7:0", "nodeType": "VariableDeclaration", "scope": 344, "src": "8115:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 341, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8115:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8040:104:0"}, "src": "8026:119:0"}, {"anonymous": false, "documentation": {"id": 345, "nodeType": "StructuredDocumentation", "src": "8151:117:0", "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."}, "id": 353, "name": "ApprovalForAll", "nameLocation": "8279:14:0", "nodeType": "EventDefinition", "parameters": {"id": 352, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 347, "indexed": true, "mutability": "mutable", "name": "owner", "nameLocation": "8319:5:0", "nodeType": "VariableDeclaration", "scope": 353, "src": "8303:21:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 346, "name": "address", "nodeType": "ElementaryTypeName", "src": "8303:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 349, "indexed": true, "mutability": "mutable", "name": "operator", "nameLocation": "8350:8:0", "nodeType": "VariableDeclaration", "scope": 353, "src": "8334:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 348, "name": "address", "nodeType": "ElementaryTypeName", "src": "8334:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 351, "indexed": false, "mutability": "mutable", "name": "approved", "nameLocation": "8373:8:0", "nodeType": "VariableDeclaration", "scope": 353, "src": "8368:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 350, "name": "bool", "nodeType": "ElementaryTypeName", "src": "8368:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "8293:94:0"}, "src": "8273:115:0"}, {"documentation": {"id": 354, "nodeType": "StructuredDocumentation", "src": "8394:76:0", "text": " @dev Returns the number of tokens in ``owner``'s account."}, "functionSelector": "70a08231", "id": 361, "implemented": false, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "8484:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 357, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 356, "mutability": "mutable", "name": "owner", "nameLocation": "8502:5:0", "nodeType": "VariableDeclaration", "scope": 361, "src": "8494:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 355, "name": "address", "nodeType": "ElementaryTypeName", "src": "8494:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8493:15:0"}, "returnParameters": {"id": 360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 359, "mutability": "mutable", "name": "balance", "nameLocation": "8540:7:0", "nodeType": "VariableDeclaration", "scope": 361, "src": "8532:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 358, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8532:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8531:17:0"}, "scope": 436, "src": "8475:74:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 362, "nodeType": "StructuredDocumentation", "src": "8555:131:0", "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."}, "functionSelector": "6352211e", "id": 369, "implemented": false, "kind": "function", "modifiers": [], "name": "ownerOf", "nameLocation": "8700:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 365, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 364, "mutability": "mutable", "name": "tokenId", "nameLocation": "8716:7:0", "nodeType": "VariableDeclaration", "scope": 369, "src": "8708:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 363, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8708:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8707:17:0"}, "returnParameters": {"id": 368, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 367, "mutability": "mutable", "name": "owner", "nameLocation": "8756:5:0", "nodeType": "VariableDeclaration", "scope": 369, "src": "8748:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 366, "name": "address", "nodeType": "ElementaryTypeName", "src": "8748:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "8747:15:0"}, "scope": 436, "src": "8691:72:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 370, "nodeType": "StructuredDocumentation", "src": "8769:690:0", "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."}, "functionSelector": "42842e0e", "id": 379, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "9473:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 377, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 372, "mutability": "mutable", "name": "from", "nameLocation": "9507:4:0", "nodeType": "VariableDeclaration", "scope": 379, "src": "9499:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 371, "name": "address", "nodeType": "ElementaryTypeName", "src": "9499:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 374, "mutability": "mutable", "name": "to", "nameLocation": "9529:2:0", "nodeType": "VariableDeclaration", "scope": 379, "src": "9521:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 373, "name": "address", "nodeType": "ElementaryTypeName", "src": "9521:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 376, "mutability": "mutable", "name": "tokenId", "nameLocation": "9549:7:0", "nodeType": "VariableDeclaration", "scope": 379, "src": "9541:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 375, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9541:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9489:73:0"}, "returnParameters": {"id": 378, "nodeType": "ParameterList", "parameters": [], "src": "9571:0:0"}, "scope": 436, "src": "9464:108:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 380, "nodeType": "StructuredDocumentation", "src": "9578:504:0", "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."}, "functionSelector": "23b872dd", "id": 389, "implemented": false, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "10096:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 387, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 382, "mutability": "mutable", "name": "from", "nameLocation": "10126:4:0", "nodeType": "VariableDeclaration", "scope": 389, "src": "10118:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 381, "name": "address", "nodeType": "ElementaryTypeName", "src": "10118:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 384, "mutability": "mutable", "name": "to", "nameLocation": "10148:2:0", "nodeType": "VariableDeclaration", "scope": 389, "src": "10140:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 383, "name": "address", "nodeType": "ElementaryTypeName", "src": "10140:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 386, "mutability": "mutable", "name": "tokenId", "nameLocation": "10168:7:0", "nodeType": "VariableDeclaration", "scope": 389, "src": "10160:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 385, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10160:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10108:73:0"}, "returnParameters": {"id": 388, "nodeType": "ParameterList", "parameters": [], "src": "10190:0:0"}, "scope": 436, "src": "10087:104:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 390, "nodeType": "StructuredDocumentation", "src": "10197:452:0", "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."}, "functionSelector": "095ea7b3", "id": 397, "implemented": false, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "10663:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 395, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 392, "mutability": "mutable", "name": "to", "nameLocation": "10679:2:0", "nodeType": "VariableDeclaration", "scope": 397, "src": "10671:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 391, "name": "address", "nodeType": "ElementaryTypeName", "src": "10671:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 394, "mutability": "mutable", "name": "tokenId", "nameLocation": "10691:7:0", "nodeType": "VariableDeclaration", "scope": 397, "src": "10683:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 393, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10683:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10670:29:0"}, "returnParameters": {"id": 396, "nodeType": "ParameterList", "parameters": [], "src": "10708:0:0"}, "scope": 436, "src": "10654:55:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 398, "nodeType": "StructuredDocumentation", "src": "10715:139:0", "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."}, "functionSelector": "081812fc", "id": 405, "implemented": false, "kind": "function", "modifiers": [], "name": "getApproved", "nameLocation": "10868:11:0", "nodeType": "FunctionDefinition", "parameters": {"id": 401, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 400, "mutability": "mutable", "name": "tokenId", "nameLocation": "10888:7:0", "nodeType": "VariableDeclaration", "scope": 405, "src": "10880:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 399, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10880:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10879:17:0"}, "returnParameters": {"id": 404, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 403, "mutability": "mutable", "name": "operator", "nameLocation": "10952:8:0", "nodeType": "VariableDeclaration", "scope": 405, "src": "10944:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 402, "name": "address", "nodeType": "ElementaryTypeName", "src": "10944:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "10943:18:0"}, "scope": 436, "src": "10859:103:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 406, "nodeType": "StructuredDocumentation", "src": "10968:309:0", "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."}, "functionSelector": "a22cb465", "id": 413, "implemented": false, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "11291:17:0", "nodeType": "FunctionDefinition", "parameters": {"id": 411, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 408, "mutability": "mutable", "name": "operator", "nameLocation": "11317:8:0", "nodeType": "VariableDeclaration", "scope": 413, "src": "11309:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 407, "name": "address", "nodeType": "ElementaryTypeName", "src": "11309:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 410, "mutability": "mutable", "name": "_approved", "nameLocation": "11332:9:0", "nodeType": "VariableDeclaration", "scope": 413, "src": "11327:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 409, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11327:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11308:34:0"}, "returnParameters": {"id": 412, "nodeType": "ParameterList", "parameters": [], "src": "11351:0:0"}, "scope": 436, "src": "11282:70:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"documentation": {"id": 414, "nodeType": "StructuredDocumentation", "src": "11358:138:0", "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"}, "functionSelector": "e985e9c5", "id": 423, "implemented": false, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "11510:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 419, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 416, "mutability": "mutable", "name": "owner", "nameLocation": "11535:5:0", "nodeType": "VariableDeclaration", "scope": 423, "src": "11527:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 415, "name": "address", "nodeType": "ElementaryTypeName", "src": "11527:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 418, "mutability": "mutable", "name": "operator", "nameLocation": "11550:8:0", "nodeType": "VariableDeclaration", "scope": 423, "src": "11542:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 417, "name": "address", "nodeType": "ElementaryTypeName", "src": "11542:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "11526:33:0"}, "returnParameters": {"id": 422, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 421, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 423, "src": "11607:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 420, "name": "bool", "nodeType": "ElementaryTypeName", "src": "11607:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "11606:6:0"}, "scope": 436, "src": "11501:112:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 424, "nodeType": "StructuredDocumentation", "src": "11619:556:0", "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."}, "functionSelector": "b88d4fde", "id": 435, "implemented": false, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "12189:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 433, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 426, "mutability": "mutable", "name": "from", "nameLocation": "12223:4:0", "nodeType": "VariableDeclaration", "scope": 435, "src": "12215:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 425, "name": "address", "nodeType": "ElementaryTypeName", "src": "12215:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 428, "mutability": "mutable", "name": "to", "nameLocation": "12245:2:0", "nodeType": "VariableDeclaration", "scope": 435, "src": "12237:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 427, "name": "address", "nodeType": "ElementaryTypeName", "src": "12237:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 430, "mutability": "mutable", "name": "tokenId", "nameLocation": "12265:7:0", "nodeType": "VariableDeclaration", "scope": 435, "src": "12257:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 429, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12257:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 432, "mutability": "mutable", "name": "data", "nameLocation": "12297:4:0", "nodeType": "VariableDeclaration", "scope": 435, "src": "12282:19:0", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 431, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "12282:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "12205:102:0"}, "returnParameters": {"id": 434, "nodeType": "ParameterList", "parameters": [], "src": "12316:0:0"}, "scope": 436, "src": "12180:137:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 2639, "src": "7681:4638:0", "usedErrors": []}, {"id": 437, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "12400:23:0"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 439, "name": "IERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 436, "src": "12593:7:0"}, "id": 440, "nodeType": "InheritanceSpecifier", "src": "12593:7:0"}], "canonicalName": "IERC721Enumerable", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 438, "nodeType": "StructuredDocumentation", "src": "12425:136:0", "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"}, "fullyImplemented": false, "id": 465, "linearizedBaseContracts": [465, 436, 322], "name": "IERC721Enumerable", "nameLocation": "12572:17:0", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 441, "nodeType": "StructuredDocumentation", "src": "12607:82:0", "text": " @dev Returns the total amount of tokens stored by the contract."}, "functionSelector": "18160ddd", "id": 446, "implemented": false, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "12703:11:0", "nodeType": "FunctionDefinition", "parameters": {"id": 442, "nodeType": "ParameterList", "parameters": [], "src": "12714:2:0"}, "returnParameters": {"id": 445, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 444, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 446, "src": "12740:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 443, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12740:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12739:9:0"}, "scope": 465, "src": "12694:55:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 447, "nodeType": "StructuredDocumentation", "src": "12755:171:0", "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."}, "functionSelector": "2f745c59", "id": 456, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenOfOwnerByIndex", "nameLocation": "12940:19:0", "nodeType": "FunctionDefinition", "parameters": {"id": 452, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 449, "mutability": "mutable", "name": "owner", "nameLocation": "12968:5:0", "nodeType": "VariableDeclaration", "scope": 456, "src": "12960:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 448, "name": "address", "nodeType": "ElementaryTypeName", "src": "12960:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 451, "mutability": "mutable", "name": "index", "nameLocation": "12983:5:0", "nodeType": "VariableDeclaration", "scope": 456, "src": "12975:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 450, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12975:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12959:30:0"}, "returnParameters": {"id": 455, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 454, "mutability": "mutable", "name": "tokenId", "nameLocation": "13045:7:0", "nodeType": "VariableDeclaration", "scope": 456, "src": "13037:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 453, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13037:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13036:17:0"}, "scope": 465, "src": "12931:123:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 457, "nodeType": "StructuredDocumentation", "src": "13060:164:0", "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."}, "functionSelector": "4f6ccce7", "id": 464, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenByIndex", "nameLocation": "13238:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 460, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 459, "mutability": "mutable", "name": "index", "nameLocation": "13259:5:0", "nodeType": "VariableDeclaration", "scope": 464, "src": "13251:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 458, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13251:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13250:15:0"}, "returnParameters": {"id": 463, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 462, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 464, "src": "13289:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 461, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13289:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13288:9:0"}, "scope": 465, "src": "13229:69:0", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 2639, "src": "12562:738:0", "usedErrors": []}, {"id": 466, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "13366:23:0"}, {"abstract": true, "baseContracts": [{"baseName": {"id": 468, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "13996:7:0"}, "id": 469, "nodeType": "InheritanceSpecifier", "src": "13996:7:0"}], "canonicalName": "ERC165", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 467, "nodeType": "StructuredDocumentation", "src": "13391:576:0", "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."}, "fullyImplemented": true, "id": 487, "linearizedBaseContracts": [487, 322], "name": "ERC165", "nameLocation": "13986:6:0", "nodeType": "ContractDefinition", "nodes": [{"baseFunctions": [321], "body": {"id": 485, "nodeType": "Block", "src": "14206:64:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 478, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 472, "src": "14223:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 480, "name": "IERC165", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 322, "src": "14243:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC165_$322_$", "typeString": "type(contract IERC165)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC165_$322_$", "typeString": "type(contract IERC165)"}], "id": 479, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "14238:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 481, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14238:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$322", "typeString": "type(contract IERC165)"}}, "id": 482, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "14238:25:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "14223:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 477, "id": 484, "nodeType": "Return", "src": "14216:47:0"}]}, "documentation": {"id": 470, "nodeType": "StructuredDocumentation", "src": "14010:56:0", "text": " @dev See {IERC165-supportsInterface}."}, "functionSelector": "01ffc9a7", "id": 486, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "14080:17:0", "nodeType": "FunctionDefinition", "overrides": {"id": 474, "nodeType": "OverrideSpecifier", "overrides": [], "src": "14170:8:0"}, "parameters": {"id": 473, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 472, "mutability": "mutable", "name": "interfaceId", "nameLocation": "14105:11:0", "nodeType": "VariableDeclaration", "scope": 486, "src": "14098:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 471, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "14098:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "14097:20:0"}, "returnParameters": {"id": 477, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 476, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 486, "src": "14196:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 475, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14196:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "14195:6:0"}, "scope": 487, "src": "14071:199:0", "stateMutability": "view", "virtual": true, "visibility": "public"}], "scope": 2639, "src": "13968:304:0", "usedErrors": []}, {"id": 488, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "14326:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Strings", "contractDependencies": [], "contractKind": "library", "documentation": {"id": 489, "nodeType": "StructuredDocumentation", "src": "14351:34:0", "text": " @dev String operations."}, "fullyImplemented": true, "id": 689, "linearizedBaseContracts": [689], "name": "Strings", "nameLocation": "14394:7:0", "nodeType": "ContractDefinition", "nodes": [{"constant": true, "id": 492, "mutability": "constant", "name": "_HEX_SYMBOLS", "nameLocation": "14433:12:0", "nodeType": "VariableDeclaration", "scope": 689, "src": "14408:58:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes16", "typeString": "bytes16"}, "typeName": {"id": 490, "name": "bytes16", "nodeType": "ElementaryTypeName", "src": "14408:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes16", "typeString": "bytes16"}}, "value": {"hexValue": "30313233343536373839616263646566", "id": 491, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "14448:18:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f", "typeString": "literal_string \"0123456789abcdef\""}, "value": "0123456789abcdef"}, "visibility": "private"}, {"body": {"id": 570, "nodeType": "Block", "src": "14639:632:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 500, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "14841:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 501, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14850:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14841:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 506, "nodeType": "IfStatement", "src": "14837:51:0", "trueBody": {"id": 505, "nodeType": "Block", "src": "14853:35:0", "statements": [{"expression": {"hexValue": "30", "id": 503, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "14874:3:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\""}, "value": "0"}, "functionReturnParameters": 499, "id": 504, "nodeType": "Return", "src": "14867:10:0"}]}}, {"assignments": [508], "declarations": [{"constant": false, "id": 508, "mutability": "mutable", "name": "temp", "nameLocation": "14905:4:0", "nodeType": "VariableDeclaration", "scope": 570, "src": "14897:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 507, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14897:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 510, "initialValue": {"id": 509, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "14912:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14897:20:0"}, {"assignments": [512], "declarations": [{"constant": false, "id": 512, "mutability": "mutable", "name": "digits", "nameLocation": "14935:6:0", "nodeType": "VariableDeclaration", "scope": 570, "src": "14927:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14927:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 513, "nodeType": "VariableDeclarationStatement", "src": "14927:14:0"}, {"body": {"id": 524, "nodeType": "Block", "src": "14969:57:0", "statements": [{"expression": {"id": 518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "14983:8:0", "subExpression": {"id": 517, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "14983:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 519, "nodeType": "ExpressionStatement", "src": "14983:8:0"}, {"expression": {"id": 522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 520, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "15005:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"hexValue": "3130", "id": 521, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15013:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "15005:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 523, "nodeType": "ExpressionStatement", "src": "15005:10:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 514, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "14958:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 515, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14966:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14958:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 525, "nodeType": "WhileStatement", "src": "14951:75:0"}, {"assignments": [527], "declarations": [{"constant": false, "id": 527, "mutability": "mutable", "name": "buffer", "nameLocation": "15048:6:0", "nodeType": "VariableDeclaration", "scope": 570, "src": "15035:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 526, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15035:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 532, "initialValue": {"arguments": [{"id": 530, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "15067:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 529, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15057:9:0", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes memory)"}, "typeName": {"id": 528, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15061:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, "id": 531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15057:17:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "15035:39:0"}, {"body": {"id": 563, "nodeType": "Block", "src": "15103:131:0", "statements": [{"expression": {"id": 538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 536, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "15117:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"hexValue": "31", "id": 537, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15127:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "15117:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 539, "nodeType": "ExpressionStatement", "src": "15117:11:0"}, {"expression": {"id": 557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 540, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 527, "src": "15142:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 542, "indexExpression": {"id": 541, "name": "digits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "15149:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15142:14:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3438", "id": 547, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15172:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_48_by_1", "typeString": "int_const 48"}, "value": "48"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 550, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "15185:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"hexValue": "3130", "id": 551, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15193:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "15185:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 549, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15177:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 548, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15177:7:0", "typeDescriptions": {}}}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15177:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15172:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 546, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15166:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 545, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "15166:5:0", "typeDescriptions": {}}}, "id": 555, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15166:31:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 544, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15159:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 543, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "15159:6:0", "typeDescriptions": {}}}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15159:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "src": "15142:56:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 558, "nodeType": "ExpressionStatement", "src": "15142:56:0"}, {"expression": {"id": 561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 559, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "15212:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"hexValue": "3130", "id": 560, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15221:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "15212:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 562, "nodeType": "ExpressionStatement", "src": "15212:11:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 533, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "15091:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15100:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15091:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 564, "nodeType": "WhileStatement", "src": "15084:150:0"}, {"expression": {"arguments": [{"id": 567, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 527, "src": "15257:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 566, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15250:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 565, "name": "string", "nodeType": "ElementaryTypeName", "src": "15250:6:0", "typeDescriptions": {}}}, "id": 568, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15250:14:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 499, "id": 569, "nodeType": "Return", "src": "15243:21:0"}]}, "documentation": {"id": 493, "nodeType": "StructuredDocumentation", "src": "14473:90:0", "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."}, "id": 571, "implemented": true, "kind": "function", "modifiers": [], "name": "toString", "nameLocation": "14577:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 496, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 495, "mutability": "mutable", "name": "value", "nameLocation": "14594:5:0", "nodeType": "VariableDeclaration", "scope": 571, "src": "14586:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 494, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14586:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "14585:15:0"}, "returnParameters": {"id": 499, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 498, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 571, "src": "14624:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 497, "name": "string", "nodeType": "ElementaryTypeName", "src": "14624:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "14623:15:0"}, "scope": 689, "src": "14568:703:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 611, "nodeType": "Block", "src": "15450:255:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 581, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 579, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "15464:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 580, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15473:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15464:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 585, "nodeType": "IfStatement", "src": "15460:54:0", "trueBody": {"id": 584, "nodeType": "Block", "src": "15476:38:0", "statements": [{"expression": {"hexValue": "30783030", "id": 582, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "15497:6:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4", "typeString": "literal_string \"0x00\""}, "value": "0x00"}, "functionReturnParameters": 578, "id": 583, "nodeType": "Return", "src": "15490:13:0"}]}}, {"assignments": [587], "declarations": [{"constant": false, "id": 587, "mutability": "mutable", "name": "temp", "nameLocation": "15531:4:0", "nodeType": "VariableDeclaration", "scope": 611, "src": "15523:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 586, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15523:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 589, "initialValue": {"id": 588, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "15538:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "15523:20:0"}, {"assignments": [591], "declarations": [{"constant": false, "id": 591, "mutability": "mutable", "name": "length", "nameLocation": "15561:6:0", "nodeType": "VariableDeclaration", "scope": 611, "src": "15553:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 590, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15553:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 593, "initialValue": {"hexValue": "30", "id": 592, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15570:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "15553:18:0"}, {"body": {"id": 604, "nodeType": "Block", "src": "15599:57:0", "statements": [{"expression": {"id": 598, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "15613:8:0", "subExpression": {"id": 597, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 591, "src": "15613:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 599, "nodeType": "ExpressionStatement", "src": "15613:8:0"}, {"expression": {"id": 602, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 600, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 587, "src": "15635:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": {"hexValue": "38", "id": 601, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15644:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "15635:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 603, "nodeType": "ExpressionStatement", "src": "15635:10:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 596, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 594, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 587, "src": "15588:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15596:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15588:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 605, "nodeType": "WhileStatement", "src": "15581:75:0"}, {"expression": {"arguments": [{"id": 607, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 574, "src": "15684:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 608, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 591, "src": "15691:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 606, "name": "toHexString", "nodeType": "Identifier", "overloadedDeclarations": [612, 688], "referencedDeclaration": 688, "src": "15672:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256,uint256) pure returns (string memory)"}}, "id": 609, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15672:26:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 578, "id": 610, "nodeType": "Return", "src": "15665:33:0"}]}, "documentation": {"id": 572, "nodeType": "StructuredDocumentation", "src": "15277:94:0", "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."}, "id": 612, "implemented": true, "kind": "function", "modifiers": [], "name": "toHexString", "nameLocation": "15385:11:0", "nodeType": "FunctionDefinition", "parameters": {"id": 575, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 574, "mutability": "mutable", "name": "value", "nameLocation": "15405:5:0", "nodeType": "VariableDeclaration", "scope": 612, "src": "15397:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 573, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15397:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "15396:15:0"}, "returnParameters": {"id": 578, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 577, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 612, "src": "15435:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 576, "name": "string", "nodeType": "ElementaryTypeName", "src": "15435:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "15434:15:0"}, "scope": 689, "src": "15376:329:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 687, "nodeType": "Block", "src": "15946:351:0", "statements": [{"assignments": [623], "declarations": [{"constant": false, "id": 623, "mutability": "mutable", "name": "buffer", "nameLocation": "15969:6:0", "nodeType": "VariableDeclaration", "scope": 687, "src": "15956:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 622, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15956:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 632, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 630, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "32", "id": 626, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15988:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 627, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "15992:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15988:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "32", "id": 629, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16001:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "15988:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 625, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15978:9:0", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes memory)"}, "typeName": {"id": 624, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "15982:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, "id": 631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15978:25:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "15956:47:0"}, {"expression": {"id": 637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 633, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "16013:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 635, "indexExpression": {"hexValue": "30", "id": 634, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16020:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "16013:9:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 636, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16025:3:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\""}, "value": "0"}, "src": "16013:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 638, "nodeType": "ExpressionStatement", "src": "16013:15:0"}, {"expression": {"id": 643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 639, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "16038:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 641, "indexExpression": {"hexValue": "31", "id": 640, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16045:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "16038:9:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "78", "id": 642, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16050:3:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83", "typeString": "literal_string \"x\""}, "value": "x"}, "src": "16038:15:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 644, "nodeType": "ExpressionStatement", "src": "16038:15:0"}, {"body": {"id": 673, "nodeType": "Block", "src": "16108:87:0", "statements": [{"expression": {"id": 667, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 659, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "16122:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 661, "indexExpression": {"id": 660, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "16129:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "16122:9:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 662, "name": "_HEX_SYMBOLS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 492, "src": "16134:12:0", "typeDescriptions": {"typeIdentifier": "t_bytes16", "typeString": "bytes16"}}, "id": 666, "indexExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 665, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 663, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "16147:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "&", "rightExpression": {"hexValue": "307866", "id": 664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16155:3:0", "typeDescriptions": {"typeIdentifier": "t_rational_15_by_1", "typeString": "int_const 15"}, "value": "0xf"}, "src": "16147:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16134:25:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "src": "16122:37:0", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 668, "nodeType": "ExpressionStatement", "src": "16122:37:0"}, {"expression": {"id": 671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 669, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "16173:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": ">>=", "rightHandSide": {"hexValue": "34", "id": 670, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16183:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "src": "16173:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 672, "nodeType": "ExpressionStatement", "src": "16173:11:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 653, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "16096:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "31", "id": 654, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16100:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "16096:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 674, "initializationExpression": {"assignments": [646], "declarations": [{"constant": false, "id": 646, "mutability": "mutable", "name": "i", "nameLocation": "16076:1:0", "nodeType": "VariableDeclaration", "scope": 674, "src": "16068:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 645, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16068:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 652, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 651, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 649, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "32", "id": 647, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16080:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 648, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 617, "src": "16084:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16080:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 650, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16093:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "16080:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "16068:26:0"}, "loopExpression": {"expression": {"id": 657, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": true, "src": "16103:3:0", "subExpression": {"id": 656, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 646, "src": "16105:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 658, "nodeType": "ExpressionStatement", "src": "16103:3:0"}, "nodeType": "ForStatement", "src": "16063:132:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 678, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 676, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 615, "src": "16212:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 677, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16221:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16212:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74", "id": 679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "16224:34:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2", "typeString": "literal_string \"Strings: hex length insufficient\""}, "value": "Strings: hex length insufficient"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2", "typeString": "literal_string \"Strings: hex length insufficient\""}], "id": 675, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16204:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 680, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16204:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 681, "nodeType": "ExpressionStatement", "src": "16204:55:0"}, {"expression": {"arguments": [{"id": 684, "name": "buffer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 623, "src": "16283:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 683, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "16276:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 682, "name": "string", "nodeType": "ElementaryTypeName", "src": "16276:6:0", "typeDescriptions": {}}}, "id": 685, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16276:14:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 621, "id": 686, "nodeType": "Return", "src": "16269:21:0"}]}, "documentation": {"id": 613, "nodeType": "StructuredDocumentation", "src": "15711:112:0", "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."}, "id": 688, "implemented": true, "kind": "function", "modifiers": [], "name": "toHexString", "nameLocation": "15837:11:0", "nodeType": "FunctionDefinition", "parameters": {"id": 618, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 615, "mutability": "mutable", "name": "value", "nameLocation": "15857:5:0", "nodeType": "VariableDeclaration", "scope": 688, "src": "15849:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 614, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15849:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 617, "mutability": "mutable", "name": "length", "nameLocation": "15872:6:0", "nodeType": "VariableDeclaration", "scope": 688, "src": "15864:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 616, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15864:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "15848:31:0"}, "returnParameters": {"id": 621, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 620, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 688, "src": "15927:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 619, "name": "string", "nodeType": "ElementaryTypeName", "src": "15927:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "15926:15:0"}, "scope": 689, "src": "15828:469:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 2639, "src": "14386:1913:0", "usedErrors": []}, {"id": 690, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "16353:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Address", "contractDependencies": [], "contractKind": "library", "documentation": {"id": 691, "nodeType": "StructuredDocumentation", "src": "16378:67:0", "text": " @dev Collection of functions related to the address type"}, "fullyImplemented": true, "id": 985, "linearizedBaseContracts": [985], "name": "Address", "nameLocation": "16454:7:0", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 707, "nodeType": "Block", "src": "17104:311:0", "statements": [{"assignments": [700], "declarations": [{"constant": false, "id": 700, "mutability": "mutable", "name": "size", "nameLocation": "17309:4:0", "nodeType": "VariableDeclaration", "scope": 707, "src": "17301:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 699, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17301:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 701, "nodeType": "VariableDeclarationStatement", "src": "17301:12:0"}, {"AST": {"nodeType": "YulBlock", "src": "17332:52:0", "statements": [{"nodeType": "YulAssignment", "src": "17346:28:0", "value": {"arguments": [{"name": "account", "nodeType": "YulIdentifier", "src": "17366:7:0"}], "functionName": {"name": "extcodesize", "nodeType": "YulIdentifier", "src": "17354:11:0"}, "nodeType": "YulFunctionCall", "src": "17354:20:0"}, "variableNames": [{"name": "size", "nodeType": "YulIdentifier", "src": "17346:4:0"}]}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 694, "isOffset": false, "isSlot": false, "src": "17366:7:0", "valueSize": 1}, {"declaration": 700, "isOffset": false, "isSlot": false, "src": "17346:4:0", "valueSize": 1}], "id": 702, "nodeType": "InlineAssembly", "src": "17323:61:0"}, {"expression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 703, "name": "size", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 700, "src": "17400:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 704, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17407:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17400:8:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 698, "id": 706, "nodeType": "Return", "src": "17393:15:0"}]}, "documentation": {"id": 692, "nodeType": "StructuredDocumentation", "src": "16468:565:0", "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="}, "id": 708, "implemented": true, "kind": "function", "modifiers": [], "name": "isContract", "nameLocation": "17047:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 695, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 694, "mutability": "mutable", "name": "account", "nameLocation": "17066:7:0", "nodeType": "VariableDeclaration", "scope": 708, "src": "17058:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 693, "name": "address", "nodeType": "ElementaryTypeName", "src": "17058:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "17057:17:0"}, "returnParameters": {"id": 698, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 697, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 708, "src": "17098:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 696, "name": "bool", "nodeType": "ElementaryTypeName", "src": "17098:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "17097:6:0"}, "scope": 985, "src": "17038:377:0", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 741, "nodeType": "Block", "src": "18403:309:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 719, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "18442:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$985", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$985", "typeString": "library Address"}], "id": 718, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "18434:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 717, "name": "address", "nodeType": "ElementaryTypeName", "src": "18434:7:0", "typeDescriptions": {}}}, "id": 720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18434:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "18434:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 722, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "18459:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18434:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365", "id": 724, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18479:31:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}, "value": "Address: insufficient balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9", "typeString": "literal_string \"Address: insufficient balance\""}], "id": 716, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "18413:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 725, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18413:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 726, "nodeType": "ExpressionStatement", "src": "18413:107:0"}, {"assignments": [728, null], "declarations": [{"constant": false, "id": 728, "mutability": "mutable", "name": "success", "nameLocation": "18537:7:0", "nodeType": "VariableDeclaration", "scope": 741, "src": "18532:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 727, "name": "bool", "nodeType": "ElementaryTypeName", "src": "18532:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 735, "initialValue": {"arguments": [{"hexValue": "", "id": 733, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18580:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"id": 729, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 711, "src": "18550:9:0", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 730, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "18550:14:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 731, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 713, "src": "18572:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "18550:29:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 734, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18550:33:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "18531:52:0"}, {"expression": {"arguments": [{"id": 737, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 728, "src": "18614:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564", "id": 738, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "18635:60:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}, "value": "Address: unable to send value, recipient may have reverted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae", "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""}], "id": 736, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "18593:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 739, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18593:112:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 740, "nodeType": "ExpressionStatement", "src": "18593:112:0"}]}, "documentation": {"id": 709, "nodeType": "StructuredDocumentation", "src": "17421:906:0", "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."}, "id": 742, "implemented": true, "kind": "function", "modifiers": [], "name": "sendValue", "nameLocation": "18341:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 714, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 711, "mutability": "mutable", "name": "recipient", "nameLocation": "18367:9:0", "nodeType": "VariableDeclaration", "scope": 742, "src": "18351:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, "typeName": {"id": 710, "name": "address", "nodeType": "ElementaryTypeName", "src": "18351:15:0", "stateMutability": "payable", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "visibility": "internal"}, {"constant": false, "id": 713, "mutability": "mutable", "name": "amount", "nameLocation": "18386:6:0", "nodeType": "VariableDeclaration", "scope": 742, "src": "18378:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 712, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "18378:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "18350:43:0"}, "returnParameters": {"id": 715, "nodeType": "ParameterList", "parameters": [], "src": "18403:0:0"}, "scope": 985, "src": "18332:380:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 758, "nodeType": "Block", "src": "19563:84:0", "statements": [{"expression": {"arguments": [{"id": 753, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 745, "src": "19593:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 754, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 747, "src": "19601:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564", "id": 755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "19607:32:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}, "value": "Address: low-level call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df", "typeString": "literal_string \"Address: low-level call failed\""}], "id": 752, "name": "functionCall", "nodeType": "Identifier", "overloadedDeclarations": [759, 779], "referencedDeclaration": 779, "src": "19580:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"}}, "id": 756, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "19580:60:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 751, "id": 757, "nodeType": "Return", "src": "19573:67:0"}]}, "documentation": {"id": 743, "nodeType": "StructuredDocumentation", "src": "18718:731:0", "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"}, "id": 759, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nameLocation": "19463:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 748, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 745, "mutability": "mutable", "name": "target", "nameLocation": "19484:6:0", "nodeType": "VariableDeclaration", "scope": 759, "src": "19476:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 744, "name": "address", "nodeType": "ElementaryTypeName", "src": "19476:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 747, "mutability": "mutable", "name": "data", "nameLocation": "19505:4:0", "nodeType": "VariableDeclaration", "scope": 759, "src": "19492:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 746, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19492:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "19475:35:0"}, "returnParameters": {"id": 751, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 750, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 759, "src": "19545:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 749, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19545:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "19544:14:0"}, "scope": 985, "src": "19454:193:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 778, "nodeType": "Block", "src": "20016:76:0", "statements": [{"expression": {"arguments": [{"id": 772, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 762, "src": "20055:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 773, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 764, "src": "20063:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "30", "id": 774, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "20069:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 775, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 766, "src": "20072:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 771, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [799, 849], "referencedDeclaration": 849, "src": "20033:21:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20033:52:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 770, "id": 777, "nodeType": "Return", "src": "20026:59:0"}]}, "documentation": {"id": 760, "nodeType": "StructuredDocumentation", "src": "19653:211:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 779, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCall", "nameLocation": "19878:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 767, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 762, "mutability": "mutable", "name": "target", "nameLocation": "19908:6:0", "nodeType": "VariableDeclaration", "scope": 779, "src": "19900:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 761, "name": "address", "nodeType": "ElementaryTypeName", "src": "19900:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 764, "mutability": "mutable", "name": "data", "nameLocation": "19937:4:0", "nodeType": "VariableDeclaration", "scope": 779, "src": "19924:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 763, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "19924:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 766, "mutability": "mutable", "name": "errorMessage", "nameLocation": "19965:12:0", "nodeType": "VariableDeclaration", "scope": 779, "src": "19951:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 765, "name": "string", "nodeType": "ElementaryTypeName", "src": "19951:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "19890:93:0"}, "returnParameters": {"id": 770, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 769, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 779, "src": "20002:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 768, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20002:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20001:14:0"}, "scope": 985, "src": "19869:223:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 798, "nodeType": "Block", "src": "20597:201:0", "statements": [{"expression": {"arguments": [{"id": 792, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 782, "src": "20665:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 793, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 784, "src": "20689:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 794, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 786, "src": "20711:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564", "id": 795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "20734:43:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}, "value": "Address: low-level call with value failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc", "typeString": "literal_string \"Address: low-level call with value failed\""}], "id": 791, "name": "functionCallWithValue", "nodeType": "Identifier", "overloadedDeclarations": [799, 849], "referencedDeclaration": 849, "src": "20626:21:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"}}, "id": 796, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "20626:165:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 790, "id": 797, "nodeType": "Return", "src": "20607:184:0"}]}, "documentation": {"id": 780, "nodeType": "StructuredDocumentation", "src": "20098:351:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"}, "id": 799, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nameLocation": "20463:21:0", "nodeType": "FunctionDefinition", "parameters": {"id": 787, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 782, "mutability": "mutable", "name": "target", "nameLocation": "20502:6:0", "nodeType": "VariableDeclaration", "scope": 799, "src": "20494:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 781, "name": "address", "nodeType": "ElementaryTypeName", "src": "20494:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 784, "mutability": "mutable", "name": "data", "nameLocation": "20531:4:0", "nodeType": "VariableDeclaration", "scope": 799, "src": "20518:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 783, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20518:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 786, "mutability": "mutable", "name": "value", "nameLocation": "20553:5:0", "nodeType": "VariableDeclaration", "scope": 799, "src": "20545:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 785, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "20545:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "20484:80:0"}, "returnParameters": {"id": 790, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 789, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 799, "src": "20583:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 788, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "20583:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "20582:14:0"}, "scope": 985, "src": "20454:344:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 848, "nodeType": "Block", "src": "21225:376:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 820, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 816, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "21264:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_Address_$985", "typeString": "library Address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_Address_$985", "typeString": "library Address"}], "id": 815, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "21256:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 814, "name": "address", "nodeType": "ElementaryTypeName", "src": "21256:7:0", "typeDescriptions": {}}}, "id": 817, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21256:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 818, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "21256:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 819, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 806, "src": "21281:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "21256:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c", "id": 821, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21300:40:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}, "value": "Address: insufficient balance for call"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c", "typeString": "literal_string \"Address: insufficient balance for call\""}], "id": 813, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "21235:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21235:115:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 823, "nodeType": "ExpressionStatement", "src": "21235:115:0"}, {"expression": {"arguments": [{"arguments": [{"id": 826, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "21379:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 825, "name": "isContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "21368:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 827, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21368:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374", "id": 828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "21388:31:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}, "value": "Address: call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad", "typeString": "literal_string \"Address: call to non-contract\""}], "id": 824, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "21360:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 829, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21360:60:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 830, "nodeType": "ExpressionStatement", "src": "21360:60:0"}, {"assignments": [832, 834], "declarations": [{"constant": false, "id": 832, "mutability": "mutable", "name": "success", "nameLocation": "21437:7:0", "nodeType": "VariableDeclaration", "scope": 848, "src": "21432:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 831, "name": "bool", "nodeType": "ElementaryTypeName", "src": "21432:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 834, "mutability": "mutable", "name": "returndata", "nameLocation": "21459:10:0", "nodeType": "VariableDeclaration", "scope": 848, "src": "21446:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 833, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21446:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 841, "initialValue": {"arguments": [{"id": 839, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 804, "src": "21512:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 835, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 802, "src": "21473:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 836, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "21473:11:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 838, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 837, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 806, "src": "21492:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "21473:25:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 840, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21473:53:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "21431:95:0"}, {"expression": {"arguments": [{"id": 843, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 832, "src": "21560:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 844, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 834, "src": "21569:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 845, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 808, "src": "21581:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 842, "name": "verifyCallResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 984, "src": "21543:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"}}, "id": 846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21543:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 812, "id": 847, "nodeType": "Return", "src": "21536:58:0"}]}, "documentation": {"id": 800, "nodeType": "StructuredDocumentation", "src": "20804:237:0", "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"}, "id": 849, "implemented": true, "kind": "function", "modifiers": [], "name": "functionCallWithValue", "nameLocation": "21055:21:0", "nodeType": "FunctionDefinition", "parameters": {"id": 809, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 802, "mutability": "mutable", "name": "target", "nameLocation": "21094:6:0", "nodeType": "VariableDeclaration", "scope": 849, "src": "21086:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 801, "name": "address", "nodeType": "ElementaryTypeName", "src": "21086:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 804, "mutability": "mutable", "name": "data", "nameLocation": "21123:4:0", "nodeType": "VariableDeclaration", "scope": 849, "src": "21110:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 803, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21110:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 806, "mutability": "mutable", "name": "value", "nameLocation": "21145:5:0", "nodeType": "VariableDeclaration", "scope": 849, "src": "21137:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 805, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "21137:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 808, "mutability": "mutable", "name": "errorMessage", "nameLocation": "21174:12:0", "nodeType": "VariableDeclaration", "scope": 849, "src": "21160:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 807, "name": "string", "nodeType": "ElementaryTypeName", "src": "21160:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "21076:116:0"}, "returnParameters": {"id": 812, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 811, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 849, "src": "21211:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 810, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21211:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21210:14:0"}, "scope": 985, "src": "21046:555:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 865, "nodeType": "Block", "src": "21906:171:0", "statements": [{"expression": {"arguments": [{"id": 860, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 852, "src": "21971:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 861, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 854, "src": "21995:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564", "id": 862, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "22017:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0", "typeString": "literal_string \"Address: low-level static call failed\""}, "value": "Address: low-level static call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0", "typeString": "literal_string \"Address: low-level static call failed\""}], "id": 859, "name": "functionStaticCall", "nodeType": "Identifier", "overloadedDeclarations": [866, 901], "referencedDeclaration": 901, "src": "21935:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"}}, "id": 863, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "21935:135:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 858, "id": 864, "nodeType": "Return", "src": "21916:154:0"}]}, "documentation": {"id": 850, "nodeType": "StructuredDocumentation", "src": "21607:166:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"}, "id": 866, "implemented": true, "kind": "function", "modifiers": [], "name": "functionStaticCall", "nameLocation": "21787:18:0", "nodeType": "FunctionDefinition", "parameters": {"id": 855, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 852, "mutability": "mutable", "name": "target", "nameLocation": "21814:6:0", "nodeType": "VariableDeclaration", "scope": 866, "src": "21806:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 851, "name": "address", "nodeType": "ElementaryTypeName", "src": "21806:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 854, "mutability": "mutable", "name": "data", "nameLocation": "21835:4:0", "nodeType": "VariableDeclaration", "scope": 866, "src": "21822:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 853, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21822:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21805:35:0"}, "returnParameters": {"id": 858, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 857, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 866, "src": "21888:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 856, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "21888:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "21887:14:0"}, "scope": 985, "src": "21778:299:0", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 900, "nodeType": "Block", "src": "22419:228:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 880, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "22448:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 879, "name": "isContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "22437:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22437:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374", "id": 882, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "22457:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9", "typeString": "literal_string \"Address: static call to non-contract\""}, "value": "Address: static call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9", "typeString": "literal_string \"Address: static call to non-contract\""}], "id": 878, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "22429:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 883, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22429:67:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 884, "nodeType": "ExpressionStatement", "src": "22429:67:0"}, {"assignments": [886, 888], "declarations": [{"constant": false, "id": 886, "mutability": "mutable", "name": "success", "nameLocation": "22513:7:0", "nodeType": "VariableDeclaration", "scope": 900, "src": "22508:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 885, "name": "bool", "nodeType": "ElementaryTypeName", "src": "22508:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 888, "mutability": "mutable", "name": "returndata", "nameLocation": "22535:10:0", "nodeType": "VariableDeclaration", "scope": 900, "src": "22522:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 887, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22522:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 893, "initialValue": {"arguments": [{"id": 891, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 871, "src": "22567:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 889, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 869, "src": "22549:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 890, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "staticcall", "nodeType": "MemberAccess", "src": "22549:17:0", "typeDescriptions": {"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) view returns (bool,bytes memory)"}}, "id": 892, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22549:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "22507:65:0"}, {"expression": {"arguments": [{"id": 895, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 886, "src": "22606:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 896, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 888, "src": "22615:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 897, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 873, "src": "22627:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 894, "name": "verifyCallResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 984, "src": "22589:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"}}, "id": 898, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22589:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 877, "id": 899, "nodeType": "Return", "src": "22582:58:0"}]}, "documentation": {"id": 867, "nodeType": "StructuredDocumentation", "src": "22083:173:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"}, "id": 901, "implemented": true, "kind": "function", "modifiers": [], "name": "functionStaticCall", "nameLocation": "22270:18:0", "nodeType": "FunctionDefinition", "parameters": {"id": 874, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 869, "mutability": "mutable", "name": "target", "nameLocation": "22306:6:0", "nodeType": "VariableDeclaration", "scope": 901, "src": "22298:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 868, "name": "address", "nodeType": "ElementaryTypeName", "src": "22298:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 871, "mutability": "mutable", "name": "data", "nameLocation": "22335:4:0", "nodeType": "VariableDeclaration", "scope": 901, "src": "22322:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 870, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22322:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 873, "mutability": "mutable", "name": "errorMessage", "nameLocation": "22363:12:0", "nodeType": "VariableDeclaration", "scope": 901, "src": "22349:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 872, "name": "string", "nodeType": "ElementaryTypeName", "src": "22349:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "22288:93:0"}, "returnParameters": {"id": 877, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 876, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 901, "src": "22405:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 875, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22405:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22404:14:0"}, "scope": 985, "src": "22261:386:0", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 917, "nodeType": "Block", "src": "22943:175:0", "statements": [{"expression": {"arguments": [{"id": 912, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 904, "src": "23010:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 913, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 906, "src": "23034:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564", "id": 914, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23056:41:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398", "typeString": "literal_string \"Address: low-level delegate call failed\""}, "value": "Address: low-level delegate call failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398", "typeString": "literal_string \"Address: low-level delegate call failed\""}], "id": 911, "name": "functionDelegateCall", "nodeType": "Identifier", "overloadedDeclarations": [918, 953], "referencedDeclaration": 953, "src": "22972:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"}}, "id": 915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "22972:139:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 910, "id": 916, "nodeType": "Return", "src": "22953:158:0"}]}, "documentation": {"id": 902, "nodeType": "StructuredDocumentation", "src": "22653:168:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"}, "id": 918, "implemented": true, "kind": "function", "modifiers": [], "name": "functionDelegateCall", "nameLocation": "22835:20:0", "nodeType": "FunctionDefinition", "parameters": {"id": 907, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 904, "mutability": "mutable", "name": "target", "nameLocation": "22864:6:0", "nodeType": "VariableDeclaration", "scope": 918, "src": "22856:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 903, "name": "address", "nodeType": "ElementaryTypeName", "src": "22856:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 906, "mutability": "mutable", "name": "data", "nameLocation": "22885:4:0", "nodeType": "VariableDeclaration", "scope": 918, "src": "22872:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 905, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22872:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22855:35:0"}, "returnParameters": {"id": 910, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 909, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 918, "src": "22925:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 908, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "22925:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "22924:14:0"}, "scope": 985, "src": "22826:292:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 952, "nodeType": "Block", "src": "23459:232:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 932, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "23488:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 931, "name": "isContract", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 708, "src": "23477:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 933, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23477:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374", "id": 934, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "23497:40:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520", "typeString": "literal_string \"Address: delegate call to non-contract\""}, "value": "Address: delegate call to non-contract"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520", "typeString": "literal_string \"Address: delegate call to non-contract\""}], "id": 930, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "23469:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 935, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23469:69:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 936, "nodeType": "ExpressionStatement", "src": "23469:69:0"}, {"assignments": [938, 940], "declarations": [{"constant": false, "id": 938, "mutability": "mutable", "name": "success", "nameLocation": "23555:7:0", "nodeType": "VariableDeclaration", "scope": 952, "src": "23550:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 937, "name": "bool", "nodeType": "ElementaryTypeName", "src": "23550:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 940, "mutability": "mutable", "name": "returndata", "nameLocation": "23577:10:0", "nodeType": "VariableDeclaration", "scope": 952, "src": "23564:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 939, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23564:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 945, "initialValue": {"arguments": [{"id": 943, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 923, "src": "23611:4:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 941, "name": "target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 921, "src": "23591:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 942, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "delegatecall", "nodeType": "MemberAccess", "src": "23591:19:0", "typeDescriptions": {"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) returns (bool,bytes memory)"}}, "id": 944, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23591:25:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "23549:67:0"}, {"expression": {"arguments": [{"id": 947, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 938, "src": "23650:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 948, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 940, "src": "23659:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 949, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 925, "src": "23671:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 946, "name": "verifyCallResult", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 984, "src": "23633:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$", "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"}}, "id": 950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "23633:51:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 929, "id": 951, "nodeType": "Return", "src": "23626:58:0"}]}, "documentation": {"id": 919, "nodeType": "StructuredDocumentation", "src": "23124:175:0", "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"}, "id": 953, "implemented": true, "kind": "function", "modifiers": [], "name": "functionDelegateCall", "nameLocation": "23313:20:0", "nodeType": "FunctionDefinition", "parameters": {"id": 926, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 921, "mutability": "mutable", "name": "target", "nameLocation": "23351:6:0", "nodeType": "VariableDeclaration", "scope": 953, "src": "23343:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 920, "name": "address", "nodeType": "ElementaryTypeName", "src": "23343:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 923, "mutability": "mutable", "name": "data", "nameLocation": "23380:4:0", "nodeType": "VariableDeclaration", "scope": 953, "src": "23367:17:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 922, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23367:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 925, "mutability": "mutable", "name": "errorMessage", "nameLocation": "23408:12:0", "nodeType": "VariableDeclaration", "scope": 953, "src": "23394:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 924, "name": "string", "nodeType": "ElementaryTypeName", "src": "23394:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "23333:93:0"}, "returnParameters": {"id": 929, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 928, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 953, "src": "23445:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 927, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23445:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "23444:14:0"}, "scope": 985, "src": "23304:387:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 983, "nodeType": "Block", "src": "24071:532:0", "statements": [{"condition": {"id": 965, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 956, "src": "24085:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 981, "nodeType": "Block", "src": "24142:455:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 969, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 958, "src": "24226:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "24226:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 971, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "24246:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "24226:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 979, "nodeType": "Block", "src": "24534:53:0", "statements": [{"expression": {"arguments": [{"id": 976, "name": "errorMessage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 960, "src": "24559:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 975, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "24552:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 977, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "24552:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 978, "nodeType": "ExpressionStatement", "src": "24552:20:0"}]}, "id": 980, "nodeType": "IfStatement", "src": "24222:365:0", "trueBody": {"id": 974, "nodeType": "Block", "src": "24249:279:0", "statements": [{"AST": {"nodeType": "YulBlock", "src": "24369:145:0", "statements": [{"nodeType": "YulVariableDeclaration", "src": "24391:40:0", "value": {"arguments": [{"name": "returndata", "nodeType": "YulIdentifier", "src": "24420:10:0"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "24414:5:0"}, "nodeType": "YulFunctionCall", "src": "24414:17:0"}, "variables": [{"name": "returndata_size", "nodeType": "YulTypedName", "src": "24395:15:0", "type": ""}]}, {"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "24463:2:0", "type": "", "value": "32"}, {"name": "returndata", "nodeType": "YulIdentifier", "src": "24467:10:0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "24459:3:0"}, "nodeType": "YulFunctionCall", "src": "24459:19:0"}, {"name": "returndata_size", "nodeType": "YulIdentifier", "src": "24480:15:0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "24452:6:0"}, "nodeType": "YulFunctionCall", "src": "24452:44:0"}, "nodeType": "YulExpressionStatement", "src": "24452:44:0"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 958, "isOffset": false, "isSlot": false, "src": "24420:10:0", "valueSize": 1}, {"declaration": 958, "isOffset": false, "isSlot": false, "src": "24467:10:0", "valueSize": 1}], "id": 973, "nodeType": "InlineAssembly", "src": "24360:154:0"}]}}]}, "id": 982, "nodeType": "IfStatement", "src": "24081:516:0", "trueBody": {"id": 968, "nodeType": "Block", "src": "24094:42:0", "statements": [{"expression": {"id": 966, "name": "returndata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 958, "src": "24115:10:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "functionReturnParameters": 964, "id": 967, "nodeType": "Return", "src": "24108:17:0"}]}}]}, "documentation": {"id": 954, "nodeType": "StructuredDocumentation", "src": "23697:209:0", "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"}, "id": 984, "implemented": true, "kind": "function", "modifiers": [], "name": "verifyCallResult", "nameLocation": "23920:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 961, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 956, "mutability": "mutable", "name": "success", "nameLocation": "23951:7:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "23946:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 955, "name": "bool", "nodeType": "ElementaryTypeName", "src": "23946:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 958, "mutability": "mutable", "name": "returndata", "nameLocation": "23981:10:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "23968:23:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 957, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "23968:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 960, "mutability": "mutable", "name": "errorMessage", "nameLocation": "24015:12:0", "nodeType": "VariableDeclaration", "scope": 984, "src": "24001:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 959, "name": "string", "nodeType": "ElementaryTypeName", "src": "24001:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "23936:97:0"}, "returnParameters": {"id": 964, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 963, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 984, "src": "24057:12:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 962, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "24057:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "24056:14:0"}, "scope": 985, "src": "23911:692:0", "stateMutability": "pure", "virtual": false, "visibility": "internal"}], "scope": 2639, "src": "16446:8159:0", "usedErrors": []}, {"id": 986, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "24685:23:0"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 988, "name": "IERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 436, "src": "24873:7:0"}, "id": 989, "nodeType": "InheritanceSpecifier", "src": "24873:7:0"}], "canonicalName": "IERC721Metadata", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 987, "nodeType": "StructuredDocumentation", "src": "24710:133:0", "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"}, "fullyImplemented": false, "id": 1010, "linearizedBaseContracts": [1010, 436, 322], "name": "IERC721Metadata", "nameLocation": "24854:15:0", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 990, "nodeType": "StructuredDocumentation", "src": "24887:58:0", "text": " @dev Returns the token collection name."}, "functionSelector": "06fdde03", "id": 995, "implemented": false, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "24959:4:0", "nodeType": "FunctionDefinition", "parameters": {"id": 991, "nodeType": "ParameterList", "parameters": [], "src": "24963:2:0"}, "returnParameters": {"id": 994, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 993, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 995, "src": "24989:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 992, "name": "string", "nodeType": "ElementaryTypeName", "src": "24989:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "24988:15:0"}, "scope": 1010, "src": "24950:54:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 996, "nodeType": "StructuredDocumentation", "src": "25010:60:0", "text": " @dev Returns the token collection symbol."}, "functionSelector": "95d89b41", "id": 1001, "implemented": false, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "25084:6:0", "nodeType": "FunctionDefinition", "parameters": {"id": 997, "nodeType": "ParameterList", "parameters": [], "src": "25090:2:0"}, "returnParameters": {"id": 1000, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 999, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1001, "src": "25116:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 998, "name": "string", "nodeType": "ElementaryTypeName", "src": "25116:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "25115:15:0"}, "scope": 1010, "src": "25075:56:0", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"documentation": {"id": 1002, "nodeType": "StructuredDocumentation", "src": "25137:90:0", "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."}, "functionSelector": "c87b56dd", "id": 1009, "implemented": false, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "25241:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1005, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1004, "mutability": "mutable", "name": "tokenId", "nameLocation": "25258:7:0", "nodeType": "VariableDeclaration", "scope": 1009, "src": "25250:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1003, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "25250:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "25249:17:0"}, "returnParameters": {"id": 1008, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1007, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1009, "src": "25290:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1006, "name": "string", "nodeType": "ElementaryTypeName", "src": "25290:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "25289:15:0"}, "scope": 1010, "src": "25232:73:0", "stateMutability": "view", "virtual": false, "visibility": "external"}], "scope": 2639, "src": "24844:463:0", "usedErrors": []}, {"id": 1011, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "25376:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "IERC721Receiver", "contractDependencies": [], "contractKind": "interface", "documentation": {"id": 1012, "nodeType": "StructuredDocumentation", "src": "25401:152:0", "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."}, "fullyImplemented": false, "id": 1027, "linearizedBaseContracts": [1027], "name": "IERC721Receiver", "nameLocation": "25564:15:0", "nodeType": "ContractDefinition", "nodes": [{"documentation": {"id": 1013, "nodeType": "StructuredDocumentation", "src": "25586:485:0", "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}, "functionSelector": "150b7a02", "id": 1026, "implemented": false, "kind": "function", "modifiers": [], "name": "onERC721Received", "nameLocation": "26085:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1022, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1015, "mutability": "mutable", "name": "operator", "nameLocation": "26119:8:0", "nodeType": "VariableDeclaration", "scope": 1026, "src": "26111:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1014, "name": "address", "nodeType": "ElementaryTypeName", "src": "26111:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1017, "mutability": "mutable", "name": "from", "nameLocation": "26145:4:0", "nodeType": "VariableDeclaration", "scope": 1026, "src": "26137:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1016, "name": "address", "nodeType": "ElementaryTypeName", "src": "26137:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1019, "mutability": "mutable", "name": "tokenId", "nameLocation": "26167:7:0", "nodeType": "VariableDeclaration", "scope": 1026, "src": "26159:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1018, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "26159:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1021, "mutability": "mutable", "name": "data", "nameLocation": "26199:4:0", "nodeType": "VariableDeclaration", "scope": 1026, "src": "26184:19:0", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1020, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "26184:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "26101:108:0"}, "returnParameters": {"id": 1025, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1024, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1026, "src": "26228:6:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1023, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "26228:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "26227:8:0"}, "scope": 1027, "src": "26076:160:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 2639, "src": "25554:684:0", "usedErrors": []}, {"id": 1028, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "26291:23:0"}, {"abstract": true, "baseContracts": [], "canonicalName": "Context", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1029, "nodeType": "StructuredDocumentation", "src": "26316:496:0", "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."}, "fullyImplemented": true, "id": 1048, "linearizedBaseContracts": [1048], "name": "Context", "nameLocation": "26831:7:0", "nodeType": "ContractDefinition", "nodes": [{"body": {"id": 1037, "nodeType": "Block", "src": "26907:34:0", "statements": [{"expression": {"expression": {"id": 1034, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "26924:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "26924:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 1033, "id": 1036, "nodeType": "Return", "src": "26917:17:0"}]}, "id": 1038, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgSender", "nameLocation": "26854:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1030, "nodeType": "ParameterList", "parameters": [], "src": "26864:2:0"}, "returnParameters": {"id": 1033, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1032, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1038, "src": "26898:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1031, "name": "address", "nodeType": "ElementaryTypeName", "src": "26898:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "26897:9:0"}, "scope": 1048, "src": "26845:96:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1046, "nodeType": "Block", "src": "27014:32:0", "statements": [{"expression": {"expression": {"id": 1043, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "27031:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 1044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "data", "nodeType": "MemberAccess", "src": "27031:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "functionReturnParameters": 1042, "id": 1045, "nodeType": "Return", "src": "27024:15:0"}]}, "id": 1047, "implemented": true, "kind": "function", "modifiers": [], "name": "_msgData", "nameLocation": "26956:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1039, "nodeType": "ParameterList", "parameters": [], "src": "26964:2:0"}, "returnParameters": {"id": 1042, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1041, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1047, "src": "26998:14:0", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 1040, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "26998:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "26997:16:0"}, "scope": 1048, "src": "26947:99:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}], "scope": 2639, "src": "26813:235:0", "usedErrors": []}, {"id": 1049, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "27107:23:0"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 1051, "name": "Context", "nodeType": "IdentifierPath", "referencedDeclaration": 1048, "src": "27398:7:0"}, "id": 1052, "nodeType": "InheritanceSpecifier", "src": "27398:7:0"}, {"baseName": {"id": 1053, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 487, "src": "27407:6:0"}, "id": 1054, "nodeType": "InheritanceSpecifier", "src": "27407:6:0"}, {"baseName": {"id": 1055, "name": "IERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 436, "src": "27415:7:0"}, "id": 1056, "nodeType": "InheritanceSpecifier", "src": "27415:7:0"}, {"baseName": {"id": 1057, "name": "IERC721Metadata", "nodeType": "IdentifierPath", "referencedDeclaration": 1010, "src": "27424:15:0"}, "id": 1058, "nodeType": "InheritanceSpecifier", "src": "27424:15:0"}], "canonicalName": "ERC721", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1050, "nodeType": "StructuredDocumentation", "src": "27132:246:0", "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."}, "fullyImplemented": true, "id": 1856, "linearizedBaseContracts": [1856, 1010, 436, 487, 322, 1048], "name": "ERC721", "nameLocation": "27388:6:0", "nodeType": "ContractDefinition", "nodes": [{"id": 1061, "libraryName": {"id": 1059, "name": "Address", "nodeType": "IdentifierPath", "referencedDeclaration": 985, "src": "27452:7:0"}, "nodeType": "UsingForDirective", "src": "27446:26:0", "typeName": {"id": 1060, "name": "address", "nodeType": "ElementaryTypeName", "src": "27464:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, {"id": 1064, "libraryName": {"id": 1062, "name": "Strings", "nodeType": "IdentifierPath", "referencedDeclaration": 689, "src": "27483:7:0"}, "nodeType": "UsingForDirective", "src": "27477:26:0", "typeName": {"id": 1063, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27495:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "id": 1066, "mutability": "mutable", "name": "_name", "nameLocation": "27542:5:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27527:20:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1065, "name": "string", "nodeType": "ElementaryTypeName", "src": "27527:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 1068, "mutability": "mutable", "name": "_symbol", "nameLocation": "27589:7:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27574:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 1067, "name": "string", "nodeType": "ElementaryTypeName", "src": "27574:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 1072, "mutability": "mutable", "name": "_owners", "nameLocation": "27685:7:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27649:43:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 1071, "keyType": {"id": 1069, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27657:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "27649:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 1070, "name": "address", "nodeType": "ElementaryTypeName", "src": "27668:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "private"}, {"constant": false, "id": 1076, "mutability": "mutable", "name": "_balances", "nameLocation": "27779:9:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27743:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 1075, "keyType": {"id": 1073, "name": "address", "nodeType": "ElementaryTypeName", "src": "27751:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "27743:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 1074, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27762:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 1080, "mutability": "mutable", "name": "_tokenApprovals", "nameLocation": "27880:15:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27844:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "typeName": {"id": 1079, "keyType": {"id": 1077, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "27852:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "27844:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}, "valueType": {"id": 1078, "name": "address", "nodeType": "ElementaryTypeName", "src": "27863:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}}, "visibility": "private"}, {"constant": false, "id": 1086, "mutability": "mutable", "name": "_operatorApprovals", "nameLocation": "28003:18:0", "nodeType": "VariableDeclaration", "scope": 1856, "src": "27950:71:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "typeName": {"id": 1085, "keyType": {"id": 1081, "name": "address", "nodeType": "ElementaryTypeName", "src": "27958:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "27950:44:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}, "valueType": {"id": 1084, "keyType": {"id": 1082, "name": "address", "nodeType": "ElementaryTypeName", "src": "27977:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "27969:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 1083, "name": "bool", "nodeType": "ElementaryTypeName", "src": "27988:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}}, "visibility": "private"}, {"body": {"id": 1102, "nodeType": "Block", "src": "28197:57:0", "statements": [{"expression": {"id": 1096, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1094, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1066, "src": "28207:5:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1095, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1089, "src": "28215:5:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "28207:13:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1097, "nodeType": "ExpressionStatement", "src": "28207:13:0"}, {"expression": {"id": 1100, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 1098, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1068, "src": "28230:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1099, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1091, "src": "28240:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "28230:17:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 1101, "nodeType": "ExpressionStatement", "src": "28230:17:0"}]}, "documentation": {"id": 1087, "nodeType": "StructuredDocumentation", "src": "28028:108:0", "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."}, "id": 1103, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 1092, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1089, "mutability": "mutable", "name": "name_", "nameLocation": "28167:5:0", "nodeType": "VariableDeclaration", "scope": 1103, "src": "28153:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1088, "name": "string", "nodeType": "ElementaryTypeName", "src": "28153:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 1091, "mutability": "mutable", "name": "symbol_", "nameLocation": "28188:7:0", "nodeType": "VariableDeclaration", "scope": 1103, "src": "28174:21:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1090, "name": "string", "nodeType": "ElementaryTypeName", "src": "28174:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "28152:44:0"}, "returnParameters": {"id": 1093, "nodeType": "ParameterList", "parameters": [], "src": "28197:0:0"}, "scope": 1856, "src": "28141:113:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [321, 486], "body": {"id": 1133, "nodeType": "Block", "src": "28473:192:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1114, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "28502:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 1116, "name": "IERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "28522:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721_$436_$", "typeString": "type(contract IERC721)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC721_$436_$", "typeString": "type(contract IERC721)"}], "id": 1115, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "28517:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1117, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28517:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$436", "typeString": "type(contract IERC721)"}}, "id": 1118, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "28517:25:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "28502:40:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1120, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "28558:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 1122, "name": "IERC721Metadata", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1010, "src": "28578:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1010_$", "typeString": "type(contract IERC721Metadata)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1010_$", "typeString": "type(contract IERC721Metadata)"}], "id": 1121, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "28573:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1123, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28573:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1010", "typeString": "type(contract IERC721Metadata)"}}, "id": 1124, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "28573:33:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "28558:48:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "28502:104:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 1129, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1106, "src": "28646:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "expression": {"id": 1127, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "28622:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_ERC721_$1856_$", "typeString": "type(contract super ERC721)"}}, "id": 1128, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 486, "src": "28622:23:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)"}}, "id": 1130, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28622:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "28502:156:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1113, "id": 1132, "nodeType": "Return", "src": "28483:175:0"}]}, "documentation": {"id": 1104, "nodeType": "StructuredDocumentation", "src": "28260:56:0", "text": " @dev See {IERC165-supportsInterface}."}, "functionSelector": "01ffc9a7", "id": 1134, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "28330:17:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1110, "nodeType": "OverrideSpecifier", "overrides": [{"id": 1108, "name": "ERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 487, "src": "28429:6:0"}, {"id": 1109, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "28437:7:0"}], "src": "28420:25:0"}, "parameters": {"id": 1107, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1106, "mutability": "mutable", "name": "interfaceId", "nameLocation": "28355:11:0", "nodeType": "VariableDeclaration", "scope": 1134, "src": "28348:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1105, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "28348:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "28347:20:0"}, "returnParameters": {"id": 1113, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1112, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1134, "src": "28463:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1111, "name": "bool", "nodeType": "ElementaryTypeName", "src": "28463:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "28462:6:0"}, "scope": 1856, "src": "28321:344:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [361], "body": {"id": 1157, "nodeType": "Block", "src": "28849:158:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1144, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "28880:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1147, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "28897:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1146, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "28889:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1145, "name": "address", "nodeType": "ElementaryTypeName", "src": "28889:7:0", "typeDescriptions": {}}}, "id": 1148, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28889:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "28880:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373", "id": 1150, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "28913:44:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba", "typeString": "literal_string \"ERC721: balance query for the zero address\""}, "value": "ERC721: balance query for the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba", "typeString": "literal_string \"ERC721: balance query for the zero address\""}], "id": 1143, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "28859:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1151, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "28859:108:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1152, "nodeType": "ExpressionStatement", "src": "28859:108:0"}, {"expression": {"baseExpression": {"id": 1153, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "28984:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1155, "indexExpression": {"id": 1154, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1137, "src": "28994:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "28984:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1142, "id": 1156, "nodeType": "Return", "src": "28977:23:0"}]}, "documentation": {"id": 1135, "nodeType": "StructuredDocumentation", "src": "28671:48:0", "text": " @dev See {IERC721-balanceOf}."}, "functionSelector": "70a08231", "id": 1158, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "28733:9:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1139, "nodeType": "OverrideSpecifier", "overrides": [], "src": "28810:8:0"}, "parameters": {"id": 1138, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1137, "mutability": "mutable", "name": "owner", "nameLocation": "28751:5:0", "nodeType": "VariableDeclaration", "scope": 1158, "src": "28743:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1136, "name": "address", "nodeType": "ElementaryTypeName", "src": "28743:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "28742:15:0"}, "returnParameters": {"id": 1142, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1141, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1158, "src": "28836:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1140, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "28836:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "28835:9:0"}, "scope": 1856, "src": "28724:283:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [369], "body": {"id": 1185, "nodeType": "Block", "src": "29189:188:0", "statements": [{"assignments": [1168], "declarations": [{"constant": false, "id": 1168, "mutability": "mutable", "name": "owner", "nameLocation": "29207:5:0", "nodeType": "VariableDeclaration", "scope": 1185, "src": "29199:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1167, "name": "address", "nodeType": "ElementaryTypeName", "src": "29199:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1172, "initialValue": {"baseExpression": {"id": 1169, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "29215:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1171, "indexExpression": {"id": 1170, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1161, "src": "29223:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "29215:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "29199:32:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1174, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "29262:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "29279:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1176, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "29271:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1175, "name": "address", "nodeType": "ElementaryTypeName", "src": "29271:7:0", "typeDescriptions": {}}}, "id": 1178, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29271:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "29262:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 1180, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "29295:43:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397", "typeString": "literal_string \"ERC721: owner query for nonexistent token\""}, "value": "ERC721: owner query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397", "typeString": "literal_string \"ERC721: owner query for nonexistent token\""}], "id": 1173, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "29241:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29241:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1182, "nodeType": "ExpressionStatement", "src": "29241:107:0"}, {"expression": {"id": 1183, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1168, "src": "29365:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 1166, "id": 1184, "nodeType": "Return", "src": "29358:12:0"}]}, "documentation": {"id": 1159, "nodeType": "StructuredDocumentation", "src": "29013:46:0", "text": " @dev See {IERC721-ownerOf}."}, "functionSelector": "6352211e", "id": 1186, "implemented": true, "kind": "function", "modifiers": [], "name": "ownerOf", "nameLocation": "29073:7:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1163, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29150:8:0"}, "parameters": {"id": 1162, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1161, "mutability": "mutable", "name": "tokenId", "nameLocation": "29089:7:0", "nodeType": "VariableDeclaration", "scope": 1186, "src": "29081:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1160, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29081:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29080:17:0"}, "returnParameters": {"id": 1166, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1165, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1186, "src": "29176:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1164, "name": "address", "nodeType": "ElementaryTypeName", "src": "29176:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "29175:9:0"}, "scope": 1856, "src": "29064:313:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [995], "body": {"id": 1195, "nodeType": "Block", "src": "29508:29:0", "statements": [{"expression": {"id": 1193, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1066, "src": "29525:5:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1192, "id": 1194, "nodeType": "Return", "src": "29518:12:0"}]}, "documentation": {"id": 1187, "nodeType": "StructuredDocumentation", "src": "29383:51:0", "text": " @dev See {IERC721Metadata-name}."}, "functionSelector": "06fdde03", "id": 1196, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "29448:4:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1189, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29475:8:0"}, "parameters": {"id": 1188, "nodeType": "ParameterList", "parameters": [], "src": "29452:2:0"}, "returnParameters": {"id": 1192, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1191, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1196, "src": "29493:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1190, "name": "string", "nodeType": "ElementaryTypeName", "src": "29493:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "29492:15:0"}, "scope": 1856, "src": "29439:98:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1001], "body": {"id": 1205, "nodeType": "Block", "src": "29672:31:0", "statements": [{"expression": {"id": 1203, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1068, "src": "29689:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 1202, "id": 1204, "nodeType": "Return", "src": "29682:14:0"}]}, "documentation": {"id": 1197, "nodeType": "StructuredDocumentation", "src": "29543:53:0", "text": " @dev See {IERC721Metadata-symbol}."}, "functionSelector": "95d89b41", "id": 1206, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "29610:6:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1199, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29639:8:0"}, "parameters": {"id": 1198, "nodeType": "ParameterList", "parameters": [], "src": "29616:2:0"}, "returnParameters": {"id": 1202, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1201, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1206, "src": "29657:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1200, "name": "string", "nodeType": "ElementaryTypeName", "src": "29657:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "29656:15:0"}, "scope": 1856, "src": "29601:102:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1009], "body": {"id": 1247, "nodeType": "Block", "src": "29901:319:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 1217, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1209, "src": "29940:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1216, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1496, "src": "29932:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1218, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29932:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 1219, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "29962:49:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}, "value": "ERC721Metadata: URI query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}], "id": 1215, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "29911:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1220, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "29911:110:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1221, "nodeType": "ExpressionStatement", "src": "29911:110:0"}, {"assignments": [1223], "declarations": [{"constant": false, "id": 1223, "mutability": "mutable", "name": "baseURI", "nameLocation": "30046:7:0", "nodeType": "VariableDeclaration", "scope": 1247, "src": "30032:21:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1222, "name": "string", "nodeType": "ElementaryTypeName", "src": "30032:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "id": 1226, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 1224, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1257, "src": "30056:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$", "typeString": "function () view returns (string memory)"}}, "id": 1225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30056:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "VariableDeclarationStatement", "src": "30032:34:0"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 1229, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1223, "src": "30101:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 1228, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30095:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 1227, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "30095:5:0", "typeDescriptions": {}}}, "id": 1230, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30095:14:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1231, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "30095:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 1232, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "30119:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "30095:25:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "", "id": 1244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "30211:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, "id": 1245, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "30095:118:0", "trueExpression": {"arguments": [{"arguments": [{"id": 1238, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1223, "src": "30163:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1239, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1209, "src": "30172:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toString", "nodeType": "MemberAccess", "referencedDeclaration": 571, "src": "30172:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (string memory)"}}, "id": 1241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30172:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "expression": {"id": 1236, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "30146:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 1237, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "30146:16:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 1242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30146:45:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1235, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "30139:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 1234, "name": "string", "nodeType": "ElementaryTypeName", "src": "30139:6:0", "typeDescriptions": {}}}, "id": 1243, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30139:53:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 1214, "id": 1246, "nodeType": "Return", "src": "30076:137:0"}]}, "documentation": {"id": 1207, "nodeType": "StructuredDocumentation", "src": "29709:55:0", "text": " @dev See {IERC721Metadata-tokenURI}."}, "functionSelector": "c87b56dd", "id": 1248, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "29778:8:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1211, "nodeType": "OverrideSpecifier", "overrides": [], "src": "29856:8:0"}, "parameters": {"id": 1210, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1209, "mutability": "mutable", "name": "tokenId", "nameLocation": "29795:7:0", "nodeType": "VariableDeclaration", "scope": 1248, "src": "29787:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1208, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "29787:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "29786:17:0"}, "returnParameters": {"id": 1214, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1213, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1248, "src": "29882:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1212, "name": "string", "nodeType": "ElementaryTypeName", "src": "29882:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "29881:15:0"}, "scope": 1856, "src": "29769:451:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 1256, "nodeType": "Block", "src": "30527:26:0", "statements": [{"expression": {"hexValue": "", "id": 1254, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "30544:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, "functionReturnParameters": 1253, "id": 1255, "nodeType": "Return", "src": "30537:9:0"}]}, "documentation": {"id": 1249, "nodeType": "StructuredDocumentation", "src": "30226:230:0", "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."}, "id": 1257, "implemented": true, "kind": "function", "modifiers": [], "name": "_baseURI", "nameLocation": "30470:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1250, "nodeType": "ParameterList", "parameters": [], "src": "30478:2:0"}, "returnParameters": {"id": 1253, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1252, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1257, "src": "30512:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 1251, "name": "string", "nodeType": "ElementaryTypeName", "src": "30512:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "30511:15:0"}, "scope": 1856, "src": "30461:92:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"baseFunctions": [397], "body": {"id": 1299, "nodeType": "Block", "src": "30680:331:0", "statements": [{"assignments": [1267], "declarations": [{"constant": false, "id": 1267, "mutability": "mutable", "name": "owner", "nameLocation": "30698:5:0", "nodeType": "VariableDeclaration", "scope": 1299, "src": "30690:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1266, "name": "address", "nodeType": "ElementaryTypeName", "src": "30690:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1272, "initialValue": {"arguments": [{"id": 1270, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "30721:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1268, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "30706:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 1186, "src": "30706:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1271, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30706:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "30690:39:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1276, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1274, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1260, "src": "30747:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 1275, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "30753:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "30747:11:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572", "id": 1277, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "30760:35:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942", "typeString": "literal_string \"ERC721: approval to current owner\""}, "value": "ERC721: approval to current owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942", "typeString": "literal_string \"ERC721: approval to current owner\""}], "id": 1273, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "30739:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1278, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30739:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1279, "nodeType": "ExpressionStatement", "src": "30739:57:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1281, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "30828:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1282, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30828:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1283, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "30844:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "30828:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 1286, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1267, "src": "30870:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 1287, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "30877:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1288, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30877:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1285, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1373, "src": "30853:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 1289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30853:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "30828:62:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c", "id": 1291, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "30904:58:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d", "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""}, "value": "ERC721: approve caller is not owner nor approved for all"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d", "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""}], "id": 1280, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "30807:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1292, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30807:165:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1293, "nodeType": "ExpressionStatement", "src": "30807:165:0"}, {"expression": {"arguments": [{"id": 1295, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1260, "src": "30992:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1296, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1262, "src": "30996:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1294, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1782, "src": "30983:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1297, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "30983:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1298, "nodeType": "ExpressionStatement", "src": "30983:21:0"}]}, "documentation": {"id": 1258, "nodeType": "StructuredDocumentation", "src": "30559:46:0", "text": " @dev See {IERC721-approve}."}, "functionSelector": "095ea7b3", "id": 1300, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "30619:7:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1264, "nodeType": "OverrideSpecifier", "overrides": [], "src": "30671:8:0"}, "parameters": {"id": 1263, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1260, "mutability": "mutable", "name": "to", "nameLocation": "30635:2:0", "nodeType": "VariableDeclaration", "scope": 1300, "src": "30627:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1259, "name": "address", "nodeType": "ElementaryTypeName", "src": "30627:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1262, "mutability": "mutable", "name": "tokenId", "nameLocation": "30647:7:0", "nodeType": "VariableDeclaration", "scope": 1300, "src": "30639:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1261, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "30639:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "30626:29:0"}, "returnParameters": {"id": 1265, "nodeType": "ParameterList", "parameters": [], "src": "30680:0:0"}, "scope": 1856, "src": "30610:401:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [405], "body": {"id": 1320, "nodeType": "Block", "src": "31201:166:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 1311, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1303, "src": "31240:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1310, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1496, "src": "31232:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1312, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31232:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 1313, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "31262:46:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d", "typeString": "literal_string \"ERC721: approved query for nonexistent token\""}, "value": "ERC721: approved query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d", "typeString": "literal_string \"ERC721: approved query for nonexistent token\""}], "id": 1309, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "31211:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31211:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1315, "nodeType": "ExpressionStatement", "src": "31211:107:0"}, {"expression": {"baseExpression": {"id": 1316, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1080, "src": "31336:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1318, "indexExpression": {"id": 1317, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1303, "src": "31352:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "31336:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 1308, "id": 1319, "nodeType": "Return", "src": "31329:31:0"}]}, "documentation": {"id": 1301, "nodeType": "StructuredDocumentation", "src": "31017:50:0", "text": " @dev See {IERC721-getApproved}."}, "functionSelector": "081812fc", "id": 1321, "implemented": true, "kind": "function", "modifiers": [], "name": "getApproved", "nameLocation": "31081:11:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1305, "nodeType": "OverrideSpecifier", "overrides": [], "src": "31162:8:0"}, "parameters": {"id": 1304, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1303, "mutability": "mutable", "name": "tokenId", "nameLocation": "31101:7:0", "nodeType": "VariableDeclaration", "scope": 1321, "src": "31093:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1302, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "31093:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "31092:17:0"}, "returnParameters": {"id": 1308, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1307, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1321, "src": "31188:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1306, "name": "address", "nodeType": "ElementaryTypeName", "src": "31188:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "31187:9:0"}, "scope": 1856, "src": "31072:295:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [413], "body": {"id": 1354, "nodeType": "Block", "src": "31546:206:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1334, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1331, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1324, "src": "31564:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1332, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "31576:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1333, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31576:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "31564:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572", "id": 1335, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "31590:27:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05", "typeString": "literal_string \"ERC721: approve to caller\""}, "value": "ERC721: approve to caller"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05", "typeString": "literal_string \"ERC721: approve to caller\""}], "id": 1330, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "31556:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31556:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1337, "nodeType": "ExpressionStatement", "src": "31556:62:0"}, {"expression": {"id": 1345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 1338, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1086, "src": "31629:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 1342, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 1339, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "31648:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1340, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31648:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "31629:32:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 1343, "indexExpression": {"id": 1341, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1324, "src": "31662:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "31629:42:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1344, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1326, "src": "31674:8:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "31629:53:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 1346, "nodeType": "ExpressionStatement", "src": "31629:53:0"}, {"eventCall": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1348, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "31712:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1349, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31712:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1350, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1324, "src": "31726:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1351, "name": "approved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1326, "src": "31736:8:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 1347, "name": "ApprovalForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 353, "src": "31697:14:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,address,bool)"}}, "id": 1352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "31697:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1353, "nodeType": "EmitStatement", "src": "31692:53:0"}]}, "documentation": {"id": 1322, "nodeType": "StructuredDocumentation", "src": "31373:56:0", "text": " @dev See {IERC721-setApprovalForAll}."}, "functionSelector": "a22cb465", "id": 1355, "implemented": true, "kind": "function", "modifiers": [], "name": "setApprovalForAll", "nameLocation": "31443:17:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1328, "nodeType": "OverrideSpecifier", "overrides": [], "src": "31533:8:0"}, "parameters": {"id": 1327, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1324, "mutability": "mutable", "name": "operator", "nameLocation": "31469:8:0", "nodeType": "VariableDeclaration", "scope": 1355, "src": "31461:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1323, "name": "address", "nodeType": "ElementaryTypeName", "src": "31461:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1326, "mutability": "mutable", "name": "approved", "nameLocation": "31484:8:0", "nodeType": "VariableDeclaration", "scope": 1355, "src": "31479:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1325, "name": "bool", "nodeType": "ElementaryTypeName", "src": "31479:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "31460:33:0"}, "returnParameters": {"id": 1329, "nodeType": "ParameterList", "parameters": [], "src": "31546:0:0"}, "scope": 1856, "src": "31434:318:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [423], "body": {"id": 1372, "nodeType": "Block", "src": "31965:59:0", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 1366, "name": "_operatorApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1086, "src": "31982:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$", "typeString": "mapping(address => mapping(address => bool))"}}, "id": 1368, "indexExpression": {"id": 1367, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1358, "src": "32001:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "31982:25:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 1370, "indexExpression": {"id": 1369, "name": "operator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1360, "src": "32008:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "31982:35:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1365, "id": 1371, "nodeType": "Return", "src": "31975:42:0"}]}, "documentation": {"id": 1356, "nodeType": "StructuredDocumentation", "src": "31758:55:0", "text": " @dev See {IERC721-isApprovedForAll}."}, "functionSelector": "e985e9c5", "id": 1373, "implemented": true, "kind": "function", "modifiers": [], "name": "isApprovedForAll", "nameLocation": "31827:16:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1362, "nodeType": "OverrideSpecifier", "overrides": [], "src": "31929:8:0"}, "parameters": {"id": 1361, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1358, "mutability": "mutable", "name": "owner", "nameLocation": "31852:5:0", "nodeType": "VariableDeclaration", "scope": 1373, "src": "31844:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1357, "name": "address", "nodeType": "ElementaryTypeName", "src": "31844:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1360, "mutability": "mutable", "name": "operator", "nameLocation": "31867:8:0", "nodeType": "VariableDeclaration", "scope": 1373, "src": "31859:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1359, "name": "address", "nodeType": "ElementaryTypeName", "src": "31859:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "31843:33:0"}, "returnParameters": {"id": 1365, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1364, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1373, "src": "31955:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1363, "name": "bool", "nodeType": "ElementaryTypeName", "src": "31955:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "31954:6:0"}, "scope": 1856, "src": "31818:206:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [389], "body": {"id": 1399, "nodeType": "Block", "src": "32205:245:0", "statements": [{"expression": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1386, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "32307:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1387, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32307:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1388, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1380, "src": "32321:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1385, "name": "_isApprovedOrOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1537, "src": "32288:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) view returns (bool)"}}, "id": 1389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32288:41:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564", "id": 1390, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32343:51:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}, "value": "ERC721: transfer caller is not owner nor approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}], "id": 1384, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32267:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1391, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32267:137:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1392, "nodeType": "ExpressionStatement", "src": "32267:137:0"}, {"expression": {"arguments": [{"id": 1394, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1376, "src": "32425:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1395, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1378, "src": "32431:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1396, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1380, "src": "32435:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1393, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1758, "src": "32415:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32415:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1398, "nodeType": "ExpressionStatement", "src": "32415:28:0"}]}, "documentation": {"id": 1374, "nodeType": "StructuredDocumentation", "src": "32030:51:0", "text": " @dev See {IERC721-transferFrom}."}, "functionSelector": "23b872dd", "id": 1400, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "32095:12:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1382, "nodeType": "OverrideSpecifier", "overrides": [], "src": "32196:8:0"}, "parameters": {"id": 1381, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1376, "mutability": "mutable", "name": "from", "nameLocation": "32125:4:0", "nodeType": "VariableDeclaration", "scope": 1400, "src": "32117:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1375, "name": "address", "nodeType": "ElementaryTypeName", "src": "32117:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1378, "mutability": "mutable", "name": "to", "nameLocation": "32147:2:0", "nodeType": "VariableDeclaration", "scope": 1400, "src": "32139:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1377, "name": "address", "nodeType": "ElementaryTypeName", "src": "32139:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1380, "mutability": "mutable", "name": "tokenId", "nameLocation": "32167:7:0", "nodeType": "VariableDeclaration", "scope": 1400, "src": "32159:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32159:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "32107:73:0"}, "returnParameters": {"id": 1383, "nodeType": "ParameterList", "parameters": [], "src": "32205:0:0"}, "scope": 1856, "src": "32086:364:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [379], "body": {"id": 1418, "nodeType": "Block", "src": "32639:56:0", "statements": [{"expression": {"arguments": [{"id": 1412, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1403, "src": "32666:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1413, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1405, "src": "32672:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1414, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1407, "src": "32676:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 1415, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32685:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 1411, "name": "safeTransferFrom", "nodeType": "Identifier", "overloadedDeclarations": [1419, 1449], "referencedDeclaration": 1449, "src": "32649:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)"}}, "id": 1416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32649:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1417, "nodeType": "ExpressionStatement", "src": "32649:39:0"}]}, "documentation": {"id": 1401, "nodeType": "StructuredDocumentation", "src": "32456:55:0", "text": " @dev See {IERC721-safeTransferFrom}."}, "functionSelector": "42842e0e", "id": 1419, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "32525:16:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1409, "nodeType": "OverrideSpecifier", "overrides": [], "src": "32630:8:0"}, "parameters": {"id": 1408, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1403, "mutability": "mutable", "name": "from", "nameLocation": "32559:4:0", "nodeType": "VariableDeclaration", "scope": 1419, "src": "32551:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1402, "name": "address", "nodeType": "ElementaryTypeName", "src": "32551:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1405, "mutability": "mutable", "name": "to", "nameLocation": "32581:2:0", "nodeType": "VariableDeclaration", "scope": 1419, "src": "32573:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1404, "name": "address", "nodeType": "ElementaryTypeName", "src": "32573:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1407, "mutability": "mutable", "name": "tokenId", "nameLocation": "32601:7:0", "nodeType": "VariableDeclaration", "scope": 1419, "src": "32593:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1406, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32593:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "32541:73:0"}, "returnParameters": {"id": 1410, "nodeType": "ParameterList", "parameters": [], "src": "32639:0:0"}, "scope": 1856, "src": "32516:179:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [435], "body": {"id": 1448, "nodeType": "Block", "src": "32912:203:0", "statements": [{"expression": {"arguments": [{"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1434, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "32962:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1435, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32962:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1436, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1426, "src": "32976:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1433, "name": "_isApprovedOrOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1537, "src": "32943:18:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) view returns (bool)"}}, "id": 1437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32943:41:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564", "id": 1438, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "32998:51:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}, "value": "ERC721: transfer caller is not owner nor approved"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2", "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""}], "id": 1432, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "32922:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1439, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "32922:137:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1440, "nodeType": "ExpressionStatement", "src": "32922:137:0"}, {"expression": {"arguments": [{"id": 1442, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1422, "src": "33083:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1443, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1424, "src": "33089:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1444, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1426, "src": "33093:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1445, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1428, "src": "33102:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1441, "name": "_safeTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1478, "src": "33069:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,address,uint256,bytes memory)"}}, "id": 1446, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "33069:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1447, "nodeType": "ExpressionStatement", "src": "33069:39:0"}]}, "documentation": {"id": 1420, "nodeType": "StructuredDocumentation", "src": "32701:55:0", "text": " @dev See {IERC721-safeTransferFrom}."}, "functionSelector": "b88d4fde", "id": 1449, "implemented": true, "kind": "function", "modifiers": [], "name": "safeTransferFrom", "nameLocation": "32770:16:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1430, "nodeType": "OverrideSpecifier", "overrides": [], "src": "32903:8:0"}, "parameters": {"id": 1429, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1422, "mutability": "mutable", "name": "from", "nameLocation": "32804:4:0", "nodeType": "VariableDeclaration", "scope": 1449, "src": "32796:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1421, "name": "address", "nodeType": "ElementaryTypeName", "src": "32796:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1424, "mutability": "mutable", "name": "to", "nameLocation": "32826:2:0", "nodeType": "VariableDeclaration", "scope": 1449, "src": "32818:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1423, "name": "address", "nodeType": "ElementaryTypeName", "src": "32818:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1426, "mutability": "mutable", "name": "tokenId", "nameLocation": "32846:7:0", "nodeType": "VariableDeclaration", "scope": 1449, "src": "32838:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "32838:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1428, "mutability": "mutable", "name": "_data", "nameLocation": "32876:5:0", "nodeType": "VariableDeclaration", "scope": 1449, "src": "32863:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1427, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "32863:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "32786:101:0"}, "returnParameters": {"id": 1431, "nodeType": "ParameterList", "parameters": [], "src": "32912:0:0"}, "scope": 1856, "src": "32761:354:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 1477, "nodeType": "Block", "src": "34118:200:0", "statements": [{"expression": {"arguments": [{"id": 1462, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1452, "src": "34138:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1463, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1454, "src": "34144:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1464, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "34148:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1461, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1758, "src": "34128:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1465, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34128:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1466, "nodeType": "ExpressionStatement", "src": "34128:28:0"}, {"expression": {"arguments": [{"arguments": [{"id": 1469, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1452, "src": "34210:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1470, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1454, "src": "34216:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1471, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1456, "src": "34220:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1472, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1458, "src": "34229:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1468, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1844, "src": "34187:22:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 1473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34187:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 1474, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "34249:52:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 1467, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "34166:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34166:145:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1476, "nodeType": "ExpressionStatement", "src": "34166:145:0"}]}, "documentation": {"id": 1450, "nodeType": "StructuredDocumentation", "src": "33121:851:0", "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."}, "id": 1478, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeTransfer", "nameLocation": "33986:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1459, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1452, "mutability": "mutable", "name": "from", "nameLocation": "34017:4:0", "nodeType": "VariableDeclaration", "scope": 1478, "src": "34009:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1451, "name": "address", "nodeType": "ElementaryTypeName", "src": "34009:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1454, "mutability": "mutable", "name": "to", "nameLocation": "34039:2:0", "nodeType": "VariableDeclaration", "scope": 1478, "src": "34031:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1453, "name": "address", "nodeType": "ElementaryTypeName", "src": "34031:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1456, "mutability": "mutable", "name": "tokenId", "nameLocation": "34059:7:0", "nodeType": "VariableDeclaration", "scope": 1478, "src": "34051:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1455, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34051:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1458, "mutability": "mutable", "name": "_data", "nameLocation": "34089:5:0", "nodeType": "VariableDeclaration", "scope": 1478, "src": "34076:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1457, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "34076:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "33999:101:0"}, "returnParameters": {"id": 1460, "nodeType": "ParameterList", "parameters": [], "src": "34118:0:0"}, "scope": 1856, "src": "33977:341:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1495, "nodeType": "Block", "src": "34692:54:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 1486, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "34709:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1488, "indexExpression": {"id": 1487, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1481, "src": "34717:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "34709:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1491, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "34737:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1490, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "34729:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1489, "name": "address", "nodeType": "ElementaryTypeName", "src": "34729:7:0", "typeDescriptions": {}}}, "id": 1492, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "34729:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "34709:30:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1485, "id": 1494, "nodeType": "Return", "src": "34702:37:0"}]}, "documentation": {"id": 1479, "nodeType": "StructuredDocumentation", "src": "34324:292:0", "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."}, "id": 1496, "implemented": true, "kind": "function", "modifiers": [], "name": "_exists", "nameLocation": "34630:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1482, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1481, "mutability": "mutable", "name": "tokenId", "nameLocation": "34646:7:0", "nodeType": "VariableDeclaration", "scope": 1496, "src": "34638:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1480, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34638:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "34637:17:0"}, "returnParameters": {"id": 1485, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1484, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1496, "src": "34686:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1483, "name": "bool", "nodeType": "ElementaryTypeName", "src": "34686:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "34685:6:0"}, "scope": 1856, "src": "34621:125:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1536, "nodeType": "Block", "src": "35039:303:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 1508, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1501, "src": "35078:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1507, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1496, "src": "35070:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35070:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 1510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "35100:46:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c", "typeString": "literal_string \"ERC721: operator query for nonexistent token\""}, "value": "ERC721: operator query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c", "typeString": "literal_string \"ERC721: operator query for nonexistent token\""}], "id": 1506, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "35049:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1511, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35049:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1512, "nodeType": "ExpressionStatement", "src": "35049:107:0"}, {"assignments": [1514], "declarations": [{"constant": false, "id": 1514, "mutability": "mutable", "name": "owner", "nameLocation": "35174:5:0", "nodeType": "VariableDeclaration", "scope": 1536, "src": "35166:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1513, "name": "address", "nodeType": "ElementaryTypeName", "src": "35166:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1519, "initialValue": {"arguments": [{"id": 1517, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1501, "src": "35197:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1515, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "35182:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1516, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 1186, "src": "35182:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35182:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "35166:39:0"}, {"expression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1528, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1520, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "35223:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1521, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1514, "src": "35234:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "35223:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1524, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1501, "src": "35267:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1523, "name": "getApproved", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1321, "src": "35255:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1525, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35255:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1526, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "35279:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "35255:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "35223:63:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 1530, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1514, "src": "35319:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1531, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1499, "src": "35326:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 1529, "name": "isApprovedForAll", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1373, "src": "35302:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view returns (bool)"}}, "id": 1532, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35302:32:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "35223:111:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 1534, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "35222:113:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1505, "id": 1535, "nodeType": "Return", "src": "35215:120:0"}]}, "documentation": {"id": 1497, "nodeType": "StructuredDocumentation", "src": "34752:147:0", "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."}, "id": 1537, "implemented": true, "kind": "function", "modifiers": [], "name": "_isApprovedOrOwner", "nameLocation": "34913:18:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1502, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1499, "mutability": "mutable", "name": "spender", "nameLocation": "34940:7:0", "nodeType": "VariableDeclaration", "scope": 1537, "src": "34932:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1498, "name": "address", "nodeType": "ElementaryTypeName", "src": "34932:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1501, "mutability": "mutable", "name": "tokenId", "nameLocation": "34957:7:0", "nodeType": "VariableDeclaration", "scope": 1537, "src": "34949:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "34949:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "34931:34:0"}, "returnParameters": {"id": 1505, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1504, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1537, "src": "35029:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1503, "name": "bool", "nodeType": "ElementaryTypeName", "src": "35029:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "35028:6:0"}, "scope": 1856, "src": "34904:438:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 1551, "nodeType": "Block", "src": "35737:43:0", "statements": [{"expression": {"arguments": [{"id": 1546, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1540, "src": "35757:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1547, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1542, "src": "35761:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "", "id": 1548, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "35770:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "id": 1545, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [1552, 1581], "referencedDeclaration": 1581, "src": "35747:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,uint256,bytes memory)"}}, "id": 1549, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "35747:26:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1550, "nodeType": "ExpressionStatement", "src": "35747:26:0"}]}, "documentation": {"id": 1538, "nodeType": "StructuredDocumentation", "src": "35348:319:0", "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."}, "id": 1552, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nameLocation": "35681:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1543, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1540, "mutability": "mutable", "name": "to", "nameLocation": "35699:2:0", "nodeType": "VariableDeclaration", "scope": 1552, "src": "35691:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1539, "name": "address", "nodeType": "ElementaryTypeName", "src": "35691:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1542, "mutability": "mutable", "name": "tokenId", "nameLocation": "35711:7:0", "nodeType": "VariableDeclaration", "scope": 1552, "src": "35703:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1541, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "35703:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "35690:29:0"}, "returnParameters": {"id": 1544, "nodeType": "ParameterList", "parameters": [], "src": "35737:0:0"}, "scope": 1856, "src": "35672:108:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1580, "nodeType": "Block", "src": "36116:196:0", "statements": [{"expression": {"arguments": [{"id": 1563, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1555, "src": "36132:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1564, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1557, "src": "36136:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1562, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1638, "src": "36126:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1565, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36126:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1566, "nodeType": "ExpressionStatement", "src": "36126:18:0"}, {"expression": {"arguments": [{"arguments": [{"arguments": [{"hexValue": "30", "id": 1571, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "36206:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1570, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "36198:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1569, "name": "address", "nodeType": "ElementaryTypeName", "src": "36198:7:0", "typeDescriptions": {}}}, "id": 1572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36198:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1573, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1555, "src": "36210:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1574, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1557, "src": "36214:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1575, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1559, "src": "36223:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 1568, "name": "_checkOnERC721Received", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1844, "src": "36175:22:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$", "typeString": "function (address,address,uint256,bytes memory) returns (bool)"}}, "id": 1576, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36175:54:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 1577, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "36243:52:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 1567, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "36154:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1578, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36154:151:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1579, "nodeType": "ExpressionStatement", "src": "36154:151:0"}]}, "documentation": {"id": 1553, "nodeType": "StructuredDocumentation", "src": "35786:210:0", "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."}, "id": 1581, "implemented": true, "kind": "function", "modifiers": [], "name": "_safeMint", "nameLocation": "36010:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1560, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1555, "mutability": "mutable", "name": "to", "nameLocation": "36037:2:0", "nodeType": "VariableDeclaration", "scope": 1581, "src": "36029:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1554, "name": "address", "nodeType": "ElementaryTypeName", "src": "36029:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1557, "mutability": "mutable", "name": "tokenId", "nameLocation": "36057:7:0", "nodeType": "VariableDeclaration", "scope": 1581, "src": "36049:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1556, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "36049:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1559, "mutability": "mutable", "name": "_data", "nameLocation": "36087:5:0", "nodeType": "VariableDeclaration", "scope": 1581, "src": "36074:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1558, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "36074:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "36019:79:0"}, "returnParameters": {"id": 1561, "nodeType": "ParameterList", "parameters": [], "src": "36116:0:0"}, "scope": 1856, "src": "36001:311:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1637, "nodeType": "Block", "src": "36695:311:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1595, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1590, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1584, "src": "36713:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1593, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "36727:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1592, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "36719:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1591, "name": "address", "nodeType": "ElementaryTypeName", "src": "36719:7:0", "typeDescriptions": {}}}, "id": 1594, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36719:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "36713:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373", "id": 1596, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "36731:34:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6", "typeString": "literal_string \"ERC721: mint to the zero address\""}, "value": "ERC721: mint to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6", "typeString": "literal_string \"ERC721: mint to the zero address\""}], "id": 1589, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "36705:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1597, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36705:61:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1598, "nodeType": "ExpressionStatement", "src": "36705:61:0"}, {"expression": {"arguments": [{"id": 1603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "36784:17:0", "subExpression": {"arguments": [{"id": 1601, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1586, "src": "36793:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1600, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1496, "src": "36785:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 1602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36785:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564", "id": 1604, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "36803:30:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57", "typeString": "literal_string \"ERC721: token already minted\""}, "value": "ERC721: token already minted"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57", "typeString": "literal_string \"ERC721: token already minted\""}], "id": 1599, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "36776:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1605, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36776:58:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1606, "nodeType": "ExpressionStatement", "src": "36776:58:0"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 1610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "36874:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1609, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "36866:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1608, "name": "address", "nodeType": "ElementaryTypeName", "src": "36866:7:0", "typeDescriptions": {}}}, "id": 1611, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36866:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1612, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1584, "src": "36878:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1613, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1586, "src": "36882:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1607, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "36845:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36845:45:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1615, "nodeType": "ExpressionStatement", "src": "36845:45:0"}, {"expression": {"id": 1620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1616, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "36901:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1618, "indexExpression": {"id": 1617, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1584, "src": "36911:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "36901:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 1619, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "36918:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "36901:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1621, "nodeType": "ExpressionStatement", "src": "36901:18:0"}, {"expression": {"id": 1626, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1622, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "36929:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1624, "indexExpression": {"id": 1623, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1586, "src": "36937:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "36929:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1625, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1584, "src": "36948:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "36929:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1627, "nodeType": "ExpressionStatement", "src": "36929:21:0"}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 1631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "36983:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1630, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "36975:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1629, "name": "address", "nodeType": "ElementaryTypeName", "src": "36975:7:0", "typeDescriptions": {}}}, "id": 1632, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36975:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1633, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1584, "src": "36987:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1634, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1586, "src": "36991:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1628, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "36966:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1635, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "36966:33:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1636, "nodeType": "EmitStatement", "src": "36961:38:0"}]}, "documentation": {"id": 1582, "nodeType": "StructuredDocumentation", "src": "36318:311:0", "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."}, "id": 1638, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nameLocation": "36643:5:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1587, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1584, "mutability": "mutable", "name": "to", "nameLocation": "36657:2:0", "nodeType": "VariableDeclaration", "scope": 1638, "src": "36649:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1583, "name": "address", "nodeType": "ElementaryTypeName", "src": "36649:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1586, "mutability": "mutable", "name": "tokenId", "nameLocation": "36669:7:0", "nodeType": "VariableDeclaration", "scope": 1638, "src": "36661:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1585, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "36661:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "36648:29:0"}, "returnParameters": {"id": 1588, "nodeType": "ParameterList", "parameters": [], "src": "36695:0:0"}, "scope": 1856, "src": "36634:372:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1688, "nodeType": "Block", "src": "37272:299:0", "statements": [{"assignments": [1645], "declarations": [{"constant": false, "id": 1645, "mutability": "mutable", "name": "owner", "nameLocation": "37290:5:0", "nodeType": "VariableDeclaration", "scope": 1688, "src": "37282:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1644, "name": "address", "nodeType": "ElementaryTypeName", "src": "37282:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 1650, "initialValue": {"arguments": [{"id": 1648, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1641, "src": "37313:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1646, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "37298:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1647, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 1186, "src": "37298:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37298:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "37282:39:0"}, {"expression": {"arguments": [{"id": 1652, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1645, "src": "37353:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 1655, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37368:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1654, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37360:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1653, "name": "address", "nodeType": "ElementaryTypeName", "src": "37360:7:0", "typeDescriptions": {}}}, "id": 1656, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37360:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1657, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1641, "src": "37372:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1651, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "37332:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37332:48:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1659, "nodeType": "ExpressionStatement", "src": "37332:48:0"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 1663, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37435:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1662, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37427:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1661, "name": "address", "nodeType": "ElementaryTypeName", "src": "37427:7:0", "typeDescriptions": {}}}, "id": 1664, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37427:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1665, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1641, "src": "37439:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1660, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1782, "src": "37418:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1666, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37418:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1667, "nodeType": "ExpressionStatement", "src": "37418:29:0"}, {"expression": {"id": 1672, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1668, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "37458:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1670, "indexExpression": {"id": 1669, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1645, "src": "37468:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "37458:16:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"hexValue": "31", "id": 1671, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37478:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "37458:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1673, "nodeType": "ExpressionStatement", "src": "37458:21:0"}, {"expression": {"id": 1677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "37489:23:0", "subExpression": {"baseExpression": {"id": 1674, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "37496:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1676, "indexExpression": {"id": 1675, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1641, "src": "37504:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "37496:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1678, "nodeType": "ExpressionStatement", "src": "37489:23:0"}, {"eventCall": {"arguments": [{"id": 1680, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1645, "src": "37537:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 1683, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "37552:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1682, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "37544:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1681, "name": "address", "nodeType": "ElementaryTypeName", "src": "37544:7:0", "typeDescriptions": {}}}, "id": 1684, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37544:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1685, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1641, "src": "37556:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1679, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "37528:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1686, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "37528:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1687, "nodeType": "EmitStatement", "src": "37523:41:0"}]}, "documentation": {"id": 1639, "nodeType": "StructuredDocumentation", "src": "37012:206:0", "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."}, "id": 1689, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nameLocation": "37232:5:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1642, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1641, "mutability": "mutable", "name": "tokenId", "nameLocation": "37246:7:0", "nodeType": "VariableDeclaration", "scope": 1689, "src": "37238:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1640, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "37238:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "37237:17:0"}, "returnParameters": {"id": 1643, "nodeType": "ParameterList", "parameters": [], "src": "37272:0:0"}, "scope": 1856, "src": "37223:348:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1757, "nodeType": "Block", "src": "38004:485:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 1702, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1696, "src": "38050:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1700, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "38035:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 1186, "src": "38035:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38035:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 1704, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1692, "src": "38062:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "38035:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e", "id": 1706, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "38080:43:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950", "typeString": "literal_string \"ERC721: transfer of token that is not own\""}, "value": "ERC721: transfer of token that is not own"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950", "typeString": "literal_string \"ERC721: transfer of token that is not own\""}], "id": 1699, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "38014:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1707, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38014:119:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1708, "nodeType": "ExpressionStatement", "src": "38014:119:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1710, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1694, "src": "38151:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1713, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38165:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1712, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "38157:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1711, "name": "address", "nodeType": "ElementaryTypeName", "src": "38157:7:0", "typeDescriptions": {}}}, "id": 1714, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38157:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "38151:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373", "id": 1716, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "38169:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4", "typeString": "literal_string \"ERC721: transfer to the zero address\""}, "value": "ERC721: transfer to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4", "typeString": "literal_string \"ERC721: transfer to the zero address\""}], "id": 1709, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "38143:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38143:65:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1718, "nodeType": "ExpressionStatement", "src": "38143:65:0"}, {"expression": {"arguments": [{"id": 1720, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1692, "src": "38240:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1721, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1694, "src": "38246:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1722, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1696, "src": "38250:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1719, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1855, "src": "38219:20:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1723, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38219:39:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1724, "nodeType": "ExpressionStatement", "src": "38219:39:0"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 1728, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38337:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1727, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "38329:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1726, "name": "address", "nodeType": "ElementaryTypeName", "src": "38329:7:0", "typeDescriptions": {}}}, "id": 1729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38329:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1730, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1696, "src": "38341:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1725, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1782, "src": "38320:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 1731, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38320:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1732, "nodeType": "ExpressionStatement", "src": "38320:29:0"}, {"expression": {"id": 1737, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1733, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "38360:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1735, "indexExpression": {"id": 1734, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1692, "src": "38370:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "38360:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"hexValue": "31", "id": 1736, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38379:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "38360:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1738, "nodeType": "ExpressionStatement", "src": "38360:20:0"}, {"expression": {"id": 1743, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1739, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1076, "src": "38390:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 1741, "indexExpression": {"id": 1740, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1694, "src": "38400:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "38390:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 1742, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "38407:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "38390:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1744, "nodeType": "ExpressionStatement", "src": "38390:18:0"}, {"expression": {"id": 1749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1745, "name": "_owners", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1072, "src": "38418:7:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1747, "indexExpression": {"id": 1746, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1696, "src": "38426:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "38418:16:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1748, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1694, "src": "38437:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "38418:21:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1750, "nodeType": "ExpressionStatement", "src": "38418:21:0"}, {"eventCall": {"arguments": [{"id": 1752, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1692, "src": "38464:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1753, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1694, "src": "38470:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1754, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1696, "src": "38474:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1751, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 335, "src": "38455:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1755, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38455:27:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1756, "nodeType": "EmitStatement", "src": "38450:32:0"}]}, "documentation": {"id": 1690, "nodeType": "StructuredDocumentation", "src": "37577:313:0", "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."}, "id": 1758, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nameLocation": "37904:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1697, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1692, "mutability": "mutable", "name": "from", "nameLocation": "37931:4:0", "nodeType": "VariableDeclaration", "scope": 1758, "src": "37923:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1691, "name": "address", "nodeType": "ElementaryTypeName", "src": "37923:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1694, "mutability": "mutable", "name": "to", "nameLocation": "37953:2:0", "nodeType": "VariableDeclaration", "scope": 1758, "src": "37945:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1693, "name": "address", "nodeType": "ElementaryTypeName", "src": "37945:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1696, "mutability": "mutable", "name": "tokenId", "nameLocation": "37973:7:0", "nodeType": "VariableDeclaration", "scope": 1758, "src": "37965:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1695, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "37965:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "37913:73:0"}, "returnParameters": {"id": 1698, "nodeType": "ParameterList", "parameters": [], "src": "38004:0:0"}, "scope": 1856, "src": "37895:594:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1781, "nodeType": "Block", "src": "38664:107:0", "statements": [{"expression": {"id": 1770, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 1766, "name": "_tokenApprovals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1080, "src": "38674:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$", "typeString": "mapping(uint256 => address)"}}, "id": 1768, "indexExpression": {"id": 1767, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1763, "src": "38690:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "38674:24:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 1769, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1761, "src": "38701:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "38674:29:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1771, "nodeType": "ExpressionStatement", "src": "38674:29:0"}, {"eventCall": {"arguments": [{"arguments": [{"id": 1775, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1763, "src": "38742:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1773, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "38727:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1774, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ownerOf", "nodeType": "MemberAccess", "referencedDeclaration": 1186, "src": "38727:14:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 1776, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38727:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1777, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1761, "src": "38752:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1778, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1763, "src": "38756:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1772, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 344, "src": "38718:8:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1779, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "38718:46:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1780, "nodeType": "EmitStatement", "src": "38713:51:0"}]}, "documentation": {"id": 1759, "nodeType": "StructuredDocumentation", "src": "38495:100:0", "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."}, "id": 1782, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nameLocation": "38609:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1764, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1761, "mutability": "mutable", "name": "to", "nameLocation": "38626:2:0", "nodeType": "VariableDeclaration", "scope": 1782, "src": "38618:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1760, "name": "address", "nodeType": "ElementaryTypeName", "src": "38618:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1763, "mutability": "mutable", "name": "tokenId", "nameLocation": "38638:7:0", "nodeType": "VariableDeclaration", "scope": 1782, "src": "38630:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1762, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "38630:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "38617:29:0"}, "returnParameters": {"id": 1765, "nodeType": "ParameterList", "parameters": [], "src": "38664:0:0"}, "scope": 1856, "src": "38600:171:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 1843, "nodeType": "Block", "src": "39480:794:0", "statements": [{"condition": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1796, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1787, "src": "39494:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 1797, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isContract", "nodeType": "MemberAccess", "referencedDeclaration": 708, "src": "39494:13:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$", "typeString": "function (address) view returns (bool)"}}, "id": 1798, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39494:15:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1841, "nodeType": "Block", "src": "40232:36:0", "statements": [{"expression": {"hexValue": "74727565", "id": 1839, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "40253:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 1795, "id": 1840, "nodeType": "Return", "src": "40246:11:0"}]}, "id": 1842, "nodeType": "IfStatement", "src": "39490:778:0", "trueBody": {"id": 1838, "nodeType": "Block", "src": "39511:715:0", "statements": [{"clauses": [{"block": {"id": 1818, "nodeType": "Block", "src": "39752:91:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1812, "name": "retval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1810, "src": "39777:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"expression": {"id": 1813, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1027, "src": "39787:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1027_$", "typeString": "type(contract IERC721Receiver)"}}, "id": 1814, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1026, "src": "39787:32:0", "typeDescriptions": {"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$", "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}}, "id": 1815, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "selector", "nodeType": "MemberAccess", "src": "39787:41:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "39777:51:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1795, "id": 1817, "nodeType": "Return", "src": "39770:58:0"}]}, "errorName": "", "id": 1819, "nodeType": "TryCatchClause", "parameters": {"id": 1811, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1810, "mutability": "mutable", "name": "retval", "nameLocation": "39744:6:0", "nodeType": "VariableDeclaration", "scope": 1819, "src": "39737:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1809, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "39737:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "39736:15:0"}, "src": "39728:115:0"}, {"block": {"id": 1835, "nodeType": "Block", "src": "39872:344:0", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 1823, "name": "reason", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1821, "src": "39894:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 1824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "39894:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 1825, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "39911:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "39894:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 1833, "nodeType": "Block", "src": "40067:135:0", "statements": [{"AST": {"nodeType": "YulBlock", "src": "40098:86:0", "statements": [{"expression": {"arguments": [{"arguments": [{"kind": "number", "nodeType": "YulLiteral", "src": "40135:2:0", "type": "", "value": "32"}, {"name": "reason", "nodeType": "YulIdentifier", "src": "40139:6:0"}], "functionName": {"name": "add", "nodeType": "YulIdentifier", "src": "40131:3:0"}, "nodeType": "YulFunctionCall", "src": "40131:15:0"}, {"arguments": [{"name": "reason", "nodeType": "YulIdentifier", "src": "40154:6:0"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "40148:5:0"}, "nodeType": "YulFunctionCall", "src": "40148:13:0"}], "functionName": {"name": "revert", "nodeType": "YulIdentifier", "src": "40124:6:0"}, "nodeType": "YulFunctionCall", "src": "40124:38:0"}, "nodeType": "YulExpressionStatement", "src": "40124:38:0"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 1821, "isOffset": false, "isSlot": false, "src": "40139:6:0", "valueSize": 1}, {"declaration": 1821, "isOffset": false, "isSlot": false, "src": "40154:6:0", "valueSize": 1}], "id": 1832, "nodeType": "InlineAssembly", "src": "40089:95:0"}]}, "id": 1834, "nodeType": "IfStatement", "src": "39890:312:0", "trueBody": {"id": 1831, "nodeType": "Block", "src": "39914:147:0", "statements": [{"expression": {"arguments": [{"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572", "id": 1828, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "39968:52:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}, "value": "ERC721: transfer to non ERC721Receiver implementer"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e", "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}], "id": 1827, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "39936:6:0", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 1829, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39936:106:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1830, "nodeType": "ExpressionStatement", "src": "39936:106:0"}]}}]}, "errorName": "", "id": 1836, "nodeType": "TryCatchClause", "parameters": {"id": 1822, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1821, "mutability": "mutable", "name": "reason", "nameLocation": "39864:6:0", "nodeType": "VariableDeclaration", "scope": 1836, "src": "39851:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1820, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "39851:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "39850:21:0"}, "src": "39844:372:0"}], "externalCall": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 1803, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "39603:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 1804, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39603:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1805, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1785, "src": "39637:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1806, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1789, "src": "39663:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 1807, "name": "_data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1791, "src": "39692:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"arguments": [{"id": 1800, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1787, "src": "39561:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 1799, "name": "IERC721Receiver", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1027, "src": "39545:15:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1027_$", "typeString": "type(contract IERC721Receiver)"}}, "id": 1801, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39545:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC721Receiver_$1027", "typeString": "contract IERC721Receiver"}}, "id": 1802, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "onERC721Received", "nodeType": "MemberAccess", "referencedDeclaration": 1026, "src": "39545:36:0", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$", "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"}}, "id": 1808, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "39545:170:0", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "id": 1837, "nodeType": "TryStatement", "src": "39525:691:0"}]}}]}, "documentation": {"id": 1783, "nodeType": "StructuredDocumentation", "src": "38777:542:0", "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"}, "id": 1844, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkOnERC721Received", "nameLocation": "39333:22:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1792, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1785, "mutability": "mutable", "name": "from", "nameLocation": "39373:4:0", "nodeType": "VariableDeclaration", "scope": 1844, "src": "39365:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1784, "name": "address", "nodeType": "ElementaryTypeName", "src": "39365:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1787, "mutability": "mutable", "name": "to", "nameLocation": "39395:2:0", "nodeType": "VariableDeclaration", "scope": 1844, "src": "39387:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1786, "name": "address", "nodeType": "ElementaryTypeName", "src": "39387:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1789, "mutability": "mutable", "name": "tokenId", "nameLocation": "39415:7:0", "nodeType": "VariableDeclaration", "scope": 1844, "src": "39407:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1788, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "39407:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 1791, "mutability": "mutable", "name": "_data", "nameLocation": "39445:5:0", "nodeType": "VariableDeclaration", "scope": 1844, "src": "39432:18:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 1790, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "39432:5:0", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "39355:101:0"}, "returnParameters": {"id": 1795, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1794, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1844, "src": "39474:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1793, "name": "bool", "nodeType": "ElementaryTypeName", "src": "39474:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "39473:6:0"}, "scope": 1856, "src": "39324:950:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 1854, "nodeType": "Block", "src": "40950:2:0", "statements": []}, "documentation": {"id": 1845, "nodeType": "StructuredDocumentation", "src": "40280:545:0", "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 1855, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nameLocation": "40839:20:0", "nodeType": "FunctionDefinition", "parameters": {"id": 1852, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1847, "mutability": "mutable", "name": "from", "nameLocation": "40877:4:0", "nodeType": "VariableDeclaration", "scope": 1855, "src": "40869:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1846, "name": "address", "nodeType": "ElementaryTypeName", "src": "40869:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1849, "mutability": "mutable", "name": "to", "nameLocation": "40899:2:0", "nodeType": "VariableDeclaration", "scope": 1855, "src": "40891:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1848, "name": "address", "nodeType": "ElementaryTypeName", "src": "40891:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1851, "mutability": "mutable", "name": "tokenId", "nameLocation": "40919:7:0", "nodeType": "VariableDeclaration", "scope": 1855, "src": "40911:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1850, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "40911:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "40859:73:0"}, "returnParameters": {"id": 1853, "nodeType": "ParameterList", "parameters": [], "src": "40950:0:0"}, "scope": 1856, "src": "40830:122:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 2639, "src": "27379:13575:0", "usedErrors": []}, {"id": 1857, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "41035:23:0"}, {"abstract": true, "baseContracts": [{"baseName": {"id": 1859, "name": "ERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 1856, "src": "41298:6:0"}, "id": 1860, "nodeType": "InheritanceSpecifier", "src": "41298:6:0"}, {"baseName": {"id": 1861, "name": "IERC721Enumerable", "nodeType": "IdentifierPath", "referencedDeclaration": 465, "src": "41306:17:0"}, "id": 1862, "nodeType": "InheritanceSpecifier", "src": "41306:17:0"}], "canonicalName": "ERC721Enumerable", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 1858, "nodeType": "StructuredDocumentation", "src": "41060:199:0", "text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."}, "fullyImplemented": false, "id": 2191, "linearizedBaseContracts": [2191, 465, 1856, 1010, 436, 487, 322, 1048], "name": "ERC721Enumerable", "nameLocation": "41278:16:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 1868, "mutability": "mutable", "name": "_ownedTokens", "nameLocation": "41439:12:0", "nodeType": "VariableDeclaration", "scope": 2191, "src": "41383:68:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}, "typeName": {"id": 1867, "keyType": {"id": 1863, "name": "address", "nodeType": "ElementaryTypeName", "src": "41391:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "41383:47:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}, "valueType": {"id": 1866, "keyType": {"id": 1864, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41410:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "41402:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 1865, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41421:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "private"}, {"constant": false, "id": 1872, "mutability": "mutable", "name": "_ownedTokensIndex", "nameLocation": "41557:17:0", "nodeType": "VariableDeclaration", "scope": 2191, "src": "41521:53:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 1871, "keyType": {"id": 1869, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41529:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "41521:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 1870, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41540:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 1875, "mutability": "mutable", "name": "_allTokens", "nameLocation": "41653:10:0", "nodeType": "VariableDeclaration", "scope": 2191, "src": "41635:28:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 1873, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41635:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 1874, "nodeType": "ArrayTypeName", "src": "41635:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "private"}, {"constant": false, "id": 1879, "mutability": "mutable", "name": "_allTokensIndex", "nameLocation": "41770:15:0", "nodeType": "VariableDeclaration", "scope": 2191, "src": "41734:51:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "typeName": {"id": 1878, "keyType": {"id": 1876, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41742:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "41734:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}, "valueType": {"id": 1877, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "41753:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"baseFunctions": [321, 1134], "body": {"id": 1902, "nodeType": "Block", "src": "42005:138:0", "statements": [{"expression": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 1900, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "id": 1895, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1890, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1882, "src": "42034:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"arguments": [{"id": 1892, "name": "IERC721Enumerable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 465, "src": "42054:17:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$465_$", "typeString": "type(contract IERC721Enumerable)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$465_$", "typeString": "type(contract IERC721Enumerable)"}], "id": 1891, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "42049:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 1893, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42049:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$465", "typeString": "type(contract IERC721Enumerable)"}}, "id": 1894, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "interfaceId", "nodeType": "MemberAccess", "src": "42049:35:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "src": "42034:50:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"arguments": [{"id": 1898, "name": "interfaceId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1882, "src": "42124:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "expression": {"id": 1896, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "42100:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$2191_$", "typeString": "type(contract super ERC721Enumerable)"}}, "id": 1897, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "supportsInterface", "nodeType": "MemberAccess", "referencedDeclaration": 1134, "src": "42100:23:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$", "typeString": "function (bytes4) view returns (bool)"}}, "id": 1899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42100:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "42034:102:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 1889, "id": 1901, "nodeType": "Return", "src": "42015:121:0"}]}, "documentation": {"id": 1880, "nodeType": "StructuredDocumentation", "src": "41792:56:0", "text": " @dev See {IERC165-supportsInterface}."}, "functionSelector": "01ffc9a7", "id": 1903, "implemented": true, "kind": "function", "modifiers": [], "name": "supportsInterface", "nameLocation": "41862:17:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1886, "nodeType": "OverrideSpecifier", "overrides": [{"id": 1884, "name": "IERC165", "nodeType": "IdentifierPath", "referencedDeclaration": 322, "src": "41961:7:0"}, {"id": 1885, "name": "ERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 1856, "src": "41970:6:0"}], "src": "41952:25:0"}, "parameters": {"id": 1883, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1882, "mutability": "mutable", "name": "interfaceId", "nameLocation": "41887:11:0", "nodeType": "VariableDeclaration", "scope": 1903, "src": "41880:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}, "typeName": {"id": 1881, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "41880:6:0", "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}, "visibility": "internal"}], "src": "41879:20:0"}, "returnParameters": {"id": 1889, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1888, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1903, "src": "41995:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 1887, "name": "bool", "nodeType": "ElementaryTypeName", "src": "41995:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "41994:6:0"}, "scope": 2191, "src": "41853:290:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [456], "body": {"id": 1930, "nodeType": "Block", "src": "42372:181:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1915, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1908, "src": "42403:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"arguments": [{"id": 1918, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1906, "src": "42428:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 1916, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "42411:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 1917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1158, "src": "42411:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 1919, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42411:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "42403:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473", "id": 1921, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "42448:45:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c", "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""}, "value": "ERC721Enumerable: owner index out of bounds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c", "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""}], "id": 1914, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "42382:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1922, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42382:121:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1923, "nodeType": "ExpressionStatement", "src": "42382:121:0"}, {"expression": {"baseExpression": {"baseExpression": {"id": 1924, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "42520:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}}, "id": 1926, "indexExpression": {"id": 1925, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1906, "src": "42533:5:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "42520:19:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 1928, "indexExpression": {"id": 1927, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1908, "src": "42540:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "42520:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1913, "id": 1929, "nodeType": "Return", "src": "42513:33:0"}]}, "documentation": {"id": 1904, "nodeType": "StructuredDocumentation", "src": "42149:68:0", "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."}, "functionSelector": "2f745c59", "id": 1931, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenOfOwnerByIndex", "nameLocation": "42231:19:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1910, "nodeType": "OverrideSpecifier", "overrides": [], "src": "42333:8:0"}, "parameters": {"id": 1909, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1906, "mutability": "mutable", "name": "owner", "nameLocation": "42259:5:0", "nodeType": "VariableDeclaration", "scope": 1931, "src": "42251:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1905, "name": "address", "nodeType": "ElementaryTypeName", "src": "42251:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1908, "mutability": "mutable", "name": "index", "nameLocation": "42274:5:0", "nodeType": "VariableDeclaration", "scope": 1931, "src": "42266:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1907, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42266:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "42250:30:0"}, "returnParameters": {"id": 1913, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1912, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1931, "src": "42359:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1911, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42359:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "42358:9:0"}, "scope": 2191, "src": "42222:331:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [446], "body": {"id": 1941, "nodeType": "Block", "src": "42694:41:0", "statements": [{"expression": {"expression": {"id": 1938, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "42711:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1939, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "42711:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1937, "id": 1940, "nodeType": "Return", "src": "42704:24:0"}]}, "documentation": {"id": 1932, "nodeType": "StructuredDocumentation", "src": "42559:60:0", "text": " @dev See {IERC721Enumerable-totalSupply}."}, "functionSelector": "18160ddd", "id": 1942, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "42633:11:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1934, "nodeType": "OverrideSpecifier", "overrides": [], "src": "42667:8:0"}, "parameters": {"id": 1933, "nodeType": "ParameterList", "parameters": [], "src": "42644:2:0"}, "returnParameters": {"id": 1937, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1936, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1942, "src": "42685:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1935, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42685:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "42684:9:0"}, "scope": 2191, "src": "42624:111:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [464], "body": {"id": 1964, "nodeType": "Block", "src": "42935:180:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 1956, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1952, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1945, "src": "42966:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 1953, "name": "ERC721Enumerable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2191, "src": "42974:16:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2191_$", "typeString": "type(contract ERC721Enumerable)"}}, "id": 1954, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 1942, "src": "42974:28:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 1955, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42974:30:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "42966:38:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473", "id": 1957, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "43018:46:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc", "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""}, "value": "ERC721Enumerable: global index out of bounds"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc", "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""}], "id": 1951, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "42945:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 1958, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "42945:129:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1959, "nodeType": "ExpressionStatement", "src": "42945:129:0"}, {"expression": {"baseExpression": {"id": 1960, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "43091:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 1962, "indexExpression": {"id": 1961, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1945, "src": "43102:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "43091:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 1950, "id": 1963, "nodeType": "Return", "src": "43084:24:0"}]}, "documentation": {"id": 1943, "nodeType": "StructuredDocumentation", "src": "42741:61:0", "text": " @dev See {IERC721Enumerable-tokenByIndex}."}, "functionSelector": "4f6ccce7", "id": 1965, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenByIndex", "nameLocation": "42816:12:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1947, "nodeType": "OverrideSpecifier", "overrides": [], "src": "42896:8:0"}, "parameters": {"id": 1946, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1945, "mutability": "mutable", "name": "index", "nameLocation": "42837:5:0", "nodeType": "VariableDeclaration", "scope": 1965, "src": "42829:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1944, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42829:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "42828:15:0"}, "returnParameters": {"id": 1950, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1949, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 1965, "src": "42922:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1948, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "42922:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "42921:9:0"}, "scope": 2191, "src": "42807:308:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [1855], "body": {"id": 2028, "nodeType": "Block", "src": "43840:443:0", "statements": [{"expression": {"arguments": [{"id": 1979, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "43877:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1980, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1970, "src": "43883:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 1981, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1972, "src": "43887:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 1976, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "43850:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$2191_$", "typeString": "type(contract super ERC721Enumerable)"}}, "id": 1978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "_beforeTokenTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 1855, "src": "43850:26:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 1982, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "43850:45:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1983, "nodeType": "ExpressionStatement", "src": "43850:45:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1989, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1984, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "43910:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 1987, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "43926:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 1986, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "43918:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 1985, "name": "address", "nodeType": "ElementaryTypeName", "src": "43918:7:0", "typeDescriptions": {}}}, "id": 1988, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "43918:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "43910:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 1997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 1995, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "44005:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 1996, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1970, "src": "44013:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "44005:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2004, "nodeType": "IfStatement", "src": "44001:88:0", "trueBody": {"id": 2003, "nodeType": "Block", "src": "44017:72:0", "statements": [{"expression": {"arguments": [{"id": 1999, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "44064:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2000, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1972, "src": "44070:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1998, "name": "_removeTokenFromOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2142, "src": "44031:32:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2001, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44031:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2002, "nodeType": "ExpressionStatement", "src": "44031:47:0"}]}}, "id": 2005, "nodeType": "IfStatement", "src": "43906:183:0", "trueBody": {"id": 1994, "nodeType": "Block", "src": "43930:65:0", "statements": [{"expression": {"arguments": [{"id": 1991, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1972, "src": "43976:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 1990, "name": "_addTokenToAllTokensEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2079, "src": "43944:31:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 1992, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "43944:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 1993, "nodeType": "ExpressionStatement", "src": "43944:40:0"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2011, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2006, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1970, "src": "44102:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2009, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "44116:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2008, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "44108:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2007, "name": "address", "nodeType": "ElementaryTypeName", "src": "44108:7:0", "typeDescriptions": {}}}, "id": 2010, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44108:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "44102:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2017, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1970, "src": "44200:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 2018, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1968, "src": "44206:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "44200:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2026, "nodeType": "IfStatement", "src": "44196:81:0", "trueBody": {"id": 2025, "nodeType": "Block", "src": "44212:65:0", "statements": [{"expression": {"arguments": [{"id": 2021, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1970, "src": "44254:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2022, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1972, "src": "44258:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2020, "name": "_addTokenToOwnerEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2059, "src": "44226:27:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2023, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44226:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2024, "nodeType": "ExpressionStatement", "src": "44226:40:0"}]}}, "id": 2027, "nodeType": "IfStatement", "src": "44098:179:0", "trueBody": {"id": 2016, "nodeType": "Block", "src": "44120:70:0", "statements": [{"expression": {"arguments": [{"id": 2013, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1972, "src": "44171:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2012, "name": "_removeTokenFromAllTokensEnumeration", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2190, "src": "44134:36:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 2014, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44134:45:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2015, "nodeType": "ExpressionStatement", "src": "44134:45:0"}]}}]}, "documentation": {"id": 1966, "nodeType": "StructuredDocumentation", "src": "43121:585:0", "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 2029, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nameLocation": "43720:20:0", "nodeType": "FunctionDefinition", "overrides": {"id": 1974, "nodeType": "OverrideSpecifier", "overrides": [], "src": "43831:8:0"}, "parameters": {"id": 1973, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 1968, "mutability": "mutable", "name": "from", "nameLocation": "43758:4:0", "nodeType": "VariableDeclaration", "scope": 2029, "src": "43750:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1967, "name": "address", "nodeType": "ElementaryTypeName", "src": "43750:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1970, "mutability": "mutable", "name": "to", "nameLocation": "43780:2:0", "nodeType": "VariableDeclaration", "scope": 2029, "src": "43772:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 1969, "name": "address", "nodeType": "ElementaryTypeName", "src": "43772:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 1972, "mutability": "mutable", "name": "tokenId", "nameLocation": "43800:7:0", "nodeType": "VariableDeclaration", "scope": 2029, "src": "43792:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 1971, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "43792:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "43740:73:0"}, "returnParameters": {"id": 1975, "nodeType": "ParameterList", "parameters": [], "src": "43840:0:0"}, "scope": 2191, "src": "43711:572:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 2058, "nodeType": "Block", "src": "44651:143:0", "statements": [{"assignments": [2038], "declarations": [{"constant": false, "id": 2038, "mutability": "mutable", "name": "length", "nameLocation": "44669:6:0", "nodeType": "VariableDeclaration", "scope": 2058, "src": "44661:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2037, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44661:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2043, "initialValue": {"arguments": [{"id": 2041, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "44695:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 2039, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "44678:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 2040, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1158, "src": "44678:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 2042, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "44678:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "44661:37:0"}, {"expression": {"id": 2050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 2044, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "44708:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}}, "id": 2047, "indexExpression": {"id": 2045, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2032, "src": "44721:2:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "44708:16:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2048, "indexExpression": {"id": 2046, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2038, "src": "44725:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "44708:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2049, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "44735:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "44708:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2051, "nodeType": "ExpressionStatement", "src": "44708:34:0"}, {"expression": {"id": 2056, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2052, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1872, "src": "44752:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2054, "indexExpression": {"id": 2053, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2034, "src": "44770:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "44752:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2055, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2038, "src": "44781:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "44752:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2057, "nodeType": "ExpressionStatement", "src": "44752:35:0"}]}, "documentation": {"id": 2030, "nodeType": "StructuredDocumentation", "src": "44289:283:0", "text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"}, "id": 2059, "implemented": true, "kind": "function", "modifiers": [], "name": "_addTokenToOwnerEnumeration", "nameLocation": "44586:27:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2035, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2032, "mutability": "mutable", "name": "to", "nameLocation": "44622:2:0", "nodeType": "VariableDeclaration", "scope": 2059, "src": "44614:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2031, "name": "address", "nodeType": "ElementaryTypeName", "src": "44614:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2034, "mutability": "mutable", "name": "tokenId", "nameLocation": "44634:7:0", "nodeType": "VariableDeclaration", "scope": 2059, "src": "44626:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "44626:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "44613:29:0"}, "returnParameters": {"id": 2036, "nodeType": "ParameterList", "parameters": [], "src": "44651:0:0"}, "scope": 2191, "src": "44577:217:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 2078, "nodeType": "Block", "src": "45055:95:0", "statements": [{"expression": {"id": 2070, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2065, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1879, "src": "45065:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2067, "indexExpression": {"id": 2066, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2062, "src": "45081:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "45065:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2068, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "45092:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2069, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "45092:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "45065:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2071, "nodeType": "ExpressionStatement", "src": "45065:44:0"}, {"expression": {"arguments": [{"id": 2075, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2062, "src": "45135:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2072, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "45119:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "45119:15:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$", "typeString": "function (uint256[] storage pointer,uint256)"}}, "id": 2076, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "45119:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2077, "nodeType": "ExpressionStatement", "src": "45119:24:0"}]}, "documentation": {"id": 2060, "nodeType": "StructuredDocumentation", "src": "44800:184:0", "text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"}, "id": 2079, "implemented": true, "kind": "function", "modifiers": [], "name": "_addTokenToAllTokensEnumeration", "nameLocation": "44998:31:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2063, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2062, "mutability": "mutable", "name": "tokenId", "nameLocation": "45038:7:0", "nodeType": "VariableDeclaration", "scope": 2079, "src": "45030:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2061, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "45030:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "45029:17:0"}, "returnParameters": {"id": 2064, "nodeType": "ParameterList", "parameters": [], "src": "45055:0:0"}, "scope": 2191, "src": "44989:161:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 2141, "nodeType": "Block", "src": "45860:889:0", "statements": [{"assignments": [2088], "declarations": [{"constant": false, "id": 2088, "mutability": "mutable", "name": "lastTokenIndex", "nameLocation": "46049:14:0", "nodeType": "VariableDeclaration", "scope": 2141, "src": "46041:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2087, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "46041:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2095, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2094, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2091, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2082, "src": "46083:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 2089, "name": "ERC721", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1856, "src": "46066:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_ERC721_$1856_$", "typeString": "type(contract ERC721)"}}, "id": 2090, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 1158, "src": "46066:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 2092, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "46066:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 2093, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "46091:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "46066:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "46041:51:0"}, {"assignments": [2097], "declarations": [{"constant": false, "id": 2097, "mutability": "mutable", "name": "tokenIndex", "nameLocation": "46110:10:0", "nodeType": "VariableDeclaration", "scope": 2141, "src": "46102:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2096, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "46102:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2101, "initialValue": {"baseExpression": {"id": 2098, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1872, "src": "46123:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2100, "indexExpression": {"id": 2099, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2084, "src": "46141:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46123:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "46102:47:0"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2104, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2102, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2097, "src": "46253:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 2103, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2088, "src": "46267:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "46253:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2128, "nodeType": "IfStatement", "src": "46249:323:0", "trueBody": {"id": 2127, "nodeType": "Block", "src": "46283:289:0", "statements": [{"assignments": [2106], "declarations": [{"constant": false, "id": 2106, "mutability": "mutable", "name": "lastTokenId", "nameLocation": "46305:11:0", "nodeType": "VariableDeclaration", "scope": 2127, "src": "46297:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2105, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "46297:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2112, "initialValue": {"baseExpression": {"baseExpression": {"id": 2107, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "46319:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}}, "id": 2109, "indexExpression": {"id": 2108, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2082, "src": "46332:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46319:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2111, "indexExpression": {"id": 2110, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2088, "src": "46338:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46319:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "46297:56:0"}, {"expression": {"id": 2119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 2113, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "46368:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}}, "id": 2116, "indexExpression": {"id": 2114, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2082, "src": "46381:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46368:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2117, "indexExpression": {"id": 2115, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2097, "src": "46387:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46368:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2118, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2106, "src": "46401:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "46368:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2120, "nodeType": "ExpressionStatement", "src": "46368:44:0"}, {"expression": {"id": 2125, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2121, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1872, "src": "46484:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2123, "indexExpression": {"id": 2122, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2106, "src": "46502:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46484:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2124, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2097, "src": "46517:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "46484:43:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2126, "nodeType": "ExpressionStatement", "src": "46484:43:0"}]}}, {"expression": {"id": 2132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "46658:33:0", "subExpression": {"baseExpression": {"id": 2129, "name": "_ownedTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1872, "src": "46665:17:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2131, "indexExpression": {"id": 2130, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2084, "src": "46683:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46665:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2133, "nodeType": "ExpressionStatement", "src": "46658:33:0"}, {"expression": {"id": 2139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "46701:41:0", "subExpression": {"baseExpression": {"baseExpression": {"id": 2134, "name": "_ownedTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1868, "src": "46708:12:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$", "typeString": "mapping(address => mapping(uint256 => uint256))"}}, "id": 2136, "indexExpression": {"id": 2135, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2082, "src": "46721:4:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "46708:18:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2138, "indexExpression": {"id": 2137, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2088, "src": "46727:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "46708:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2140, "nodeType": "ExpressionStatement", "src": "46701:41:0"}]}, "documentation": {"id": 2080, "nodeType": "StructuredDocumentation", "src": "45156:606:0", "text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"}, "id": 2142, "implemented": true, "kind": "function", "modifiers": [], "name": "_removeTokenFromOwnerEnumeration", "nameLocation": "45776:32:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2085, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2082, "mutability": "mutable", "name": "from", "nameLocation": "45817:4:0", "nodeType": "VariableDeclaration", "scope": 2142, "src": "45809:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2081, "name": "address", "nodeType": "ElementaryTypeName", "src": "45809:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2084, "mutability": "mutable", "name": "tokenId", "nameLocation": "45831:7:0", "nodeType": "VariableDeclaration", "scope": 2142, "src": "45823:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2083, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "45823:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "45808:31:0"}, "returnParameters": {"id": 2086, "nodeType": "ParameterList", "parameters": [], "src": "45860:0:0"}, "scope": 2191, "src": "45767:982:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 2189, "nodeType": "Block", "src": "47108:990:0", "statements": [{"assignments": [2149], "declarations": [{"constant": false, "id": 2149, "mutability": "mutable", "name": "lastTokenIndex", "nameLocation": "47294:14:0", "nodeType": "VariableDeclaration", "scope": 2189, "src": "47286:22:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2148, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47286:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2154, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2150, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "47311:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "47311:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "31", "id": 2152, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "47331:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "47311:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "47286:46:0"}, {"assignments": [2156], "declarations": [{"constant": false, "id": 2156, "mutability": "mutable", "name": "tokenIndex", "nameLocation": "47350:10:0", "nodeType": "VariableDeclaration", "scope": 2189, "src": "47342:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2155, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47342:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2160, "initialValue": {"baseExpression": {"id": 2157, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1879, "src": "47363:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2159, "indexExpression": {"id": 2158, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2145, "src": "47379:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "47363:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "47342:45:0"}, {"assignments": [2162], "declarations": [{"constant": false, "id": 2162, "mutability": "mutable", "name": "lastTokenId", "nameLocation": "47717:11:0", "nodeType": "VariableDeclaration", "scope": 2189, "src": "47709:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2161, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47709:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2166, "initialValue": {"baseExpression": {"id": 2163, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "47731:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2165, "indexExpression": {"id": 2164, "name": "lastTokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2149, "src": "47742:14:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "47731:26:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "47709:48:0"}, {"expression": {"id": 2171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2167, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "47768:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2169, "indexExpression": {"id": 2168, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2156, "src": "47779:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "47768:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2170, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2162, "src": "47793:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "47768:36:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2172, "nodeType": "ExpressionStatement", "src": "47768:36:0"}, {"expression": {"id": 2177, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2173, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1879, "src": "47872:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2175, "indexExpression": {"id": 2174, "name": "lastTokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2162, "src": "47888:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "47872:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2176, "name": "tokenIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2156, "src": "47903:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "47872:41:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2178, "nodeType": "ExpressionStatement", "src": "47872:41:0"}, {"expression": {"id": 2182, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "48034:31:0", "subExpression": {"baseExpression": {"id": 2179, "name": "_allTokensIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1879, "src": "48041:15:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$", "typeString": "mapping(uint256 => uint256)"}}, "id": 2181, "indexExpression": {"id": 2180, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2145, "src": "48057:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "48041:24:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2183, "nodeType": "ExpressionStatement", "src": "48034:31:0"}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2184, "name": "_allTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1875, "src": "48075:10:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage", "typeString": "uint256[] storage ref"}}, "id": 2186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pop", "nodeType": "MemberAccess", "src": "48075:14:0", "typeDescriptions": {"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$", "typeString": "function (uint256[] storage pointer)"}}, "id": 2187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "48075:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2188, "nodeType": "ExpressionStatement", "src": "48075:16:0"}]}, "documentation": {"id": 2143, "nodeType": "StructuredDocumentation", "src": "46755:277:0", "text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"}, "id": 2190, "implemented": true, "kind": "function", "modifiers": [], "name": "_removeTokenFromAllTokensEnumeration", "nameLocation": "47046:36:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2146, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2145, "mutability": "mutable", "name": "tokenId", "nameLocation": "47091:7:0", "nodeType": "VariableDeclaration", "scope": 2190, "src": "47083:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2144, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "47083:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "47082:17:0"}, "returnParameters": {"id": 2147, "nodeType": "ParameterList", "parameters": [], "src": "47108:0:0"}, "scope": 2191, "src": "47037:1061:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 2639, "src": "41260:6840:0", "usedErrors": []}, {"id": 2192, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "48154:23:0"}, {"abstract": true, "baseContracts": [{"baseName": {"id": 2194, "name": "Context", "nodeType": "IdentifierPath", "referencedDeclaration": 1048, "src": "48703:7:0"}, "id": 2195, "nodeType": "InheritanceSpecifier", "src": "48703:7:0"}], "canonicalName": "Ownable", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 2193, "nodeType": "StructuredDocumentation", "src": "48179:494:0", "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."}, "fullyImplemented": true, "id": 2293, "linearizedBaseContracts": [2293, 1048], "name": "Ownable", "nameLocation": "48692:7:0", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "id": 2197, "mutability": "mutable", "name": "_owner", "nameLocation": "48733:6:0", "nodeType": "VariableDeclaration", "scope": 2293, "src": "48717:22:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2196, "name": "address", "nodeType": "ElementaryTypeName", "src": "48717:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "private"}, {"anonymous": false, "id": 2203, "name": "OwnershipTransferred", "nameLocation": "48752:20:0", "nodeType": "EventDefinition", "parameters": {"id": 2202, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2199, "indexed": true, "mutability": "mutable", "name": "previousOwner", "nameLocation": "48798:13:0", "nodeType": "VariableDeclaration", "scope": 2203, "src": "48782:29:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2198, "name": "address", "nodeType": "ElementaryTypeName", "src": "48782:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2201, "indexed": true, "mutability": "mutable", "name": "newOwner", "nameLocation": "48837:8:0", "nodeType": "VariableDeclaration", "scope": 2203, "src": "48821:24:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2200, "name": "address", "nodeType": "ElementaryTypeName", "src": "48821:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "48772:79:0"}, "src": "48746:106:0"}, {"body": {"id": 2212, "nodeType": "Block", "src": "48968:40:0", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 2208, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "48988:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 2209, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "48988:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2207, "name": "_setOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2292, "src": "48978:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 2210, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "48978:23:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2211, "nodeType": "ExpressionStatement", "src": "48978:23:0"}]}, "documentation": {"id": 2204, "nodeType": "StructuredDocumentation", "src": "48858:91:0", "text": " @dev Initializes the contract setting the deployer as the initial owner."}, "id": 2213, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 2205, "nodeType": "ParameterList", "parameters": [], "src": "48965:2:0"}, "returnParameters": {"id": 2206, "nodeType": "ParameterList", "parameters": [], "src": "48968:0:0"}, "scope": 2293, "src": "48954:54:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 2221, "nodeType": "Block", "src": "49139:30:0", "statements": [{"expression": {"id": 2219, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2197, "src": "49156:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 2218, "id": 2220, "nodeType": "Return", "src": "49149:13:0"}]}, "documentation": {"id": 2214, "nodeType": "StructuredDocumentation", "src": "49014:65:0", "text": " @dev Returns the address of the current owner."}, "functionSelector": "8da5cb5b", "id": 2222, "implemented": true, "kind": "function", "modifiers": [], "name": "owner", "nameLocation": "49093:5:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2215, "nodeType": "ParameterList", "parameters": [], "src": "49098:2:0"}, "returnParameters": {"id": 2218, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2217, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2222, "src": "49130:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2216, "name": "address", "nodeType": "ElementaryTypeName", "src": "49130:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "49129:9:0"}, "scope": 2293, "src": "49084:85:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 2235, "nodeType": "Block", "src": "49278:96:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 2226, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2222, "src": "49296:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 2227, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49296:7:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 2228, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1038, "src": "49307:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 2229, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49307:12:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "49296:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572", "id": 2231, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "49321:34:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}, "value": "Ownable: caller is not the owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe", "typeString": "literal_string \"Ownable: caller is not the owner\""}], "id": 2225, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "49288:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2232, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49288:68:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2233, "nodeType": "ExpressionStatement", "src": "49288:68:0"}, {"id": 2234, "nodeType": "PlaceholderStatement", "src": "49366:1:0"}]}, "documentation": {"id": 2223, "nodeType": "StructuredDocumentation", "src": "49175:77:0", "text": " @dev Throws if called by any account other than the owner."}, "id": 2236, "name": "onlyOwner", "nameLocation": "49266:9:0", "nodeType": "ModifierDefinition", "parameters": {"id": 2224, "nodeType": "ParameterList", "parameters": [], "src": "49275:2:0"}, "src": "49257:117:0", "virtual": false, "visibility": "internal"}, {"body": {"id": 2249, "nodeType": "Block", "src": "49770:38:0", "statements": [{"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 2245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "49798:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2244, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "49790:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2243, "name": "address", "nodeType": "ElementaryTypeName", "src": "49790:7:0", "typeDescriptions": {}}}, "id": 2246, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49790:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2242, "name": "_setOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2292, "src": "49780:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 2247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "49780:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2248, "nodeType": "ExpressionStatement", "src": "49780:21:0"}]}, "documentation": {"id": 2237, "nodeType": "StructuredDocumentation", "src": "49380:331:0", "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."}, "functionSelector": "715018a6", "id": 2250, "implemented": true, "kind": "function", "modifiers": [{"id": 2240, "kind": "modifierInvocation", "modifierName": {"id": 2239, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "49760:9:0"}, "nodeType": "ModifierInvocation", "src": "49760:9:0"}], "name": "renounceOwnership", "nameLocation": "49725:17:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2238, "nodeType": "ParameterList", "parameters": [], "src": "49742:2:0"}, "returnParameters": {"id": 2241, "nodeType": "ParameterList", "parameters": [], "src": "49770:0:0"}, "scope": 2293, "src": "49716:92:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 2272, "nodeType": "Block", "src": "50027:153:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2259, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2253, "src": "50058:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2262, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "50078:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2261, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "50070:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2260, "name": "address", "nodeType": "ElementaryTypeName", "src": "50070:7:0", "typeDescriptions": {}}}, "id": 2263, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50070:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "50058:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373", "id": 2265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "50094:40:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}, "value": "Ownable: new owner is the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe", "typeString": "literal_string \"Ownable: new owner is the zero address\""}], "id": 2258, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "50037:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50037:107:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2267, "nodeType": "ExpressionStatement", "src": "50037:107:0"}, {"expression": {"arguments": [{"id": 2269, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2253, "src": "50164:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2268, "name": "_setOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2292, "src": "50154:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 2270, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50154:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2271, "nodeType": "ExpressionStatement", "src": "50154:19:0"}]}, "documentation": {"id": 2251, "nodeType": "StructuredDocumentation", "src": "49814:138:0", "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."}, "functionSelector": "f2fde38b", "id": 2273, "implemented": true, "kind": "function", "modifiers": [{"id": 2256, "kind": "modifierInvocation", "modifierName": {"id": 2255, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "50017:9:0"}, "nodeType": "ModifierInvocation", "src": "50017:9:0"}], "name": "transferOwnership", "nameLocation": "49966:17:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2254, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2253, "mutability": "mutable", "name": "newOwner", "nameLocation": "49992:8:0", "nodeType": "VariableDeclaration", "scope": 2273, "src": "49984:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2252, "name": "address", "nodeType": "ElementaryTypeName", "src": "49984:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "49983:18:0"}, "returnParameters": {"id": 2257, "nodeType": "ParameterList", "parameters": [], "src": "50027:0:0"}, "scope": 2293, "src": "49957:223:0", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 2291, "nodeType": "Block", "src": "50231:124:0", "statements": [{"assignments": [2279], "declarations": [{"constant": false, "id": 2279, "mutability": "mutable", "name": "oldOwner", "nameLocation": "50249:8:0", "nodeType": "VariableDeclaration", "scope": 2291, "src": "50241:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2278, "name": "address", "nodeType": "ElementaryTypeName", "src": "50241:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 2281, "initialValue": {"id": 2280, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2197, "src": "50260:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "50241:25:0"}, {"expression": {"id": 2284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2282, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2197, "src": "50276:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2283, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2275, "src": "50285:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "50276:17:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 2285, "nodeType": "ExpressionStatement", "src": "50276:17:0"}, {"eventCall": {"arguments": [{"id": 2287, "name": "oldOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2279, "src": "50329:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2288, "name": "newOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2275, "src": "50339:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 2286, "name": "OwnershipTransferred", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2203, "src": "50308:20:0", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 2289, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "50308:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2290, "nodeType": "EmitStatement", "src": "50303:45:0"}]}, "id": 2292, "implemented": true, "kind": "function", "modifiers": [], "name": "_setOwner", "nameLocation": "50195:9:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2276, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2275, "mutability": "mutable", "name": "newOwner", "nameLocation": "50213:8:0", "nodeType": "VariableDeclaration", "scope": 2292, "src": "50205:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2274, "name": "address", "nodeType": "ElementaryTypeName", "src": "50205:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "50204:18:0"}, "returnParameters": {"id": 2277, "nodeType": "ParameterList", "parameters": [], "src": "50231:0:0"}, "scope": 2293, "src": "50186:169:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 2639, "src": "48674:1683:0", "usedErrors": []}, {"id": 2294, "literals": ["solidity", ">=", "0.7", ".0", "<", "0.9", ".0"], "nodeType": "PragmaDirective", "src": "50375:31:0"}, {"abstract": false, "baseContracts": [{"baseName": {"id": 2295, "name": "ERC721Enumerable", "nodeType": "IdentifierPath", "referencedDeclaration": 2191, "src": "50432:16:0"}, "id": 2296, "nodeType": "InheritanceSpecifier", "src": "50432:16:0"}, {"baseName": {"id": 2297, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 2293, "src": "50450:7:0"}, "id": 2298, "nodeType": "InheritanceSpecifier", "src": "50450:7:0"}], "canonicalName": "FundMePunks", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 2638, "linearizedBaseContracts": [2638, 2293, 2191, 465, 1856, 1010, 436, 487, 322, 1048], "name": "FundMePunks", "nameLocation": "50417:11:0", "nodeType": "ContractDefinition", "nodes": [{"id": 2301, "libraryName": {"id": 2299, "name": "Strings", "nodeType": "IdentifierPath", "referencedDeclaration": 689, "src": "50470:7:0"}, "nodeType": "UsingForDirective", "src": "50464:26:0", "typeName": {"id": 2300, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50482:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"constant": false, "id": 2303, "mutability": "mutable", "name": "baseURI", "nameLocation": "50503:7:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50496:14:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 2302, "name": "string", "nodeType": "ElementaryTypeName", "src": "50496:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "c6682862", "id": 2306, "mutability": "mutable", "name": "baseExtension", "nameLocation": "50530:13:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50516:37:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 2304, "name": "string", "nodeType": "ElementaryTypeName", "src": "50516:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "2e6a736f6e", "id": 2305, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "50546:7:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972", "typeString": "literal_string \".json\""}, "value": ".json"}, "visibility": "public"}, {"constant": false, "functionSelector": "13faede6", "id": 2308, "mutability": "mutable", "name": "cost", "nameLocation": "50574:4:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50559:19:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50559:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "d5abeb01", "id": 2310, "mutability": "mutable", "name": "maxSupply", "nameLocation": "50599:9:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50584:24:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2309, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50584:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "239c70ae", "id": 2313, "mutability": "mutable", "name": "maxMintAmount", "nameLocation": "50629:13:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50614:32:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2311, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50614:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "35", "id": 2312, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "50645:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "visibility": "public"}, {"constant": false, "functionSelector": "54214f69", "id": 2316, "mutability": "mutable", "name": "isRevealed", "nameLocation": "50664:10:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50652:29:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2314, "name": "bool", "nodeType": "ElementaryTypeName", "src": "50652:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "value": {"hexValue": "74727565", "id": 2315, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "50677:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "visibility": "public"}, {"constant": false, "functionSelector": "081c8c44", "id": 2318, "mutability": "mutable", "name": "notRevealedUri", "nameLocation": "50701:14:0", "nodeType": "VariableDeclaration", "scope": 2638, "src": "50687:28:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 2317, "name": "string", "nodeType": "ElementaryTypeName", "src": "50687:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "public"}, {"body": {"id": 2354, "nodeType": "Block", "src": "50953:155:0", "statements": [{"id": 2337, "nodeType": "Block", "src": "50954:2:0", "statements": []}, {"expression": {"id": 2340, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2338, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "50974:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2339, "name": "_cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2324, "src": "50981:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "50974:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2341, "nodeType": "ExpressionStatement", "src": "50974:12:0"}, {"expression": {"id": 2344, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2342, "name": "maxSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2310, "src": "50996:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2343, "name": "_maxSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2326, "src": "51008:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "50996:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2345, "nodeType": "ExpressionStatement", "src": "50996:22:0"}, {"expression": {"arguments": [{"id": 2347, "name": "_initBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2328, "src": "51040:12:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 2346, "name": "setBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2598, "src": "51029:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 2348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51029:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2349, "nodeType": "ExpressionStatement", "src": "51029:24:0"}, {"expression": {"arguments": [{"id": 2351, "name": "_initNotRevealedUri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2330, "src": "51081:19:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 2350, "name": "setNotRevealedURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2586, "src": "51063:17:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 2352, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51063:38:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2353, "nodeType": "ExpressionStatement", "src": "51063:38:0"}]}, "id": 2355, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"id": 2333, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2320, "src": "50937:5:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 2334, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2322, "src": "50944:7:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "id": 2335, "kind": "baseConstructorSpecifier", "modifierName": {"id": 2332, "name": "ERC721", "nodeType": "IdentifierPath", "referencedDeclaration": 1856, "src": "50930:6:0"}, "nodeType": "ModifierInvocation", "src": "50930:22:0"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 2331, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2320, "mutability": "mutable", "name": "_name", "nameLocation": "50757:5:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50743:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2319, "name": "string", "nodeType": "ElementaryTypeName", "src": "50743:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 2322, "mutability": "mutable", "name": "_symbol", "nameLocation": "50786:7:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50772:21:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2321, "name": "string", "nodeType": "ElementaryTypeName", "src": "50772:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 2324, "mutability": "mutable", "name": "_cost", "nameLocation": "50811:5:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50803:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2323, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50803:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2326, "mutability": "mutable", "name": "_maxSupply", "nameLocation": "50834:10:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50826:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2325, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "50826:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2328, "mutability": "mutable", "name": "_initBaseURI", "nameLocation": "50868:12:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50854:26:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2327, "name": "string", "nodeType": "ElementaryTypeName", "src": "50854:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 2330, "mutability": "mutable", "name": "_initNotRevealedUri", "nameLocation": "50904:19:0", "nodeType": "VariableDeclaration", "scope": 2355, "src": "50890:33:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2329, "name": "string", "nodeType": "ElementaryTypeName", "src": "50890:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "50733:196:0"}, "returnParameters": {"id": 2336, "nodeType": "ParameterList", "parameters": [], "src": "50953:0:0"}, "scope": 2638, "src": "50722:386:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1257], "body": {"id": 2363, "nodeType": "Block", "src": "51205:31:0", "statements": [{"expression": {"id": 2361, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2303, "src": "51222:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 2360, "id": 2362, "nodeType": "Return", "src": "51215:14:0"}]}, "id": 2364, "implemented": true, "kind": "function", "modifiers": [], "name": "_baseURI", "nameLocation": "51139:8:0", "nodeType": "FunctionDefinition", "overrides": {"id": 2357, "nodeType": "OverrideSpecifier", "overrides": [], "src": "51172:8:0"}, "parameters": {"id": 2356, "nodeType": "ParameterList", "parameters": [], "src": "51147:2:0"}, "returnParameters": {"id": 2360, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2359, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2364, "src": "51190:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2358, "name": "string", "nodeType": "ElementaryTypeName", "src": "51190:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "51189:15:0"}, "scope": 2638, "src": "51130:106:0", "stateMutability": "view", "virtual": true, "visibility": "internal"}, {"body": {"id": 2440, "nodeType": "Block", "src": "51306:540:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2375, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 2371, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "51343:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2372, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "51343:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2370, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1158, "src": "51333:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 2373, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51333:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "35", "id": 2374, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "51358:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5"}, "value": "5"}, "src": "51333:26:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c792035206d696e7420706572206163636f756e74", "id": 2376, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "51361:25:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4f338b8b30621cea4695546b178d6917954bba4e3cd77a33cbdef7cc0f7539d2", "typeString": "literal_string \"Only 5 mint per account\""}, "value": "Only 5 mint per account"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4f338b8b30621cea4695546b178d6917954bba4e3cd77a33cbdef7cc0f7539d2", "typeString": "literal_string \"Only 5 mint per account\""}], "id": 2369, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "51325:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2377, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51325:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2378, "nodeType": "ExpressionStatement", "src": "51325:62:0"}, {"assignments": [2380], "declarations": [{"constant": false, "id": 2380, "mutability": "mutable", "name": "supply", "nameLocation": "51471:6:0", "nodeType": "VariableDeclaration", "scope": 2440, "src": "51463:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2379, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51463:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2383, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2381, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1942, "src": "51480:11:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)"}}, "id": 2382, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51480:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "51463:30:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2387, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2385, "name": "_mintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "51511:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 2386, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "51525:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "51511:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2384, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "51503:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2388, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51503:24:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2389, "nodeType": "ExpressionStatement", "src": "51503:24:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2393, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2391, "name": "_mintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "51545:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 2392, "name": "maxMintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2313, "src": "51560:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51545:28:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2390, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "51537:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51537:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2395, "nodeType": "ExpressionStatement", "src": "51537:37:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2401, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2397, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2380, "src": "51592:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 2398, "name": "_mintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "51601:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51592:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 2400, "name": "maxSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2310, "src": "51616:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51592:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2396, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "51584:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2402, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51584:42:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2403, "nodeType": "ExpressionStatement", "src": "51584:42:0"}, {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2408, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2404, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "51641:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "51641:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 2406, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2222, "src": "51655:5:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$", "typeString": "function () view returns (address)"}}, "id": 2407, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51655:7:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "51641:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2419, "nodeType": "IfStatement", "src": "51637:92:0", "trueBody": {"id": 2418, "nodeType": "Block", "src": "51664:65:0", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2415, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2410, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "51686:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "51686:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2414, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2412, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "51699:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 2413, "name": "_mintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "51706:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51699:18:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51686:31:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2409, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "51678:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2416, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51678:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2417, "nodeType": "ExpressionStatement", "src": "51678:40:0"}]}}, {"body": {"id": 2438, "nodeType": "Block", "src": "51782:58:0", "statements": [{"expression": {"arguments": [{"expression": {"id": 2431, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "51806:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "51806:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2435, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2433, "name": "supply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2380, "src": "51818:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 2434, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2421, "src": "51827:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51818:10:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2430, "name": "_safeMint", "nodeType": "Identifier", "overloadedDeclarations": [1552, 1581], "referencedDeclaration": 1552, "src": "51796:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2436, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51796:33:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2437, "nodeType": "ExpressionStatement", "src": "51796:33:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2424, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2421, "src": "51759:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 2425, "name": "_mintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2366, "src": "51764:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "51759:16:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2439, "initializationExpression": {"assignments": [2421], "declarations": [{"constant": false, "id": 2421, "mutability": "mutable", "name": "i", "nameLocation": "51752:1:0", "nodeType": "VariableDeclaration", "scope": 2439, "src": "51744:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2420, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51744:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2423, "initialValue": {"hexValue": "31", "id": 2422, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "51756:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "VariableDeclarationStatement", "src": "51744:13:0"}, "loopExpression": {"expression": {"id": 2428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "51777:3:0", "subExpression": {"id": 2427, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2421, "src": "51777:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2429, "nodeType": "ExpressionStatement", "src": "51777:3:0"}, "nodeType": "ForStatement", "src": "51739:101:0"}]}, "functionSelector": "a0712d68", "id": 2441, "implemented": true, "kind": "function", "modifiers": [], "name": "mint", "nameLocation": "51265:4:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2367, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2366, "mutability": "mutable", "name": "_mintAmount", "nameLocation": "51278:11:0", "nodeType": "VariableDeclaration", "scope": 2441, "src": "51270:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2365, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51270:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "51269:21:0"}, "returnParameters": {"id": 2368, "nodeType": "ParameterList", "parameters": [], "src": "51306:0:0"}, "scope": 2638, "src": "51256:590:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 2488, "nodeType": "Block", "src": "51958:273:0", "statements": [{"assignments": [2450], "declarations": [{"constant": false, "id": 2450, "mutability": "mutable", "name": "ownerTokenCount", "nameLocation": "51976:15:0", "nodeType": "VariableDeclaration", "scope": 2488, "src": "51968:23:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2449, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51968:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2454, "initialValue": {"arguments": [{"id": 2452, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2443, "src": "52004:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2451, "name": "balanceOf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1158, "src": "51994:9:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 2453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "51994:17:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "51968:43:0"}, {"assignments": [2459], "declarations": [{"constant": false, "id": 2459, "mutability": "mutable", "name": "tokenIds", "nameLocation": "52038:8:0", "nodeType": "VariableDeclaration", "scope": 2488, "src": "52021:25:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2457, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "52021:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2458, "nodeType": "ArrayTypeName", "src": "52021:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "id": 2465, "initialValue": {"arguments": [{"id": 2463, "name": "ownerTokenCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2450, "src": "52063:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2462, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "52049:13:0", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 2460, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "52053:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2461, "nodeType": "ArrayTypeName", "src": "52053:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 2464, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52049:30:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "52021:58:0"}, {"body": {"id": 2484, "nodeType": "Block", "src": "52131:69:0", "statements": [{"expression": {"id": 2482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2475, "name": "tokenIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2459, "src": "52145:8:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 2477, "indexExpression": {"id": 2476, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2467, "src": "52154:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "52145:11:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2479, "name": "_owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2443, "src": "52179:6:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2480, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2467, "src": "52187:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2478, "name": "tokenOfOwnerByIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1931, "src": "52159:19:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (address,uint256) view returns (uint256)"}}, "id": 2481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52159:30:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "52145:44:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2483, "nodeType": "ExpressionStatement", "src": "52145:44:0"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2469, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2467, "src": "52105:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2470, "name": "ownerTokenCount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2450, "src": "52109:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "52105:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2485, "initializationExpression": {"assignments": [2467], "declarations": [{"constant": false, "id": 2467, "mutability": "mutable", "name": "i", "nameLocation": "52102:1:0", "nodeType": "VariableDeclaration", "scope": 2485, "src": "52094:9:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "52094:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2468, "nodeType": "VariableDeclarationStatement", "src": "52094:9:0"}, "loopExpression": {"expression": {"id": 2473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "52126:3:0", "subExpression": {"id": 2472, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2467, "src": "52126:1:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2474, "nodeType": "ExpressionStatement", "src": "52126:3:0"}, "nodeType": "ForStatement", "src": "52089:111:0"}, {"expression": {"id": 2486, "name": "tokenIds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2459, "src": "52216:8:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "functionReturnParameters": 2448, "id": 2487, "nodeType": "Return", "src": "52209:15:0"}]}, "functionSelector": "438b6300", "id": 2489, "implemented": true, "kind": "function", "modifiers": [], "name": "walletOfOwner", "nameLocation": "51861:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2444, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2443, "mutability": "mutable", "name": "_owner", "nameLocation": "51883:6:0", "nodeType": "VariableDeclaration", "scope": 2489, "src": "51875:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2442, "name": "address", "nodeType": "ElementaryTypeName", "src": "51875:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "51874:16:0"}, "returnParameters": {"id": 2448, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2447, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2489, "src": "51936:16:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "51936:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2446, "nodeType": "ArrayTypeName", "src": "51936:9:0", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "51935:18:0"}, "scope": 2638, "src": "51852:379:0", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [1248], "body": {"id": 2537, "nodeType": "Block", "src": "52369:568:0", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 2499, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2491, "src": "52408:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2498, "name": "_exists", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1496, "src": "52400:7:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256) view returns (bool)"}}, "id": 2500, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52400:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e", "id": 2501, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "52430:49:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}, "value": "ERC721Metadata: URI query for nonexistent token"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb", "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""}], "id": 2497, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "52379:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52379:110:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2503, "nodeType": "ExpressionStatement", "src": "52379:110:0"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 2506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2504, "name": "isRevealed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2316, "src": "52504:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "66616c7365", "id": 2505, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "52518:5:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "52504:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2510, "nodeType": "IfStatement", "src": "52500:71:0", "trueBody": {"id": 2509, "nodeType": "Block", "src": "52525:46:0", "statements": [{"expression": {"id": 2507, "name": "notRevealedUri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2318, "src": "52546:14:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 2496, "id": 2508, "nodeType": "Return", "src": "52539:21:0"}]}}, {"assignments": [2512], "declarations": [{"constant": false, "id": 2512, "mutability": "mutable", "name": "currentBaseURI", "nameLocation": "52595:14:0", "nodeType": "VariableDeclaration", "scope": 2537, "src": "52581:28:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2511, "name": "string", "nodeType": "ElementaryTypeName", "src": "52581:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "id": 2515, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 2513, "name": "_baseURI", "nodeType": "Identifier", "overloadedDeclarations": [2364], "referencedDeclaration": 2364, "src": "52612:8:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$", "typeString": "function () view returns (string memory)"}}, "id": 2514, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52612:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "VariableDeclarationStatement", "src": "52581:41:0"}, {"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"arguments": [{"id": 2518, "name": "currentBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2512, "src": "52657:14:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 2517, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "52651:5:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 2516, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "52651:5:0", "typeDescriptions": {}}}, "id": 2519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52651:21:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 2520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "52651:28:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 2521, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "52682:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "52651:32:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "", "id": 2534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "52928:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}, "id": 2535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "52651:279:0", "trueExpression": {"arguments": [{"arguments": [{"id": 2527, "name": "currentBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2512, "src": "52772:14:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 2528, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2491, "src": "52812:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toString", "nodeType": "MemberAccess", "referencedDeclaration": 571, "src": "52812:16:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (string memory)"}}, "id": 2530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52812:18:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 2531, "name": "baseExtension", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2306, "src": "52856:13:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}], "expression": {"id": 2525, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "52730:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 2526, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "52730:16:0", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2532, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52730:161:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2524, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "52702:6:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 2523, "name": "string", "nodeType": "ElementaryTypeName", "src": "52702:6:0", "typeDescriptions": {}}}, "id": 2533, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "52702:207:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 2496, "id": 2536, "nodeType": "Return", "src": "52632:298:0"}]}, "functionSelector": "c87b56dd", "id": 2538, "implemented": true, "kind": "function", "modifiers": [], "name": "tokenURI", "nameLocation": "52246:8:0", "nodeType": "FunctionDefinition", "overrides": {"id": 2493, "nodeType": "OverrideSpecifier", "overrides": [], "src": "52324:8:0"}, "parameters": {"id": 2492, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2491, "mutability": "mutable", "name": "tokenId", "nameLocation": "52263:7:0", "nodeType": "VariableDeclaration", "scope": 2538, "src": "52255:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "52255:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "52254:17:0"}, "returnParameters": {"id": 2496, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2495, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 2538, "src": "52350:13:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2494, "name": "string", "nodeType": "ElementaryTypeName", "src": "52350:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "52349:15:0"}, "scope": 2638, "src": "52237:700:0", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 2549, "nodeType": "Block", "src": "53025:36:0", "statements": [{"expression": {"id": 2547, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2545, "name": "isRevealed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2316, "src": "53035:10:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2546, "name": "_state", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2540, "src": "53048:6:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "53035:19:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2548, "nodeType": "ExpressionStatement", "src": "53035:19:0"}]}, "functionSelector": "49a5980a", "id": 2550, "implemented": true, "kind": "function", "modifiers": [{"id": 2543, "kind": "modifierInvocation", "modifierName": {"id": 2542, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53015:9:0"}, "nodeType": "ModifierInvocation", "src": "53015:9:0"}], "name": "setIsRevealed", "nameLocation": "52981:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2541, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2540, "mutability": "mutable", "name": "_state", "nameLocation": "53000:6:0", "nodeType": "VariableDeclaration", "scope": 2550, "src": "52995:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2539, "name": "bool", "nodeType": "ElementaryTypeName", "src": "52995:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "52994:13:0"}, "returnParameters": {"id": 2544, "nodeType": "ParameterList", "parameters": [], "src": "53025:0:0"}, "scope": 2638, "src": "52972:89:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2561, "nodeType": "Block", "src": "53119:32:0", "statements": [{"expression": {"id": 2559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2557, "name": "cost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "53129:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2558, "name": "_newCost", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2552, "src": "53136:8:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "53129:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2560, "nodeType": "ExpressionStatement", "src": "53129:15:0"}]}, "functionSelector": "44a0d68a", "id": 2562, "implemented": true, "kind": "function", "modifiers": [{"id": 2555, "kind": "modifierInvocation", "modifierName": {"id": 2554, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53109:9:0"}, "nodeType": "ModifierInvocation", "src": "53109:9:0"}], "name": "setCost", "nameLocation": "53076:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2553, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2552, "mutability": "mutable", "name": "_newCost", "nameLocation": "53092:8:0", "nodeType": "VariableDeclaration", "scope": 2562, "src": "53084:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2551, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53084:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "53083:18:0"}, "returnParameters": {"id": 2556, "nodeType": "ParameterList", "parameters": [], "src": "53119:0:0"}, "scope": 2638, "src": "53067:84:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2573, "nodeType": "Block", "src": "53227:50:0", "statements": [{"expression": {"id": 2571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2569, "name": "maxMintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2313, "src": "53237:13:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2570, "name": "_newmaxMintAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2564, "src": "53253:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "53237:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2572, "nodeType": "ExpressionStatement", "src": "53237:33:0"}]}, "functionSelector": "7f00c7a6", "id": 2574, "implemented": true, "kind": "function", "modifiers": [{"id": 2567, "kind": "modifierInvocation", "modifierName": {"id": 2566, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53217:9:0"}, "nodeType": "ModifierInvocation", "src": "53217:9:0"}], "name": "setmaxMintAmount", "nameLocation": "53166:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2565, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2564, "mutability": "mutable", "name": "_newmaxMintAmount", "nameLocation": "53191:17:0", "nodeType": "VariableDeclaration", "scope": 2574, "src": "53183:25:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2563, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "53183:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "53182:27:0"}, "returnParameters": {"id": 2568, "nodeType": "ParameterList", "parameters": [], "src": "53227:0:0"}, "scope": 2638, "src": "53157:120:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2585, "nodeType": "Block", "src": "53358:49:0", "statements": [{"expression": {"id": 2583, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2581, "name": "notRevealedUri", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2318, "src": "53368:14:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2582, "name": "_notRevealedURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2576, "src": "53385:15:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "53368:32:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 2584, "nodeType": "ExpressionStatement", "src": "53368:32:0"}]}, "functionSelector": "f2c4ce1e", "id": 2586, "implemented": true, "kind": "function", "modifiers": [{"id": 2579, "kind": "modifierInvocation", "modifierName": {"id": 2578, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53348:9:0"}, "nodeType": "ModifierInvocation", "src": "53348:9:0"}], "name": "setNotRevealedURI", "nameLocation": "53292:17:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2577, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2576, "mutability": "mutable", "name": "_notRevealedURI", "nameLocation": "53324:15:0", "nodeType": "VariableDeclaration", "scope": 2586, "src": "53310:29:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2575, "name": "string", "nodeType": "ElementaryTypeName", "src": "53310:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "53309:31:0"}, "returnParameters": {"id": 2580, "nodeType": "ParameterList", "parameters": [], "src": "53358:0:0"}, "scope": 2638, "src": "53283:124:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2597, "nodeType": "Block", "src": "53477:38:0", "statements": [{"expression": {"id": 2595, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2593, "name": "baseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2303, "src": "53487:7:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2594, "name": "_newBaseURI", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2588, "src": "53497:11:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "53487:21:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 2596, "nodeType": "ExpressionStatement", "src": "53487:21:0"}]}, "functionSelector": "55f804b3", "id": 2598, "implemented": true, "kind": "function", "modifiers": [{"id": 2591, "kind": "modifierInvocation", "modifierName": {"id": 2590, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53467:9:0"}, "nodeType": "ModifierInvocation", "src": "53467:9:0"}], "name": "setBaseURI", "nameLocation": "53422:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2589, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2588, "mutability": "mutable", "name": "_newBaseURI", "nameLocation": "53447:11:0", "nodeType": "VariableDeclaration", "scope": 2598, "src": "53433:25:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2587, "name": "string", "nodeType": "ElementaryTypeName", "src": "53433:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "53432:27:0"}, "returnParameters": {"id": 2592, "nodeType": "ParameterList", "parameters": [], "src": "53477:0:0"}, "scope": 2638, "src": "53413:102:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2609, "nodeType": "Block", "src": "53617:50:0", "statements": [{"expression": {"id": 2607, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2605, "name": "baseExtension", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2306, "src": "53627:13:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2606, "name": "_newBaseExtension", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2600, "src": "53643:17:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "53627:33:0", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 2608, "nodeType": "ExpressionStatement", "src": "53627:33:0"}]}, "functionSelector": "da3ef23f", "id": 2610, "implemented": true, "kind": "function", "modifiers": [{"id": 2603, "kind": "modifierInvocation", "modifierName": {"id": 2602, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53603:9:0"}, "nodeType": "ModifierInvocation", "src": "53603:9:0"}], "name": "setBaseExtension", "nameLocation": "53530:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2601, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2600, "mutability": "mutable", "name": "_newBaseExtension", "nameLocation": "53561:17:0", "nodeType": "VariableDeclaration", "scope": 2610, "src": "53547:31:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 2599, "name": "string", "nodeType": "ElementaryTypeName", "src": "53547:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "53546:33:0"}, "returnParameters": {"id": 2604, "nodeType": "ParameterList", "parameters": [], "src": "53617:0:0"}, "scope": 2638, "src": "53521:146:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2636, "nodeType": "Block", "src": "53718:142:0", "statements": [{"assignments": [2616, null], "declarations": [{"constant": false, "id": 2616, "mutability": "mutable", "name": "success", "nameLocation": "53734:7:0", "nodeType": "VariableDeclaration", "scope": 2636, "src": "53729:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2615, "name": "bool", "nodeType": "ElementaryTypeName", "src": "53729:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 2631, "initialValue": {"arguments": [{"hexValue": "", "id": 2629, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "53824:2:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"arguments": [{"expression": {"id": 2619, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "53755:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "53755:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2618, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "53747:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 2617, "name": "address", "nodeType": "ElementaryTypeName", "src": "53747:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 2621, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "53747:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 2622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "53747:24:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 2628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"arguments": [{"id": 2625, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "53800:4:0", "typeDescriptions": {"typeIdentifier": "t_contract$_FundMePunks_$2638", "typeString": "contract FundMePunks"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_FundMePunks_$2638", "typeString": "contract FundMePunks"}], "id": 2624, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "53792:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2623, "name": "address", "nodeType": "ElementaryTypeName", "src": "53792:7:0", "typeDescriptions": {}}}, "id": 2626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "53792:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 2627, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balance", "nodeType": "MemberAccess", "src": "53792:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "53747:76:0", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 2630, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "53747:80:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "53728:99:0"}, {"expression": {"arguments": [{"id": 2633, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2616, "src": "53845:7:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2632, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "53837:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2634, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "53837:16:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2635, "nodeType": "ExpressionStatement", "src": "53837:16:0"}]}, "functionSelector": "3ccfd60b", "id": 2637, "implemented": true, "kind": "function", "modifiers": [{"id": 2613, "kind": "modifierInvocation", "modifierName": {"id": 2612, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 2236, "src": "53708:9:0"}, "nodeType": "ModifierInvocation", "src": "53708:9:0"}], "name": "withdraw", "nameLocation": "53682:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 2611, "nodeType": "ParameterList", "parameters": [], "src": "53690:2:0"}, "returnParameters": {"id": 2614, "nodeType": "ParameterList", "parameters": [], "src": "53718:0:0"}, "scope": 2638, "src": "53673:187:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}], "scope": 2639, "src": "50408:3454:0", "usedErrors": []}], "src": "34:53828:0"}, "compiler": {"version": "0.8.11+commit.d7f03943", "evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}}, "contractName": "FundMePunks", "deployedBytecode": "6080604052600436106101f95760003560e01c806355f804b31161010d578063a22cb465116100a0578063d5abeb011161006f578063d5abeb0114610572578063da3ef23f14610588578063e985e9c5146105a8578063f2c4ce1e146105f1578063f2fde38b1461061157600080fd5b8063a22cb465146104fd578063b88d4fde1461051d578063c66828621461053d578063c87b56dd1461055257600080fd5b80637f00c7a6116100dc5780637f00c7a6146104975780638da5cb5b146104b757806395d89b41146104d5578063a0712d68146104ea57600080fd5b806355f804b3146104225780636352211e1461044257806370a0823114610462578063715018a61461048257600080fd5b806323b872dd11610190578063438b63001161015f578063438b63001461037b57806344a0d68a146103a857806349a5980a146103c85780634f6ccce7146103e857806354214f691461040857600080fd5b806323b872dd146103135780632f745c59146103335780633ccfd60b1461035357806342842e0e1461035b57600080fd5b8063095ea7b3116101cc578063095ea7b3146102a257806313faede6146102c457806318160ddd146102e8578063239c70ae146102fd57600080fd5b806301ffc9a7146101fe57806306fdde0314610233578063081812fc14610255578063081c8c441461028d575b600080fd5b34801561020a57600080fd5b5061021e610219366004611cf0565b610631565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061024861065c565b60405161022a9190611d65565b34801561026157600080fd5b50610275610270366004611d78565b6106ee565b6040516001600160a01b03909116815260200161022a565b34801561029957600080fd5b50610248610788565b3480156102ae57600080fd5b506102c26102bd366004611dad565b610816565b005b3480156102d057600080fd5b506102da600d5481565b60405190815260200161022a565b3480156102f457600080fd5b506008546102da565b34801561030957600080fd5b506102da600f5481565b34801561031f57600080fd5b506102c261032e366004611dd7565b61092c565b34801561033f57600080fd5b506102da61034e366004611dad565b61095d565b6102c26109f3565b34801561036757600080fd5b506102c2610376366004611dd7565b610a75565b34801561038757600080fd5b5061039b610396366004611e13565b610a90565b60405161022a9190611e2e565b3480156103b457600080fd5b506102c26103c3366004611d78565b610b32565b3480156103d457600080fd5b506102c26103e3366004611e82565b610b61565b3480156103f457600080fd5b506102da610403366004611d78565b610b9e565b34801561041457600080fd5b5060105461021e9060ff1681565b34801561042e57600080fd5b506102c261043d366004611f29565b610c31565b34801561044e57600080fd5b5061027561045d366004611d78565b610c72565b34801561046e57600080fd5b506102da61047d366004611e13565b610ce9565b34801561048e57600080fd5b506102c2610d70565b3480156104a357600080fd5b506102c26104b2366004611d78565b610da6565b3480156104c357600080fd5b50600a546001600160a01b0316610275565b3480156104e157600080fd5b50610248610dd5565b6102c26104f8366004611d78565b610de4565b34801561050957600080fd5b506102c2610518366004611f72565b610ed8565b34801561052957600080fd5b506102c2610538366004611fa5565b610f9d565b34801561054957600080fd5b50610248610fd5565b34801561055e57600080fd5b5061024861056d366004611d78565b610fe2565b34801561057e57600080fd5b506102da600e5481565b34801561059457600080fd5b506102c26105a3366004611f29565b61115c565b3480156105b457600080fd5b5061021e6105c3366004612021565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105fd57600080fd5b506102c261060c366004611f29565b611199565b34801561061d57600080fd5b506102c261062c366004611e13565b6111d6565b60006001600160e01b0319821663780e9d6360e01b148061065657506106568261126e565b92915050565b60606000805461066b9061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546106979061204b565b80156106e45780601f106106b9576101008083540402835291602001916106e4565b820191906000526020600020905b8154815290600101906020018083116106c757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661076c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b601180546107959061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546107c19061204b565b801561080e5780601f106107e35761010080835404028352916020019161080e565b820191906000526020600020905b8154815290600101906020018083116107f157829003601f168201915b505050505081565b600061082182610c72565b9050806001600160a01b0316836001600160a01b0316141561088f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610763565b336001600160a01b03821614806108ab57506108ab81336105c3565b61091d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610763565b61092783836112be565b505050565b610936338261132c565b6109525760405162461bcd60e51b815260040161076390612086565b610927838383611423565b600061096883610ce9565b82106109ca5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610763565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b03163314610a1d5760405162461bcd60e51b8152600401610763906120d7565b604051600090339047908381818185875af1925050503d8060008114610a5f576040519150601f19603f3d011682016040523d82523d6000602084013e610a64565b606091505b5050905080610a7257600080fd5b50565b61092783838360405180602001604052806000815250610f9d565b60606000610a9d83610ce9565b905060008167ffffffffffffffff811115610aba57610aba611e9d565b604051908082528060200260200182016040528015610ae3578160200160208202803683370190505b50905060005b82811015610b2a57610afb858261095d565b828281518110610b0d57610b0d61210c565b602090810291909101015280610b2281612138565b915050610ae9565b509392505050565b600a546001600160a01b03163314610b5c5760405162461bcd60e51b8152600401610763906120d7565b600d55565b600a546001600160a01b03163314610b8b5760405162461bcd60e51b8152600401610763906120d7565b6010805460ff1916911515919091179055565b6000610ba960085490565b8210610c0c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610763565b60088281548110610c1f57610c1f61210c565b90600052602060002001549050919050565b600a546001600160a01b03163314610c5b5760405162461bcd60e51b8152600401610763906120d7565b8051610c6e90600b906020840190611c41565b5050565b6000818152600260205260408120546001600160a01b0316806106565760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610763565b60006001600160a01b038216610d545760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610763565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610d9a5760405162461bcd60e51b8152600401610763906120d7565b610da460006115ce565b565b600a546001600160a01b03163314610dd05760405162461bcd60e51b8152600401610763906120d7565b600f55565b60606001805461066b9061204b565b610ded33610ce9565b600514610e3c5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792035206d696e7420706572206163636f756e740000000000000000006044820152606401610763565b6000610e4760085490565b905060008211610e5657600080fd5b600f54821115610e6557600080fd5b600e54610e728383612153565b1115610e7d57600080fd5b600a546001600160a01b03163314610ea95781600d54610e9d919061216b565b341015610ea957600080fd5b60015b82811161092757610ec633610ec18385612153565b611620565b80610ed081612138565b915050610eac565b6001600160a01b038216331415610f315760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610763565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fa7338361132c565b610fc35760405162461bcd60e51b815260040161076390612086565b610fcf8484848461163a565b50505050565b600c80546107959061204b565b6000818152600260205260409020546060906001600160a01b03166110615760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610763565b60105460ff166110fd57601180546110789061204b565b80601f01602080910402602001604051908101604052809291908181526020018280546110a49061204b565b80156110f15780601f106110c6576101008083540402835291602001916110f1565b820191906000526020600020905b8154815290600101906020018083116110d457829003601f168201915b50505050509050919050565b600061110761166d565b905060008151116111275760405180602001604052806000815250611155565b806111318461167c565b600c6040516020016111459392919061218a565b6040516020818303038152906040525b9392505050565b600a546001600160a01b031633146111865760405162461bcd60e51b8152600401610763906120d7565b8051610c6e90600c906020840190611c41565b600a546001600160a01b031633146111c35760405162461bcd60e51b8152600401610763906120d7565b8051610c6e906011906020840190611c41565b600a546001600160a01b031633146112005760405162461bcd60e51b8152600401610763906120d7565b6001600160a01b0381166112655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610763565b610a72816115ce565b60006001600160e01b031982166380ac58cd60e01b148061129f57506001600160e01b03198216635b5e139f60e01b145b8061065657506301ffc9a760e01b6001600160e01b0319831614610656565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112f382610c72565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166113a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610763565b60006113b083610c72565b9050806001600160a01b0316846001600160a01b031614806113eb5750836001600160a01b03166113e0846106ee565b6001600160a01b0316145b8061141b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661143682610c72565b6001600160a01b03161461149e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610763565b6001600160a01b0382166115005760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610763565b61150b83838361177a565b6115166000826112be565b6001600160a01b038316600090815260036020526040812080546001929061153f90849061224e565b90915550506001600160a01b038216600090815260036020526040812080546001929061156d908490612153565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c6e828260405180602001604052806000815250611832565b611645848484611423565b61165184848484611865565b610fcf5760405162461bcd60e51b815260040161076390612265565b6060600b805461066b9061204b565b6060816116a05750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116ca57806116b481612138565b91506116c39050600a836122cd565b91506116a4565b60008167ffffffffffffffff8111156116e5576116e5611e9d565b6040519080825280601f01601f19166020018201604052801561170f576020820181803683370190505b5090505b841561141b5761172460018361224e565b9150611731600a866122e1565b61173c906030612153565b60f81b8183815181106117515761175161210c565b60200101906001600160f81b031916908160001a905350611773600a866122cd565b9450611713565b6001600160a01b0383166117d5576117d081600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6117f8565b816001600160a01b0316836001600160a01b0316146117f8576117f88382611963565b6001600160a01b03821661180f5761092781611a00565b826001600160a01b0316826001600160a01b031614610927576109278282611aaf565b61183c8383611af3565b6118496000848484611865565b6109275760405162461bcd60e51b815260040161076390612265565b60006001600160a01b0384163b1561195857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118a99033908990889088906004016122f5565b6020604051808303816000875af19250505080156118e4575060408051601f3d908101601f191682019092526118e191810190612332565b60015b61193e573d808015611912576040519150601f19603f3d011682016040523d82523d6000602084013e611917565b606091505b5080516119365760405162461bcd60e51b815260040161076390612265565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061141b565b506001949350505050565b6000600161197084610ce9565b61197a919061224e565b6000838152600760205260409020549091508082146119cd576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a129060019061224e565b60008381526009602052604081205460088054939450909284908110611a3a57611a3a61210c565b906000526020600020015490508060088381548110611a5b57611a5b61210c565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a9357611a9361234f565b6001900381819060005260206000200160009055905550505050565b6000611aba83610ce9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b038216611b495760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610763565b6000818152600260205260409020546001600160a01b031615611bae5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610763565b611bba6000838361177a565b6001600160a01b0382166000908152600360205260408120805460019290611be3908490612153565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611c4d9061204b565b90600052602060002090601f016020900481019282611c6f5760008555611cb5565b82601f10611c8857805160ff1916838001178555611cb5565b82800160010185558215611cb5579182015b82811115611cb5578251825591602001919060010190611c9a565b50611cc1929150611cc5565b5090565b5b80821115611cc15760008155600101611cc6565b6001600160e01b031981168114610a7257600080fd5b600060208284031215611d0257600080fd5b813561115581611cda565b60005b83811015611d28578181015183820152602001611d10565b83811115610fcf5750506000910152565b60008151808452611d51816020860160208601611d0d565b601f01601f19169290920160200192915050565b6020815260006111556020830184611d39565b600060208284031215611d8a57600080fd5b5035919050565b80356001600160a01b0381168114611da857600080fd5b919050565b60008060408385031215611dc057600080fd5b611dc983611d91565b946020939093013593505050565b600080600060608486031215611dec57600080fd5b611df584611d91565b9250611e0360208501611d91565b9150604084013590509250925092565b600060208284031215611e2557600080fd5b61115582611d91565b6020808252825182820181905260009190848201906040850190845b81811015611e6657835183529284019291840191600101611e4a565b50909695505050505050565b80358015158114611da857600080fd5b600060208284031215611e9457600080fd5b61115582611e72565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ece57611ece611e9d565b604051601f8501601f19908116603f01168101908282118183101715611ef657611ef6611e9d565b81604052809350858152868686011115611f0f57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611f3b57600080fd5b813567ffffffffffffffff811115611f5257600080fd5b8201601f81018413611f6357600080fd5b61141b84823560208401611eb3565b60008060408385031215611f8557600080fd5b611f8e83611d91565b9150611f9c60208401611e72565b90509250929050565b60008060008060808587031215611fbb57600080fd5b611fc485611d91565b9350611fd260208601611d91565b925060408501359150606085013567ffffffffffffffff811115611ff557600080fd5b8501601f8101871361200657600080fd5b61201587823560208401611eb3565b91505092959194509250565b6000806040838503121561203457600080fd5b61203d83611d91565b9150611f9c60208401611d91565b600181811c9082168061205f57607f821691505b6020821081141561208057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561214c5761214c612122565b5060010190565b6000821982111561216657612166612122565b500190565b600081600019048311821515161561218557612185612122565b500290565b60008451602061219d8285838a01611d0d565b8551918401916121b08184848a01611d0d565b8554920191600090600181811c90808316806121cd57607f831692505b8583108114156121eb57634e487b7160e01b85526022600452602485fd5b8080156121ff57600181146122105761223d565b60ff1985168852838801955061223d565b60008b81526020902060005b858110156122355781548a82015290840190880161221c565b505083880195505b50939b9a5050505050505050505050565b60008282101561226057612260612122565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826122dc576122dc6122b7565b500490565b6000826122f0576122f06122b7565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061232890830184611d39565b9695505050505050565b60006020828403121561234457600080fd5b815161115581611cda565b634e487b7160e01b600052603160045260246000fdfea264697066735822122033dd6cdf74913202e604a399b0dc1de33bda62b63114cb1a75f1c332879a42d364736f6c634300080b0033", "deployedSourceMap": "50408:3454:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41853:290;;;;;;;;;;-1:-1:-1;41853:290:0;;;;;:::i;:::-;;:::i;:::-;;;565:14:1;;558:22;540:41;;528:2;513:18;41853:290:0;;;;;;;;29439:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;31072:295::-;;;;;;;;;;-1:-1:-1;31072:295:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:1;;;1674:51;;1662:2;1647:18;31072:295:0;1528:203:1;50687:28:0;;;;;;;;;;;;;:::i;30610:401::-;;;;;;;;;;-1:-1:-1;30610:401:0;;;;;:::i;:::-;;:::i;:::-;;50559:19;;;;;;;;;;;;;;;;;;;2319:25:1;;;2307:2;2292:18;50559:19:0;2173:177:1;42624:111:0;;;;;;;;;;-1:-1:-1;42711:10:0;:17;42624:111;;50614:32;;;;;;;;;;;;;;;;32086:364;;;;;;;;;;-1:-1:-1;32086:364:0;;;;;:::i;:::-;;:::i;42222:331::-;;;;;;;;;;-1:-1:-1;42222:331:0;;;;;:::i;:::-;;:::i;53673:187::-;;;:::i;32516:179::-;;;;;;;;;;-1:-1:-1;32516:179:0;;;;;:::i;:::-;;:::i;51852:379::-;;;;;;;;;;-1:-1:-1;51852:379:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;53067:84::-;;;;;;;;;;-1:-1:-1;53067:84:0;;;;;:::i;:::-;;:::i;52972:89::-;;;;;;;;;;-1:-1:-1;52972:89:0;;;;;:::i;:::-;;:::i;42807:308::-;;;;;;;;;;-1:-1:-1;42807:308:0;;;;;:::i;:::-;;:::i;50652:29::-;;;;;;;;;;-1:-1:-1;50652:29:0;;;;;;;;53413:102;;;;;;;;;;-1:-1:-1;53413:102:0;;;;;:::i;:::-;;:::i;29064:313::-;;;;;;;;;;-1:-1:-1;29064:313:0;;;;;:::i;:::-;;:::i;28724:283::-;;;;;;;;;;-1:-1:-1;28724:283:0;;;;;:::i;:::-;;:::i;49716:92::-;;;;;;;;;;;;;:::i;53157:120::-;;;;;;;;;;-1:-1:-1;53157:120:0;;;;;:::i;:::-;;:::i;49084:85::-;;;;;;;;;;-1:-1:-1;49156:6:0;;-1:-1:-1;;;;;49156:6:0;49084:85;;29601:102;;;;;;;;;;;;;:::i;51256:590::-;;;;;;:::i;:::-;;:::i;31434:318::-;;;;;;;;;;-1:-1:-1;31434:318:0;;;;;:::i;:::-;;:::i;32761:354::-;;;;;;;;;;-1:-1:-1;32761:354:0;;;;;:::i;:::-;;:::i;50516:37::-;;;;;;;;;;;;;:::i;52237:700::-;;;;;;;;;;-1:-1:-1;52237:700:0;;;;;:::i;:::-;;:::i;50584:24::-;;;;;;;;;;;;;;;;53521:146;;;;;;;;;;-1:-1:-1;53521:146:0;;;;;:::i;:::-;;:::i;31818:206::-;;;;;;;;;;-1:-1:-1;31818:206:0;;;;;:::i;:::-;-1:-1:-1;;;;;31982:25:0;;;31955:4;31982:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;31818:206;53283:124;;;;;;;;;;-1:-1:-1;53283:124:0;;;;;:::i;:::-;;:::i;49957:223::-;;;;;;;;;;-1:-1:-1;49957:223:0;;;;;:::i;:::-;;:::i;41853:290::-;41995:4;-1:-1:-1;;;;;;42034:50:0;;-1:-1:-1;;;42034:50:0;;:102;;;42100:36;42124:11;42100:23;:36::i;:::-;42015:121;41853:290;-1:-1:-1;;41853:290:0:o;29439:98::-;29493:13;29525:5;29518:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29439:98;:::o;31072:295::-;31188:7;34709:16;;;:7;:16;;;;;;-1:-1:-1;;;;;34709:16:0;31211:107;;;;-1:-1:-1;;;31211:107:0;;6874:2:1;31211:107:0;;;6856:21:1;6913:2;6893:18;;;6886:30;6952:34;6932:18;;;6925:62;-1:-1:-1;;;7003:18:1;;;6996:42;7055:19;;31211:107:0;;;;;;;;;-1:-1:-1;31336:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;31336:24:0;;31072:295::o;50687:28::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30610:401::-;30690:13;30706:23;30721:7;30706:14;:23::i;:::-;30690:39;;30753:5;-1:-1:-1;;;;;30747:11:0;:2;-1:-1:-1;;;;;30747:11:0;;;30739:57;;;;-1:-1:-1;;;30739:57:0;;7287:2:1;30739:57:0;;;7269:21:1;7326:2;7306:18;;;7299:30;7365:34;7345:18;;;7338:62;-1:-1:-1;;;7416:18:1;;;7409:31;7457:19;;30739:57:0;7085:397:1;30739:57:0;26924:10;-1:-1:-1;;;;;30828:21:0;;;;:62;;-1:-1:-1;30853:37:0;30870:5;26924:10;31818:206;:::i;30853:37::-;30807:165;;;;-1:-1:-1;;;30807:165:0;;7689:2:1;30807:165:0;;;7671:21:1;7728:2;7708:18;;;7701:30;7767:34;7747:18;;;7740:62;7838:26;7818:18;;;7811:54;7882:19;;30807:165:0;7487:420:1;30807:165:0;30983:21;30992:2;30996:7;30983:8;:21::i;:::-;30680:331;30610:401;;:::o;32086:364::-;32288:41;26924:10;32321:7;32288:18;:41::i;:::-;32267:137;;;;-1:-1:-1;;;32267:137:0;;;;;;;:::i;:::-;32415:28;32425:4;32431:2;32435:7;32415:9;:28::i;42222:331::-;42359:7;42411:23;42428:5;42411:16;:23::i;:::-;42403:5;:31;42382:121;;;;-1:-1:-1;;;42382:121:0;;8532:2:1;42382:121:0;;;8514:21:1;8571:2;8551:18;;;8544:30;8610:34;8590:18;;;8583:62;-1:-1:-1;;;8661:18:1;;;8654:41;8712:19;;42382:121:0;8330:407:1;42382:121:0;-1:-1:-1;;;;;;42520:19:0;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;42222:331::o;53673:187::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53747:80:::1;::::0;53729:12:::1;::::0;53755:10:::1;::::0;53792:21:::1;::::0;53729:12;53747:80;53729:12;53747:80;53792:21;53755:10;53747:80:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53728:99;;;53845:7;53837:16;;;::::0;::::1;;53718:142;53673:187::o:0;32516:179::-;32649:39;32666:4;32672:2;32676:7;32649:39;;;;;;;;;;;;:16;:39::i;51852:379::-;51936:16;51968:23;51994:17;52004:6;51994:9;:17::i;:::-;51968:43;;52021:25;52063:15;52049:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;52049:30:0;;52021:58;;52094:9;52089:111;52109:15;52105:1;:19;52089:111;;;52159:30;52179:6;52187:1;52159:19;:30::i;:::-;52145:8;52154:1;52145:11;;;;;;;;:::i;:::-;;;;;;;;;;:44;52126:3;;;;:::i;:::-;;;;52089:111;;;-1:-1:-1;52216:8:0;51852:379;-1:-1:-1;;;51852:379:0:o;53067:84::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53129:4:::1;:15:::0;53067:84::o;52972:89::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53035:10:::1;:19:::0;;-1:-1:-1;;53035:19:0::1;::::0;::::1;;::::0;;;::::1;::::0;;52972:89::o;42807:308::-;42922:7;42974:30;42711:10;:17;;42624:111;42974:30;42966:5;:38;42945:129;;;;-1:-1:-1;;;42945:129:0;;9919:2:1;42945:129:0;;;9901:21:1;9958:2;9938:18;;;9931:30;9997:34;9977:18;;;9970:62;-1:-1:-1;;;10048:18:1;;;10041:42;10100:19;;42945:129:0;9717:408:1;42945:129:0;43091:10;43102:5;43091:17;;;;;;;;:::i;:::-;;;;;;;;;43084:24;;42807:308;;;:::o;53413:102::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53487:21;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;53413:102:::0;:::o;29064:313::-;29176:7;29215:16;;;:7;:16;;;;;;-1:-1:-1;;;;;29215:16:0;29262:19;29241:107;;;;-1:-1:-1;;;29241:107:0;;10332:2:1;29241:107:0;;;10314:21:1;10371:2;10351:18;;;10344:30;10410:34;10390:18;;;10383:62;-1:-1:-1;;;10461:18:1;;;10454:39;10510:19;;29241:107:0;10130:405:1;28724:283:0;28836:7;-1:-1:-1;;;;;28880:19:0;;28859:108;;;;-1:-1:-1;;;28859:108:0;;10742:2:1;28859:108:0;;;10724:21:1;10781:2;10761:18;;;10754:30;10820:34;10800:18;;;10793:62;-1:-1:-1;;;10871:18:1;;;10864:40;10921:19;;28859:108:0;10540:406:1;28859:108:0;-1:-1:-1;;;;;;28984:16:0;;;;;:9;:16;;;;;;;28724:283::o;49716:92::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;49780:21:::1;49798:1;49780:9;:21::i;:::-;49716:92::o:0;53157:120::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53237:13:::1;:33:::0;53157:120::o;29601:102::-;29657:13;29689:7;29682:14;;;;;:::i;51256:590::-;51333:21;51343:10;51333:9;:21::i;:::-;51358:1;51333:26;51325:62;;;;-1:-1:-1;;;51325:62:0;;11153:2:1;51325:62:0;;;11135:21:1;11192:2;11172:18;;;11165:30;11231:25;11211:18;;;11204:53;11274:18;;51325:62:0;10951:347:1;51325:62:0;51463:14;51480:13;42711:10;:17;;42624:111;51480:13;51463:30;;51525:1;51511:11;:15;51503:24;;;;;;51560:13;;51545:11;:28;;51537:37;;;;;;51616:9;;51592:20;51601:11;51592:6;:20;:::i;:::-;:33;;51584:42;;;;;;49156:6;;-1:-1:-1;;;;;49156:6:0;51641:10;:21;51637:92;;51706:11;51699:4;;:18;;;;:::i;:::-;51686:9;:31;;51678:40;;;;;;51756:1;51739:101;51764:11;51759:1;:16;51739:101;;51796:33;51806:10;51818;51827:1;51818:6;:10;:::i;:::-;51796:9;:33::i;:::-;51777:3;;;;:::i;:::-;;;;51739:101;;31434:318;-1:-1:-1;;;;;31564:24:0;;26924:10;31564:24;;31556:62;;;;-1:-1:-1;;;31556:62:0;;11811:2:1;31556:62:0;;;11793:21:1;11850:2;11830:18;;;11823:30;11889:27;11869:18;;;11862:55;11934:18;;31556:62:0;11609:349:1;31556:62:0;26924:10;31629:32;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;31629:42:0;;;;;;;;;;;;:53;;-1:-1:-1;;31629:53:0;;;;;;;;;;31697:48;;540:41:1;;;31629:42:0;;26924:10;31697:48;;513:18:1;31697:48:0;;;;;;;31434:318;;:::o;32761:354::-;32943:41;26924:10;32976:7;32943:18;:41::i;:::-;32922:137;;;;-1:-1:-1;;;32922:137:0;;;;;;;:::i;:::-;33069:39;33083:4;33089:2;33093:7;33102:5;33069:13;:39::i;:::-;32761:354;;;;:::o;50516:37::-;;;;;;;:::i;52237:700::-;34686:4;34709:16;;;:7;:16;;;;;;52350:13;;-1:-1:-1;;;;;34709:16:0;52379:110;;;;-1:-1:-1;;;52379:110:0;;12165:2:1;52379:110:0;;;12147:21:1;12204:2;12184:18;;;12177:30;12243:34;12223:18;;;12216:62;-1:-1:-1;;;12294:18:1;;;12287:45;12349:19;;52379:110:0;11963:411:1;52379:110:0;52504:10;;;;52500:71;;52546:14;52539:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52237:700;;;:::o;52500:71::-;52581:28;52612:10;:8;:10::i;:::-;52581:41;;52682:1;52657:14;52651:28;:32;:279;;;;;;;;;;;;;;;;;52772:14;52812:18;:7;:16;:18::i;:::-;52856:13;52730:161;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;52651:279;52632:298;52237:700;-1:-1:-1;;;52237:700:0:o;53521:146::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53627:33;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;53283:124::-:0;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;53368:32;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;::::1;:::i;49957:223::-:0;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;50058:22:0;::::1;50037:107;;;::::0;-1:-1:-1;;;50037:107:0;;14239:2:1;50037:107:0::1;::::0;::::1;14221:21:1::0;14278:2;14258:18;;;14251:30;14317:34;14297:18;;;14290:62;-1:-1:-1;;;14368:18:1;;;14361:36;14414:19;;50037:107:0::1;14037:402:1::0;50037:107:0::1;50154:19;50164:8;50154:9;:19::i;28321:344::-:0;28463:4;-1:-1:-1;;;;;;28502:40:0;;-1:-1:-1;;;28502:40:0;;:104;;-1:-1:-1;;;;;;;28558:48:0;;-1:-1:-1;;;28558:48:0;28502:104;:156;;;-1:-1:-1;;;;;;;;;;14223:40:0;;;28622:36;14071:199;38600:171;38674:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;38674:29:0;-1:-1:-1;;;;;38674:29:0;;;;;;;;:24;;38727:23;38674:24;38727:14;:23::i;:::-;-1:-1:-1;;;;;38718:46:0;;;;;;;;;;;38600:171;;:::o;34904:438::-;35029:4;34709:16;;;:7;:16;;;;;;-1:-1:-1;;;;;34709:16:0;35049:107;;;;-1:-1:-1;;;35049:107:0;;14646:2:1;35049:107:0;;;14628:21:1;14685:2;14665:18;;;14658:30;14724:34;14704:18;;;14697:62;-1:-1:-1;;;14775:18:1;;;14768:42;14827:19;;35049:107:0;14444:408:1;35049:107:0;35166:13;35182:23;35197:7;35182:14;:23::i;:::-;35166:39;;35234:5;-1:-1:-1;;;;;35223:16:0;:7;-1:-1:-1;;;;;35223:16:0;;:63;;;;35279:7;-1:-1:-1;;;;;35255:31:0;:20;35267:7;35255:11;:20::i;:::-;-1:-1:-1;;;;;35255:31:0;;35223:63;:111;;;-1:-1:-1;;;;;;31982:25:0;;;31955:4;31982:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;35302:32;35215:120;34904:438;-1:-1:-1;;;;34904:438:0:o;37895:594::-;38062:4;-1:-1:-1;;;;;38035:31:0;:23;38050:7;38035:14;:23::i;:::-;-1:-1:-1;;;;;38035:31:0;;38014:119;;;;-1:-1:-1;;;38014:119:0;;15059:2:1;38014:119:0;;;15041:21:1;15098:2;15078:18;;;15071:30;15137:34;15117:18;;;15110:62;-1:-1:-1;;;15188:18:1;;;15181:39;15237:19;;38014:119:0;14857:405:1;38014:119:0;-1:-1:-1;;;;;38151:16:0;;38143:65;;;;-1:-1:-1;;;38143:65:0;;15469:2:1;38143:65:0;;;15451:21:1;15508:2;15488:18;;;15481:30;15547:34;15527:18;;;15520:62;-1:-1:-1;;;15598:18:1;;;15591:34;15642:19;;38143:65:0;15267:400:1;38143:65:0;38219:39;38240:4;38246:2;38250:7;38219:20;:39::i;:::-;38320:29;38337:1;38341:7;38320:8;:29::i;:::-;-1:-1:-1;;;;;38360:15:0;;;;;;:9;:15;;;;;:20;;38379:1;;38360:15;:20;;38379:1;;38360:20;:::i;:::-;;;;-1:-1:-1;;;;;;;38390:13:0;;;;;;:9;:13;;;;;:18;;38407:1;;38390:13;:18;;38407:1;;38390:18;:::i;:::-;;;;-1:-1:-1;;38418:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;38418:21:0;-1:-1:-1;;;;;38418:21:0;;;;;;;;;38455:27;;38418:16;;38455:27;;;;;;;37895:594;;;:::o;50186:169::-;50260:6;;;-1:-1:-1;;;;;50276:17:0;;;-1:-1:-1;;;;;;50276:17:0;;;;;;;50308:40;;50260:6;;;50276:17;50260:6;;50308:40;;50241:16;;50308:40;50231:124;50186:169;:::o;35672:108::-;35747:26;35757:2;35761:7;35747:26;;;;;;;;;;;;:9;:26::i;33977:341::-;34128:28;34138:4;34144:2;34148:7;34128:9;:28::i;:::-;34187:48;34210:4;34216:2;34220:7;34229:5;34187:22;:48::i;:::-;34166:145;;;;-1:-1:-1;;;34166:145:0;;;;;;;:::i;51130:106::-;51190:13;51222:7;51215:14;;;;;:::i;14568:703::-;14624:13;14841:10;14837:51;;-1:-1:-1;;14867:10:0;;;;;;;;;;;;-1:-1:-1;;;14867:10:0;;;;;14568:703::o;14837:51::-;14912:5;14897:12;14951:75;14958:9;;14951:75;;14983:8;;;;:::i;:::-;;-1:-1:-1;15005:10:0;;-1:-1:-1;15013:2:0;15005:10;;:::i;:::-;;;14951:75;;;15035:19;15067:6;15057:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15057:17:0;;15035:39;;15084:150;15091:10;;15084:150;;15117:11;15127:1;15117:11;;:::i;:::-;;-1:-1:-1;15185:10:0;15193:2;15185:5;:10;:::i;:::-;15172:24;;:2;:24;:::i;:::-;15159:39;;15142:6;15149;15142:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;15142:56:0;;;;;;;;-1:-1:-1;15212:11:0;15221:2;15212:11;;:::i;:::-;;;15084:150;;43711:572;-1:-1:-1;;;;;43910:18:0;;43906:183;;43944:40;43976:7;45092:10;:17;;45065:24;;;;:15;:24;;;;;:44;;;45119:24;;;;;;;;;;;;44989:161;43944:40;43906:183;;;44013:2;-1:-1:-1;;;;;44005:10:0;:4;-1:-1:-1;;;;;44005:10:0;;44001:88;;44031:47;44064:4;44070:7;44031:32;:47::i;:::-;-1:-1:-1;;;;;44102:16:0;;44098:179;;44134:45;44171:7;44134:36;:45::i;44098:179::-;44206:4;-1:-1:-1;;;;;44200:10:0;:2;-1:-1:-1;;;;;44200:10:0;;44196:81;;44226:40;44254:2;44258:7;44226:27;:40::i;36001:311::-;36126:18;36132:2;36136:7;36126:5;:18::i;:::-;36175:54;36206:1;36210:2;36214:7;36223:5;36175:22;:54::i;:::-;36154:151;;;;-1:-1:-1;;;36154:151:0;;;;;;;:::i;39324:950::-;39474:4;-1:-1:-1;;;;;39494:13:0;;17354:20;17400:8;39490:778;;39545:170;;-1:-1:-1;;;39545:170:0;;-1:-1:-1;;;;;39545:36:0;;;;;:170;;26924:10;;39637:4;;39663:7;;39692:5;;39545:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39545:170:0;;;;;;;;-1:-1:-1;;39545:170:0;;;;;;;;;;;;:::i;:::-;;;39525:691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39894:13:0;;39890:312;;39936:106;;-1:-1:-1;;;39936:106:0;;;;;;;:::i;39890:312::-;40154:6;40148:13;40139:6;40135:2;40131:15;40124:38;39525:691;-1:-1:-1;;;;;;39777:51:0;-1:-1:-1;;;39777:51:0;;-1:-1:-1;39770:58:0;;39490:778;-1:-1:-1;40253:4:0;39324:950;;;;;;:::o;45767:982::-;46041:22;46091:1;46066:22;46083:4;46066:16;:22::i;:::-;:26;;;;:::i;:::-;46102:18;46123:26;;;:17;:26;;;;;;46041:51;;-1:-1:-1;46253:28:0;;;46249:323;;-1:-1:-1;;;;;46319:18:0;;46297:19;46319:18;;;:12;:18;;;;;;;;:34;;;;;;;;;46368:30;;;;;;:44;;;46484:30;;:17;:30;;;;;:43;;;46249:323;-1:-1:-1;46665:26:0;;;;:17;:26;;;;;;;;46658:33;;;-1:-1:-1;;;;;46708:18:0;;;;;:12;:18;;;;;:34;;;;;;;46701:41;45767:982::o;47037:1061::-;47311:10;:17;47286:22;;47311:21;;47331:1;;47311:21;:::i;:::-;47342:18;47363:24;;;:15;:24;;;;;;47731:10;:26;;47286:46;;-1:-1:-1;47363:24:0;;47286:46;;47731:26;;;;;;:::i;:::-;;;;;;;;;47709:48;;47793:11;47768:10;47779;47768:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;47872:28;;;:15;:28;;;;;;;:41;;;48041:24;;;;;48034:31;48075:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;47108:990;;;47037:1061;:::o;44577:217::-;44661:14;44678:20;44695:2;44678:16;:20::i;:::-;-1:-1:-1;;;;;44708:16:0;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;44752:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;44577:217:0:o;36634:372::-;-1:-1:-1;;;;;36713:16:0;;36705:61;;;;-1:-1:-1;;;36705:61:0;;17677:2:1;36705:61:0;;;17659:21:1;;;17696:18;;;17689:30;17755:34;17735:18;;;17728:62;17807:18;;36705:61:0;17475:356:1;36705:61:0;34686:4;34709:16;;;:7;:16;;;;;;-1:-1:-1;;;;;34709:16:0;:30;36776:58;;;;-1:-1:-1;;;36776:58:0;;18038:2:1;36776:58:0;;;18020:21:1;18077:2;18057:18;;;18050:30;18116;18096:18;;;18089:58;18164:18;;36776:58:0;17836:352:1;36776:58:0;36845:45;36874:1;36878:2;36882:7;36845:20;:45::i;:::-;-1:-1:-1;;;;;36901:13:0;;;;;;:9;:13;;;;;:18;;36918:1;;36901:13;:18;;36918:1;;36901:18;:::i;:::-;;;;-1:-1:-1;;36929:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;36929:21:0;-1:-1:-1;;;;;36929:21:0;;;;;;;;36966:33;;36929:16;;;36966:33;;36929:16;;36966:33;36634:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:1;-1:-1:-1;;;;;;88:32:1;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:1;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:1;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:1:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:1;;1343:180;-1:-1:-1;1343:180:1:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:1;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:1:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:632::-;3050:2;3102:21;;;3172:13;;3075:18;;;3194:22;;;3021:4;;3050:2;3273:15;;;;3247:2;3232:18;;;3021:4;3316:169;3330:6;3327:1;3324:13;3316:169;;;3391:13;;3379:26;;3460:15;;;;3425:12;;;;3352:1;3345:9;3316:169;;;-1:-1:-1;3502:3:1;;2879:632;-1:-1:-1;;;;;;2879:632:1:o;3516:160::-;3581:20;;3637:13;;3630:21;3620:32;;3610:60;;3666:1;3663;3656:12;3681:180;3737:6;3790:2;3778:9;3769:7;3765:23;3761:32;3758:52;;;3806:1;3803;3796:12;3758:52;3829:26;3845:9;3829:26;:::i;3866:127::-;3927:10;3922:3;3918:20;3915:1;3908:31;3958:4;3955:1;3948:15;3982:4;3979:1;3972:15;3998:632;4063:5;4093:18;4134:2;4126:6;4123:14;4120:40;;;4140:18;;:::i;:::-;4215:2;4209:9;4183:2;4269:15;;-1:-1:-1;;4265:24:1;;;4291:2;4261:33;4257:42;4245:55;;;4315:18;;;4335:22;;;4312:46;4309:72;;;4361:18;;:::i;:::-;4401:10;4397:2;4390:22;4430:6;4421:15;;4460:6;4452;4445:22;4500:3;4491:6;4486:3;4482:16;4479:25;4476:45;;;4517:1;4514;4507:12;4476:45;4567:6;4562:3;4555:4;4547:6;4543:17;4530:44;4622:1;4615:4;4606:6;4598;4594:19;4590:30;4583:41;;;;3998:632;;;;;:::o;4635:451::-;4704:6;4757:2;4745:9;4736:7;4732:23;4728:32;4725:52;;;4773:1;4770;4763:12;4725:52;4813:9;4800:23;4846:18;4838:6;4835:30;4832:50;;;4878:1;4875;4868:12;4832:50;4901:22;;4954:4;4946:13;;4942:27;-1:-1:-1;4932:55:1;;4983:1;4980;4973:12;4932:55;5006:74;5072:7;5067:2;5054:16;5049:2;5045;5041:11;5006:74;:::i;5091:254::-;5156:6;5164;5217:2;5205:9;5196:7;5192:23;5188:32;5185:52;;;5233:1;5230;5223:12;5185:52;5256:29;5275:9;5256:29;:::i;:::-;5246:39;;5304:35;5335:2;5324:9;5320:18;5304:35;:::i;:::-;5294:45;;5091:254;;;;;:::o;5350:667::-;5445:6;5453;5461;5469;5522:3;5510:9;5501:7;5497:23;5493:33;5490:53;;;5539:1;5536;5529:12;5490:53;5562:29;5581:9;5562:29;:::i;:::-;5552:39;;5610:38;5644:2;5633:9;5629:18;5610:38;:::i;:::-;5600:48;;5695:2;5684:9;5680:18;5667:32;5657:42;;5750:2;5739:9;5735:18;5722:32;5777:18;5769:6;5766:30;5763:50;;;5809:1;5806;5799:12;5763:50;5832:22;;5885:4;5877:13;;5873:27;-1:-1:-1;5863:55:1;;5914:1;5911;5904:12;5863:55;5937:74;6003:7;5998:2;5985:16;5980:2;5976;5972:11;5937:74;:::i;:::-;5927:84;;;5350:667;;;;;;;:::o;6022:260::-;6090:6;6098;6151:2;6139:9;6130:7;6126:23;6122:32;6119:52;;;6167:1;6164;6157:12;6119:52;6190:29;6209:9;6190:29;:::i;:::-;6180:39;;6238:38;6272:2;6261:9;6257:18;6238:38;:::i;6287:380::-;6366:1;6362:12;;;;6409;;;6430:61;;6484:4;6476:6;6472:17;6462:27;;6430:61;6537:2;6529:6;6526:14;6506:18;6503:38;6500:161;;;6583:10;6578:3;6574:20;6571:1;6564:31;6618:4;6615:1;6608:15;6646:4;6643:1;6636:15;6500:161;;6287:380;;;:::o;7912:413::-;8114:2;8096:21;;;8153:2;8133:18;;;8126:30;8192:34;8187:2;8172:18;;8165:62;-1:-1:-1;;;8258:2:1;8243:18;;8236:47;8315:3;8300:19;;7912:413::o;8742:356::-;8944:2;8926:21;;;8963:18;;;8956:30;9022:34;9017:2;9002:18;;8995:62;9089:2;9074:18;;8742:356::o;9313:127::-;9374:10;9369:3;9365:20;9362:1;9355:31;9405:4;9402:1;9395:15;9429:4;9426:1;9419:15;9445:127;9506:10;9501:3;9497:20;9494:1;9487:31;9537:4;9534:1;9527:15;9561:4;9558:1;9551:15;9577:135;9616:3;-1:-1:-1;;9637:17:1;;9634:43;;;9657:18;;:::i;:::-;-1:-1:-1;9704:1:1;9693:13;;9577:135::o;11303:128::-;11343:3;11374:1;11370:6;11367:1;11364:13;11361:39;;;11380:18;;:::i;:::-;-1:-1:-1;11416:9:1;;11303:128::o;11436:168::-;11476:7;11542:1;11538;11534:6;11530:14;11527:1;11524:21;11519:1;11512:9;11505:17;11501:45;11498:71;;;11549:18;;:::i;:::-;-1:-1:-1;11589:9:1;;11436:168::o;12505:1527::-;12729:3;12767:6;12761:13;12793:4;12806:51;12850:6;12845:3;12840:2;12832:6;12828:15;12806:51;:::i;:::-;12920:13;;12879:16;;;;12942:55;12920:13;12879:16;12964:15;;;12942:55;:::i;:::-;13086:13;;13019:20;;;13059:1;;13146;13168:18;;;;13221;;;;13248:93;;13326:4;13316:8;13312:19;13300:31;;13248:93;13389:2;13379:8;13376:16;13356:18;13353:40;13350:167;;;-1:-1:-1;;;13416:33:1;;13472:4;13469:1;13462:15;13502:4;13423:3;13490:17;13350:167;13533:18;13560:110;;;;13684:1;13679:328;;;;13526:481;;13560:110;-1:-1:-1;;13595:24:1;;13581:39;;13640:20;;;;-1:-1:-1;13560:110:1;;13679:328;12452:1;12445:14;;;12489:4;12476:18;;13774:1;13788:169;13802:8;13799:1;13796:15;13788:169;;;13884:14;;13869:13;;;13862:37;13927:16;;;;13819:10;;13788:169;;;13792:3;;13988:8;13981:5;13977:20;13970:27;;13526:481;-1:-1:-1;14023:3:1;;12505:1527;-1:-1:-1;;;;;;;;;;;12505:1527:1:o;15672:125::-;15712:4;15740:1;15737;15734:8;15731:34;;;15745:18;;:::i;:::-;-1:-1:-1;15782:9:1;;15672:125::o;15802:414::-;16004:2;15986:21;;;16043:2;16023:18;;;16016:30;16082:34;16077:2;16062:18;;16055:62;-1:-1:-1;;;16148:2:1;16133:18;;16126:48;16206:3;16191:19;;15802:414::o;16221:127::-;16282:10;16277:3;16273:20;16270:1;16263:31;16313:4;16310:1;16303:15;16337:4;16334:1;16327:15;16353:120;16393:1;16419;16409:35;;16424:18;;:::i;:::-;-1:-1:-1;16458:9:1;;16353:120::o;16478:112::-;16510:1;16536;16526:35;;16541:18;;:::i;:::-;-1:-1:-1;16575:9:1;;16478:112::o;16595:489::-;-1:-1:-1;;;;;16864:15:1;;;16846:34;;16916:15;;16911:2;16896:18;;16889:43;16963:2;16948:18;;16941:34;;;17011:3;17006:2;16991:18;;16984:31;;;16789:4;;17032:46;;17058:19;;17050:6;17032:46;:::i;:::-;17024:54;16595:489;-1:-1:-1;;;;;;16595:489:1:o;17089:249::-;17158:6;17211:2;17199:9;17190:7;17186:23;17182:32;17179:52;;;17227:1;17224;17217:12;17179:52;17259:9;17253:16;17278:30;17302:5;17278:30;:::i;17343:127::-;17404:10;17399:3;17395:20;17392:1;17385:31;17435:4;17432:1;17425:15;17459:4;17456:1;17449:15", "language": "Solidity", "natspec": {"methods": {"approve(address,uint256)": {"details": "See {IERC721-approve}."}, "balanceOf(address)": {"details": "See {IERC721-balanceOf}."}, "getApproved(uint256)": {"details": "See {IERC721-getApproved}."}, "isApprovedForAll(address,address)": {"details": "See {IERC721-isApprovedForAll}."}, "name()": {"details": "See {IERC721Metadata-name}."}, "owner()": {"details": "Returns the address of the current owner."}, "ownerOf(uint256)": {"details": "See {IERC721-ownerOf}."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "safeTransferFrom(address,address,uint256)": {"details": "See {IERC721-safeTransferFrom}."}, "safeTransferFrom(address,address,uint256,bytes)": {"details": "See {IERC721-safeTransferFrom}."}, "setApprovalForAll(address,bool)": {"details": "See {IERC721-setApprovalForAll}."}, "supportsInterface(bytes4)": {"details": "See {IERC165-supportsInterface}."}, "symbol()": {"details": "See {IERC721Metadata-symbol}."}, "tokenByIndex(uint256)": {"details": "See {IERC721Enumerable-tokenByIndex}."}, "tokenOfOwnerByIndex(address,uint256)": {"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."}, "tokenURI(uint256)": {"details": "See {IERC721Metadata-tokenURI}."}, "totalSupply()": {"details": "See {IERC721Enumerable-totalSupply}."}, "transferFrom(address,address,uint256)": {"details": "See {IERC721-transferFrom}."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "kind": "dev", "version": 1}, "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55F804B3 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD5ABEB01 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x588 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xF2C4CE1E EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F00C7A6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x7F00C7A6 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x190 JUMPI DUP1 PUSH4 0x438B6300 GT PUSH2 0x15F JUMPI DUP1 PUSH4 0x438B6300 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x44A0D68A EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x49A5980A EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x54214F69 EQ PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1CC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x239C70AE EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x81C8C44 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x65C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x788 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x816 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD7 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAD JUMP JUMPDEST PUSH2 0x95D JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x9F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD7 JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E82 JUMP JUMPDEST PUSH2 0xB61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x21E SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xC72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0xCE9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0xD70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xDA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F72 JUMP JUMPDEST PUSH2 0xED8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xF9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0xFD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x248 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x5A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x115C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x5C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2021 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x60C CALLDATASIZE PUSH1 0x4 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1199 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x62C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E13 JUMP JUMPDEST PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x656 JUMPI POP PUSH2 0x656 DUP3 PUSH2 0x126E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x697 SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH2 0x795 SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C1 SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x80E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x821 DUP3 PUSH2 0xC72 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x8AB JUMPI POP PUSH2 0x8AB DUP2 CALLER PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x927 DUP4 DUP4 PUSH2 0x12BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x936 CALLER DUP3 PUSH2 0x132C JUMP JUMPDEST PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x927 DUP4 DUP4 DUP4 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x968 DUP4 PUSH2 0xCE9 JUMP JUMPDEST DUP3 LT PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 SELFBALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x927 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA9D DUP4 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xABA JUMPI PUSH2 0xABA PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAE3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xB2A JUMPI PUSH2 0xAFB DUP6 DUP3 PUSH2 0x95D JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB0D JUMPI PUSH2 0xB0D PUSH2 0x210C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xB22 DUP2 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0x210C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC6E SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C41 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0xDA4 PUSH1 0x0 PUSH2 0x15CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH2 0xDED CALLER PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x5 EQ PUSH2 0xE3C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792035206D696E7420706572206163636F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE47 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SLOAD DUP3 GT ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH2 0xE72 DUP4 DUP4 PUSH2 0x2153 JUMP JUMPDEST GT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA9 JUMPI DUP2 PUSH1 0xD SLOAD PUSH2 0xE9D SWAP2 SWAP1 PUSH2 0x216B JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x927 JUMPI PUSH2 0xEC6 CALLER PUSH2 0xEC1 DUP4 DUP6 PUSH2 0x2153 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST DUP1 PUSH2 0xED0 DUP2 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFA7 CALLER DUP4 PUSH2 0x132C JUMP JUMPDEST PUSH2 0xFC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xFCF DUP5 DUP5 DUP5 DUP5 PUSH2 0x163A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x795 SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND PUSH2 0x10FD JUMPI PUSH1 0x11 DUP1 SLOAD PUSH2 0x1078 SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10A4 SWAP1 PUSH2 0x204B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 PUSH2 0x166D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1155 JUMP JUMPDEST DUP1 PUSH2 0x1131 DUP5 PUSH2 0x167C JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1145 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x218A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1186 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC6E SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xC6E SWAP1 PUSH1 0x11 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C41 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x20D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1265 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0xA72 DUP2 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x129F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x656 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x656 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x12F3 DUP3 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B0 DUP4 PUSH2 0xC72 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13EB JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E0 DUP5 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x141B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1436 DUP3 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x150B DUP4 DUP4 DUP4 PUSH2 0x177A JUMP JUMPDEST PUSH2 0x1516 PUSH1 0x0 DUP3 PUSH2 0x12BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x153F SWAP1 DUP5 SWAP1 PUSH2 0x224E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x156D SWAP1 DUP5 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC6E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x1645 DUP5 DUP5 DUP5 PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x1651 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x66B SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x16A0 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x16CA JUMPI DUP1 PUSH2 0x16B4 DUP2 PUSH2 0x2138 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C3 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x22CD JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E5 JUMPI PUSH2 0x16E5 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x170F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x141B JUMPI PUSH2 0x1724 PUSH1 0x1 DUP4 PUSH2 0x224E JUMP JUMPDEST SWAP2 POP PUSH2 0x1731 PUSH1 0xA DUP7 PUSH2 0x22E1 JUMP JUMPDEST PUSH2 0x173C SWAP1 PUSH1 0x30 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1751 JUMPI PUSH2 0x1751 PUSH2 0x210C JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1773 PUSH1 0xA DUP7 PUSH2 0x22CD JUMP JUMPDEST SWAP5 POP PUSH2 0x1713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17D5 JUMPI PUSH2 0x17D0 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x17F8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17F8 JUMPI PUSH2 0x17F8 DUP4 DUP3 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x180F JUMPI PUSH2 0x927 DUP2 PUSH2 0x1A00 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x927 JUMPI PUSH2 0x927 DUP3 DUP3 PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x183C DUP4 DUP4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH2 0x1849 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1958 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x18A9 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x22F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18E4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x18E1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x193E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1912 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x2265 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x141B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1970 DUP5 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x197A SWAP2 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x19CD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1A12 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x224E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1A3A JUMPI PUSH2 0x1A3A PUSH2 0x210C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1A5B JUMPI PUSH2 0x1A5B PUSH2 0x210C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1A93 JUMPI PUSH2 0x1A93 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABA DUP4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x763 JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x0 DUP4 DUP4 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1BE3 SWAP1 DUP5 SWAP1 PUSH2 0x2153 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C4D SWAP1 PUSH2 0x204B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1C6F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1CB5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C88 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1CB5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1CB5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C9A JUMP JUMPDEST POP PUSH2 0x1CC1 SWAP3 SWAP2 POP PUSH2 0x1CC5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1155 DUP2 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D28 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D10 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFCF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1D51 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1155 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC9 DUP4 PUSH2 0x1D91 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF5 DUP5 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E03 PUSH1 0x20 DUP6 ADD PUSH2 0x1D91 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1155 DUP3 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E66 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1E4A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1155 DUP3 PUSH2 0x1E72 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1ECE JUMPI PUSH2 0x1ECE PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF6 PUSH2 0x1E9D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1F63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1EB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8E DUP4 PUSH2 0x1D91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9C PUSH1 0x20 DUP5 ADD PUSH2 0x1E72 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FC4 DUP6 PUSH2 0x1D91 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FD2 PUSH1 0x20 DUP7 ADD PUSH2 0x1D91 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2015 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2034 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x203D DUP4 PUSH2 0x1D91 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9C PUSH1 0x20 DUP5 ADD PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x205F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2080 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x214C JUMPI PUSH2 0x214C PUSH2 0x2122 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2166 JUMPI PUSH2 0x2166 PUSH2 0x2122 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2185 JUMPI PUSH2 0x2185 PUSH2 0x2122 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x219D DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x1D0D JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x21B0 DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x1D0D JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x21CD JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x21EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x21FF JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2210 JUMPI PUSH2 0x223D JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x223D JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2235 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x221C JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x2260 PUSH2 0x2122 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22DC JUMPI PUSH2 0x22DC PUSH2 0x22B7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22F0 JUMPI PUSH2 0x22F0 PUSH2 0x22B7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2328 SWAP1 DUP4 ADD DUP5 PUSH2 0x1D39 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1155 DUP2 PUSH2 0x1CDA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER 0xDD PUSH13 0xDF74913202E604A399B0DC1DE3 EXTCODESIZE 0xDA PUSH3 0xB63114 0xCB BYTE PUSH22 0xF1C332879A42D364736F6C634300080B003300000000 ", "sha1": "4e9468328ae04a383fcc1636b74bf551fa21139f", "source": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(\n        address indexed owner,\n        address indexed approved,\n        uint256 indexed tokenId\n    );\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId)\n        external\n        view\n        returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\npragma solidity ^0.8.0;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        external\n        view\n        returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length)\n        internal\n        pure\n        returns (string memory)\n    {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(\n            address(this).balance >= amount,\n            \"Address: insufficient balance\"\n        );\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(\n            success,\n            \"Address: unable to send value, recipient may have reverted\"\n        );\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                \"Address: low-level call with value failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(\n            address(this).balance >= value,\n            \"Address: insufficient balance for call\"\n        );\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(\n            data\n        );\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data)\n        internal\n        view\n        returns (bytes memory)\n    {\n        return\n            functionStaticCall(\n                target,\n                data,\n                \"Address: low-level static call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data)\n        internal\n        returns (bytes memory)\n    {\n        return\n            functionDelegateCall(\n                target,\n                data,\n                \"Address: low-level delegate call failed\"\n            );\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = _owners[tokenId];\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        string memory baseURI = _baseURI();\n        return\n            bytes(baseURI).length > 0\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\n                : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(\n            ERC721.ownerOf(tokenId) == from,\n            \"ERC721: transfer of token that is not own\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(IERC165, ERC721)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721Enumerable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            index < ERC721.balanceOf(owner),\n            \"ERC721Enumerable: owner index out of bounds\"\n        );\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            index < ERC721Enumerable.totalSupply(),\n            \"ERC721Enumerable: global index out of bounds\"\n        );\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId)\n        private\n    {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// NFT Contract\npragma solidity >=0.7.0 <0.9.0;\n\ncontract FundMePunks is ERC721Enumerable, Ownable {\n    using Strings for uint256;\n\n    string baseURI;\n    string public baseExtension = \".json\";\n    uint256 public cost;\n    uint256 public maxSupply;\n    uint256 public maxMintAmount = 5;\n    bool public isRevealed = true;\n    string public notRevealedUri;\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _cost,\n        uint256 _maxSupply,\n        string memory _initBaseURI,\n        string memory _initNotRevealedUri\n    ) ERC721(_name, _symbol) {{}\n        \n        cost = _cost;\n        maxSupply = _maxSupply;\n\n        setBaseURI(_initBaseURI);\n        setNotRevealedURI(_initNotRevealedUri);\n    }\n\n    // internal\n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseURI;\n    }\n\n    // public\n    function mint(uint256 _mintAmount) public payable {\n        \n        require(balanceOf(msg.sender) == 5, \"Only 5 mint per account\");\n        // require(cost >= 25 * 10**10);//convert to 18 decimals\n\n        uint256 supply = totalSupply();\n        require(_mintAmount > 0);\n        require(_mintAmount <= maxMintAmount);\n        require(supply + _mintAmount <= maxSupply);\n\n        if (msg.sender != owner()) {\n            require(msg.value >= cost * _mintAmount);\n        }\n\n        for (uint256 i = 1; i <= _mintAmount; i++) {\n            _safeMint(msg.sender, supply + i);\n        }\n    }\n\n    function walletOfOwner(address _owner)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        uint256 ownerTokenCount = balanceOf(_owner);\n        uint256[] memory tokenIds = new uint256[](ownerTokenCount);\n        for (uint256 i; i < ownerTokenCount; i++) {\n            tokenIds[i] = tokenOfOwnerByIndex(_owner, i);\n        }\n        return tokenIds;\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n\n        if (isRevealed == false) {\n            return notRevealedUri;\n        }\n\n        string memory currentBaseURI = _baseURI();\n        return\n            bytes(currentBaseURI).length > 0\n                ? string(\n                    abi.encodePacked(\n                        currentBaseURI,\n                        tokenId.toString(),\n                        baseExtension\n                    )\n                )\n                : \"\";\n    }\n\n\n    // Only Owner Functions\n    function setIsRevealed(bool _state) public onlyOwner {\n        isRevealed = _state;\n    }\n\n    function setCost(uint256 _newCost) public onlyOwner {\n        cost = _newCost;\n    }\n\n    function setmaxMintAmount(uint256 _newmaxMintAmount) public onlyOwner {\n        maxMintAmount = _newmaxMintAmount;\n    }\n\n    function setNotRevealedURI(string memory _notRevealedURI) public onlyOwner {\n        notRevealedUri = _notRevealedURI;\n    }\n\n    function setBaseURI(string memory _newBaseURI) public onlyOwner {\n        baseURI = _newBaseURI;\n    }\n\n    function setBaseExtension(string memory _newBaseExtension)\n        public\n        onlyOwner\n    {\n        baseExtension = _newBaseExtension;\n    }\n\n    function withdraw() public payable onlyOwner {\n        (bool success, ) = payable(msg.sender).call{\n            value: address(this).balance\n        }(\"\");\n        require(success);\n    }\n}", "sourceMap": "50516:37:0:-:0;50408:3454;50516:37;;50408:3454;50516:37;;;-1:-1:-1;;;50516:37:0;;;;;;;;;;:::i;:::-;-1:-1:-1;50645:1:0;50614:32;;50652:29;;;-1:-1:-1;;50652:29:0;50677:4;50652:29;;;50722:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28207:13;;50937:5;;50944:7;;28207:13;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;28230:17:0;;;;:7;;:17;;;;;:::i;:::-;;28141:113;;48978:23;48988:12;:10;;;:12;;:::i;:::-;48978:9;:23::i;:::-;50974:4:::1;:12:::0;;;50996:9:::1;:22:::0;;;51029:24:::1;51040:12:::0;51029:10:::1;:24::i;:::-;51063:38;51081:19:::0;51063:17:::1;:38::i;:::-;50722:386:::0;;;;;;50408:3454;;26845:96;26924:10;;26845:96::o;50186:169::-;50260:6;;;-1:-1:-1;;;;;50276:17:0;;;-1:-1:-1;;;;;;50276:17:0;;;;;;;50308:40;;50260:6;;;50276:17;50260:6;;50308:40;;50241:16;;50308:40;50231:124;50186:169;:::o;53413:102::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;2338:2:1;49288:68:0;;;2320:21:1;;;2357:18;;;2350:30;-1:-1:-1;;;;;;;;;;;2396:18:1;;;2389:62;2468:18;;49288:68:0;;;;;;;;;53487:21;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;53413:102:::0;:::o;53283:124::-;49156:6;;-1:-1:-1;;;;;49156:6:0;26924:10;49296:23;49288:68;;;;-1:-1:-1;;;49288:68:0;;2338:2:1;49288:68:0;;;2320:21:1;;;2357:18;;;2350:30;-1:-1:-1;;;;;;;;;;;2396:18:1;;;2389:62;2468:18;;49288:68:0;2136:356:1;49288:68:0;53368:32;;::::1;::::0;:14:::1;::::0;:32:::1;::::0;::::1;::::0;50408:3454;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;50408:3454:0;;;-1:-1:-1;50408:3454:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:1095::-;1191:6;1199;1207;1215;1223;1231;1284:3;1272:9;1263:7;1259:23;1255:33;1252:53;;;1301:1;1298;1291:12;1252:53;1328:16;;-1:-1:-1;;;;;1393:14:1;;;1390:34;;;1420:1;1417;1410:12;1390:34;1443:61;1496:7;1487:6;1476:9;1472:22;1443:61;:::i;:::-;1433:71;;1550:2;1539:9;1535:18;1529:25;1513:41;;1579:2;1569:8;1566:16;1563:36;;;1595:1;1592;1585:12;1563:36;1618:63;1673:7;1662:8;1651:9;1647:24;1618:63;:::i;:::-;1608:73;;1721:2;1710:9;1706:18;1700:25;1690:35;;1765:2;1754:9;1750:18;1744:25;1734:35;;1815:3;1804:9;1800:19;1794:26;1778:42;;1845:2;1835:8;1832:16;1829:36;;;1861:1;1858;1851:12;1829:36;1884:63;1939:7;1928:8;1917:9;1913:24;1884:63;:::i;:::-;1874:73;;1993:3;1982:9;1978:19;1972:26;1956:42;;2023:2;2013:8;2010:16;2007:36;;;2039:1;2036;2029:12;2007:36;;2062:63;2117:7;2106:8;2095:9;2091:24;2062:63;:::i;:::-;2052:73;;;1036:1095;;;;;;;;:::o;2497:380::-;2576:1;2572:12;;;;2619;;;2640:61;;2694:4;2686:6;2682:17;2672:27;;2640:61;2747:2;2739:6;2736:14;2716:18;2713:38;2710:161;;;2793:10;2788:3;2784:20;2781:1;2774:31;2828:4;2825:1;2818:15;2856:4;2853:1;2846:15;2710:161;;2497:380;;;:::o;:::-;50408:3454:0;;;;;;", "sourcePath": "contracts/FundMePunks.sol", "deployment": {"address": "0xb85709c8826A692D866315Ed107a96C40b854cAD", "chainid": "dev", "blockHeight": 38}}